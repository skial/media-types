package uhx.types;

/* Class autogenerated by `uhx.macro.mime.TemplateBuilder.hx` */

class MediaTypes {
	static public var Application_1d_Interleaved_Parityfec : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "1d-interleaved-parityfec", subtype : null, suffix : null, parameters : null, original : "application/1d-interleaved-parityfec", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_3gpdash_Qoe_Report_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "3gpdash-qoe-report", subtype : null, suffix : "xml", parameters : null, original : "application/3gpdash-qoe-report+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_3gpp_Ims_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "3gpp-ims", subtype : null, suffix : "xml", parameters : null, original : "application/3gpp-ims+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_A2l : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "a2l", subtype : null, suffix : null, parameters : null, original : "application/a2l", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Activemessage : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "activemessage", suffix : null, parameters : null, original : "application/activemessage", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Alto_Costmap_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "alto-costmap", suffix : "json", parameters : null, original : "application/alto-costmap+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Alto_Costmapfilter_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "alto-costmapfilter", suffix : "json", parameters : null, original : "application/alto-costmapfilter+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Alto_Directory_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "alto-directory", suffix : "json", parameters : null, original : "application/alto-directory+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Alto_Endpointcost_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "alto-endpointcost", suffix : "json", parameters : null, original : "application/alto-endpointcost+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Alto_Endpointcostparams_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "alto-endpointcostparams", suffix : "json", parameters : null, original : "application/alto-endpointcostparams+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Alto_Endpointprop_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "alto-endpointprop", suffix : "json", parameters : null, original : "application/alto-endpointprop+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Alto_Endpointpropparams_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "alto-endpointpropparams", suffix : "json", parameters : null, original : "application/alto-endpointpropparams+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Alto_Error_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "alto-error", suffix : "json", parameters : null, original : "application/alto-error+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Alto_Networkmap_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "alto-networkmap", suffix : "json", parameters : null, original : "application/alto-networkmap+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Alto_Networkmapfilter_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "alto-networkmapfilter", suffix : "json", parameters : null, original : "application/alto-networkmapfilter+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Aml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "aml", suffix : null, parameters : null, original : "application/aml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Andrew_Inset : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "andrew-inset", suffix : null, parameters : null, original : "application/andrew-inset", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ez"] } : MediaTypeStruct));
	static public var Application_Applefile : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "applefile", suffix : null, parameters : null, original : "application/applefile", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Applixware : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "applixware", suffix : null, parameters : null, original : "application/applixware", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["aw"] } : MediaTypeStruct));
	static public var Application_Atf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "atf", suffix : null, parameters : null, original : "application/atf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Atfx : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "atfx", suffix : null, parameters : null, original : "application/atfx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Atom_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "atom", suffix : "xml", parameters : null, original : "application/atom+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["atom"] } : MediaTypeStruct));
	static public var Application_Atomcat_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "atomcat", suffix : "xml", parameters : null, original : "application/atomcat+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["atomcat"] } : MediaTypeStruct));
	static public var Application_Atomdeleted_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "atomdeleted", suffix : "xml", parameters : null, original : "application/atomdeleted+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Atomicmail : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "atomicmail", suffix : null, parameters : null, original : "application/atomicmail", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Atomsvc_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "atomsvc", suffix : "xml", parameters : null, original : "application/atomsvc+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["atomsvc"] } : MediaTypeStruct));
	static public var Application_Atxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "atxml", suffix : null, parameters : null, original : "application/atxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Auth_Policy_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "auth-policy", suffix : "xml", parameters : null, original : "application/auth-policy+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Bacnet_Xdd_Zip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "bacnet-xdd", suffix : "zip", parameters : null, original : "application/bacnet-xdd+zip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Batch_Smtp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "batch-smtp", suffix : null, parameters : null, original : "application/batch-smtp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Bdoc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "bdoc", suffix : null, parameters : null, original : "application/bdoc", charset : null, source : null, compressible : false, extensions : ["bdoc"] } : MediaTypeStruct));
	static public var Application_Beep_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "beep", suffix : "xml", parameters : null, original : "application/beep+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Calendar_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "calendar", suffix : "json", parameters : null, original : "application/calendar+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Calendar_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "calendar", suffix : "xml", parameters : null, original : "application/calendar+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Call_Completion : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "call-completion", suffix : null, parameters : null, original : "application/call-completion", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Cals_1840 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "cals-1840", subtype : null, suffix : null, parameters : null, original : "application/cals-1840", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Cbor : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "cbor", suffix : null, parameters : null, original : "application/cbor", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Ccmp_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "ccmp", suffix : "xml", parameters : null, original : "application/ccmp+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Ccxml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "ccxml", suffix : "xml", parameters : null, original : "application/ccxml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ccxml"] } : MediaTypeStruct));
	static public var Application_Cdfx_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "cdfx", suffix : "xml", parameters : null, original : "application/cdfx+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Cdmi_Capability : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "cdmi-capability", suffix : null, parameters : null, original : "application/cdmi-capability", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cdmia"] } : MediaTypeStruct));
	static public var Application_Cdmi_Container : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "cdmi-container", suffix : null, parameters : null, original : "application/cdmi-container", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cdmic"] } : MediaTypeStruct));
	static public var Application_Cdmi_Domain : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "cdmi-domain", suffix : null, parameters : null, original : "application/cdmi-domain", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cdmid"] } : MediaTypeStruct));
	static public var Application_Cdmi_Object : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "cdmi-object", suffix : null, parameters : null, original : "application/cdmi-object", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cdmio"] } : MediaTypeStruct));
	static public var Application_Cdmi_Queue : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "cdmi-queue", suffix : null, parameters : null, original : "application/cdmi-queue", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cdmiq"] } : MediaTypeStruct));
	static public var Application_Cdni : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "cdni", suffix : null, parameters : null, original : "application/cdni", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Cea : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "cea", suffix : null, parameters : null, original : "application/cea", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Cea_2018_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "cea-2018", subtype : null, suffix : "xml", parameters : null, original : "application/cea-2018+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Cellml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "cellml", suffix : "xml", parameters : null, original : "application/cellml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Cfw : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "cfw", suffix : null, parameters : null, original : "application/cfw", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Clue : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "clue", suffix : null, parameters : null, original : "application/clue", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Cms : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "cms", suffix : null, parameters : null, original : "application/cms", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Cnrp_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "cnrp", suffix : "xml", parameters : null, original : "application/cnrp+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Coap_Group_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "coap-group", suffix : "json", parameters : null, original : "application/coap-group+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Commonground : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "commonground", suffix : null, parameters : null, original : "application/commonground", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Conference_Info_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "conference-info", suffix : "xml", parameters : null, original : "application/conference-info+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Cpl_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "cpl", suffix : "xml", parameters : null, original : "application/cpl+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Csrattrs : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "csrattrs", suffix : null, parameters : null, original : "application/csrattrs", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Csta_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "csta", suffix : "xml", parameters : null, original : "application/csta+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Cstadata_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "cstadata", suffix : "xml", parameters : null, original : "application/cstadata+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Csvm_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "csvm", suffix : "json", parameters : null, original : "application/csvm+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Cu_Seeme : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "cu-seeme", suffix : null, parameters : null, original : "application/cu-seeme", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["cu"] } : MediaTypeStruct));
	static public var Application_Cybercash : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "cybercash", suffix : null, parameters : null, original : "application/cybercash", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Dart : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "dart", suffix : null, parameters : null, original : "application/dart", charset : null, source : null, compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Dash_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "dash", suffix : "xml", parameters : null, original : "application/dash+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mpd"] } : MediaTypeStruct));
	static public var Application_Dashdelta : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "dashdelta", suffix : null, parameters : null, original : "application/dashdelta", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Davmount_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "davmount", suffix : "xml", parameters : null, original : "application/davmount+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["davmount"] } : MediaTypeStruct));
	static public var Application_Dca_Rft : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "dca-rft", suffix : null, parameters : null, original : "application/dca-rft", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Dcd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "dcd", suffix : null, parameters : null, original : "application/dcd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Dec_Dx : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "dec-dx", suffix : null, parameters : null, original : "application/dec-dx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Dialog_Info_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "dialog-info", suffix : "xml", parameters : null, original : "application/dialog-info+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Dicom : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "dicom", suffix : null, parameters : null, original : "application/dicom", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Dicom_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "dicom", suffix : "json", parameters : null, original : "application/dicom+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Dicom_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "dicom", suffix : "xml", parameters : null, original : "application/dicom+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Dii : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "dii", suffix : null, parameters : null, original : "application/dii", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Dit : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "dit", suffix : null, parameters : null, original : "application/dit", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Dns : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "dns", suffix : null, parameters : null, original : "application/dns", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Docbook_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "docbook", suffix : "xml", parameters : null, original : "application/docbook+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["dbk"] } : MediaTypeStruct));
	static public var Application_Dskpp_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "dskpp", suffix : "xml", parameters : null, original : "application/dskpp+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Dssc_Der : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "dssc", suffix : "der", parameters : null, original : "application/dssc+der", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dssc"] } : MediaTypeStruct));
	static public var Application_Dssc_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "dssc", suffix : "xml", parameters : null, original : "application/dssc+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xdssc"] } : MediaTypeStruct));
	static public var Application_Dvcs : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "dvcs", suffix : null, parameters : null, original : "application/dvcs", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Ecmascript : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "ecmascript", suffix : null, parameters : null, original : "application/ecmascript", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["ecma"] } : MediaTypeStruct));
	static public var Application_Edi_Consent : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "edi-consent", suffix : null, parameters : null, original : "application/edi-consent", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Edi_X12 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "edi-x12", subtype : null, suffix : null, parameters : null, original : "application/edi-x12", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : null } : MediaTypeStruct));
	static public var Application_Edifact : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "edifact", suffix : null, parameters : null, original : "application/edifact", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : null } : MediaTypeStruct));
	static public var Application_Efi : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "efi", suffix : null, parameters : null, original : "application/efi", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Emergencycalldata_Comment_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "emergencycalldata.comment", subtype : null, suffix : "xml", parameters : null, original : "application/emergencycalldata.comment+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Emergencycalldata_Deviceinfo_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "emergencycalldata.deviceinfo", subtype : null, suffix : "xml", parameters : null, original : "application/emergencycalldata.deviceinfo+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Emergencycalldata_Providerinfo_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "emergencycalldata.providerinfo", subtype : null, suffix : "xml", parameters : null, original : "application/emergencycalldata.providerinfo+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Emergencycalldata_Serviceinfo_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "emergencycalldata.serviceinfo", subtype : null, suffix : "xml", parameters : null, original : "application/emergencycalldata.serviceinfo+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Emergencycalldata_Subscriberinfo_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "emergencycalldata.subscriberinfo", subtype : null, suffix : "xml", parameters : null, original : "application/emergencycalldata.subscriberinfo+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Emma_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "emma", suffix : "xml", parameters : null, original : "application/emma+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["emma"] } : MediaTypeStruct));
	static public var Application_Emotionml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "emotionml", suffix : "xml", parameters : null, original : "application/emotionml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Encaprtp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "encaprtp", suffix : null, parameters : null, original : "application/encaprtp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Epp_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "epp", suffix : "xml", parameters : null, original : "application/epp+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Epub_Zip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "epub", suffix : "zip", parameters : null, original : "application/epub+zip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["epub"] } : MediaTypeStruct));
	static public var Application_Eshop : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "eshop", suffix : null, parameters : null, original : "application/eshop", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Exi : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "exi", suffix : null, parameters : null, original : "application/exi", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["exi"] } : MediaTypeStruct));
	static public var Application_Fastinfoset : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "fastinfoset", suffix : null, parameters : null, original : "application/fastinfoset", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Fastsoap : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "fastsoap", suffix : null, parameters : null, original : "application/fastsoap", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Fdt_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "fdt", suffix : "xml", parameters : null, original : "application/fdt+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Fits : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "fits", suffix : null, parameters : null, original : "application/fits", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Font_Sfnt : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "font-sfnt", suffix : null, parameters : null, original : "application/font-sfnt", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Font_Tdpfr : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "font-tdpfr", suffix : null, parameters : null, original : "application/font-tdpfr", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pfr"] } : MediaTypeStruct));
	static public var Application_Font_Woff : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "font-woff", suffix : null, parameters : null, original : "application/font-woff", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["woff"] } : MediaTypeStruct));
	static public var Application_Font_Woff2 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "font-woff2", subtype : null, suffix : null, parameters : null, original : "application/font-woff2", charset : null, source : null, compressible : false, extensions : ["woff2"] } : MediaTypeStruct));
	static public var Application_Framework_Attributes_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "framework-attributes", suffix : "xml", parameters : null, original : "application/framework-attributes+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Geo_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "geo", suffix : "json", parameters : null, original : "application/geo+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Gml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "gml", suffix : "xml", parameters : null, original : "application/gml+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["gml"] } : MediaTypeStruct));
	static public var Application_Gpx_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "gpx", suffix : "xml", parameters : null, original : "application/gpx+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["gpx"] } : MediaTypeStruct));
	static public var Application_Gxf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "gxf", suffix : null, parameters : null, original : "application/gxf", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["gxf"] } : MediaTypeStruct));
	static public var Application_Gzip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "gzip", suffix : null, parameters : null, original : "application/gzip", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : null } : MediaTypeStruct));
	static public var Application_H224 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "h224", subtype : null, suffix : null, parameters : null, original : "application/h224", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Held_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "held", suffix : "xml", parameters : null, original : "application/held+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Http : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "http", suffix : null, parameters : null, original : "application/http", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Hyperstudio : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "hyperstudio", suffix : null, parameters : null, original : "application/hyperstudio", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["stk"] } : MediaTypeStruct));
	static public var Application_Ibe_Key_Request_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "ibe-key-request", suffix : "xml", parameters : null, original : "application/ibe-key-request+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Ibe_Pkg_Reply_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "ibe-pkg-reply", suffix : "xml", parameters : null, original : "application/ibe-pkg-reply+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Ibe_Pp_Data : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "ibe-pp-data", suffix : null, parameters : null, original : "application/ibe-pp-data", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Iges : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "iges", suffix : null, parameters : null, original : "application/iges", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Im_Iscomposing_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "im-iscomposing", suffix : "xml", parameters : null, original : "application/im-iscomposing+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Index : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "index", suffix : null, parameters : null, original : "application/index", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Index_Cmd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "index.cmd", subtype : null, suffix : null, parameters : null, original : "application/index.cmd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Index_Obj : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "index.obj", subtype : null, suffix : null, parameters : null, original : "application/index.obj", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Index_Response : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "index.response", subtype : null, suffix : null, parameters : null, original : "application/index.response", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Index_Vnd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "index.vnd", subtype : null, suffix : null, parameters : null, original : "application/index.vnd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Inkml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "inkml", suffix : "xml", parameters : null, original : "application/inkml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ink", "inkml"] } : MediaTypeStruct));
	static public var Application_Iotp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "iotp", suffix : null, parameters : null, original : "application/iotp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Ipfix : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "ipfix", suffix : null, parameters : null, original : "application/ipfix", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ipfix"] } : MediaTypeStruct));
	static public var Application_Ipp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "ipp", suffix : null, parameters : null, original : "application/ipp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Isup : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "isup", suffix : null, parameters : null, original : "application/isup", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Its_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "its", suffix : "xml", parameters : null, original : "application/its+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Java_Archive : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "java-archive", suffix : null, parameters : null, original : "application/java-archive", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["jar", "war", "ear"] } : MediaTypeStruct));
	static public var Application_Java_Serialized_Object : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "java-serialized-object", suffix : null, parameters : null, original : "application/java-serialized-object", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["ser"] } : MediaTypeStruct));
	static public var Application_Java_Vm : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "java-vm", suffix : null, parameters : null, original : "application/java-vm", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["class"] } : MediaTypeStruct));
	static public var Application_Javascript : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "javascript", suffix : null, parameters : null, original : "application/javascript", charset : "UTF-8", source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["js"] } : MediaTypeStruct));
	static public var Application_Jose : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "jose", suffix : null, parameters : null, original : "application/jose", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Jose_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "jose", suffix : "json", parameters : null, original : "application/jose+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Jrd_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "jrd", suffix : "json", parameters : null, original : "application/jrd+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "json", suffix : null, parameters : null, original : "application/json", charset : "UTF-8", source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["json", "map"] } : MediaTypeStruct));
	static public var Application_Json5 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "json5", subtype : null, suffix : null, parameters : null, original : "application/json5", charset : null, source : null, compressible : null, extensions : ["json5"] } : MediaTypeStruct));
	static public var Application_Json_Patch_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "json-patch", suffix : "json", parameters : null, original : "application/json-patch+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Json_Seq : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "json-seq", suffix : null, parameters : null, original : "application/json-seq", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Jsonml_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "jsonml", suffix : "json", parameters : null, original : "application/jsonml+json", charset : null, source : (("apache" : MediaTypeSource)), compressible : true, extensions : ["jsonml"] } : MediaTypeStruct));
	static public var Application_Jwk_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "jwk", suffix : "json", parameters : null, original : "application/jwk+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Jwk_Set_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "jwk-set", suffix : "json", parameters : null, original : "application/jwk-set+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Jwt : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "jwt", suffix : null, parameters : null, original : "application/jwt", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Kpml_Request_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "kpml-request", suffix : "xml", parameters : null, original : "application/kpml-request+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Kpml_Response_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "kpml-response", suffix : "xml", parameters : null, original : "application/kpml-response+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Ld_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "ld", suffix : "json", parameters : null, original : "application/ld+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["jsonld"] } : MediaTypeStruct));
	static public var Application_Lgr_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "lgr", suffix : "xml", parameters : null, original : "application/lgr+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Link_Format : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "link-format", suffix : null, parameters : null, original : "application/link-format", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Load_Control_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "load-control", suffix : "xml", parameters : null, original : "application/load-control+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Lost_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "lost", suffix : "xml", parameters : null, original : "application/lost+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["lostxml"] } : MediaTypeStruct));
	static public var Application_Lostsync_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "lostsync", suffix : "xml", parameters : null, original : "application/lostsync+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Lxf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "lxf", suffix : null, parameters : null, original : "application/lxf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mac_Binhex40 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "mac-binhex40", subtype : null, suffix : null, parameters : null, original : "application/mac-binhex40", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["hqx"] } : MediaTypeStruct));
	static public var Application_Mac_Compactpro : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "mac-compactpro", suffix : null, parameters : null, original : "application/mac-compactpro", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["cpt"] } : MediaTypeStruct));
	static public var Application_Macwriteii : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "macwriteii", suffix : null, parameters : null, original : "application/macwriteii", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mads_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mads", suffix : "xml", parameters : null, original : "application/mads+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mads"] } : MediaTypeStruct));
	static public var Application_Manifest_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "manifest", suffix : "json", parameters : null, original : "application/manifest+json", charset : "UTF-8", source : null, compressible : true, extensions : ["webmanifest"] } : MediaTypeStruct));
	static public var Application_Marc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "marc", suffix : null, parameters : null, original : "application/marc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mrc"] } : MediaTypeStruct));
	static public var Application_Marcxml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "marcxml", suffix : "xml", parameters : null, original : "application/marcxml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mrcx"] } : MediaTypeStruct));
	static public var Application_Mathematica : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "mathematica", suffix : null, parameters : null, original : "application/mathematica", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ma", "nb", "mb"] } : MediaTypeStruct));
	static public var Application_Mathml_Content_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mathml-content", suffix : "xml", parameters : null, original : "application/mathml-content+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mathml_Presentation_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mathml-presentation", suffix : "xml", parameters : null, original : "application/mathml-presentation+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mathml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mathml", suffix : "xml", parameters : null, original : "application/mathml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mathml"] } : MediaTypeStruct));
	static public var Application_Mbms_Associated_Procedure_Description_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mbms-associated-procedure-description", suffix : "xml", parameters : null, original : "application/mbms-associated-procedure-description+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mbms_Deregister_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mbms-deregister", suffix : "xml", parameters : null, original : "application/mbms-deregister+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mbms_Envelope_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mbms-envelope", suffix : "xml", parameters : null, original : "application/mbms-envelope+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mbms_Msk_Response_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mbms-msk-response", suffix : "xml", parameters : null, original : "application/mbms-msk-response+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mbms_Msk_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mbms-msk", suffix : "xml", parameters : null, original : "application/mbms-msk+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mbms_Protection_Description_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mbms-protection-description", suffix : "xml", parameters : null, original : "application/mbms-protection-description+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mbms_Reception_Report_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mbms-reception-report", suffix : "xml", parameters : null, original : "application/mbms-reception-report+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mbms_Register_Response_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mbms-register-response", suffix : "xml", parameters : null, original : "application/mbms-register-response+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mbms_Register_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mbms-register", suffix : "xml", parameters : null, original : "application/mbms-register+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mbms_Schedule_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mbms-schedule", suffix : "xml", parameters : null, original : "application/mbms-schedule+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mbms_User_Service_Description_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mbms-user-service-description", suffix : "xml", parameters : null, original : "application/mbms-user-service-description+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mbox : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "mbox", suffix : null, parameters : null, original : "application/mbox", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mbox"] } : MediaTypeStruct));
	static public var Application_Media : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "media", suffix : null, parameters : null, original : "application/media", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Media_Policy_Dataset_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "media-policy-dataset", suffix : "xml", parameters : null, original : "application/media-policy-dataset+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mediaservercontrol_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mediaservercontrol", suffix : "xml", parameters : null, original : "application/mediaservercontrol+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mscml"] } : MediaTypeStruct));
	static public var Application_Merge_Patch_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "merge-patch", suffix : "json", parameters : null, original : "application/merge-patch+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Metalink4_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "metalink4", subtype : null, suffix : "xml", parameters : null, original : "application/metalink4+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["meta4"] } : MediaTypeStruct));
	static public var Application_Metalink_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "metalink", suffix : "xml", parameters : null, original : "application/metalink+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["metalink"] } : MediaTypeStruct));
	static public var Application_Mets_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mets", suffix : "xml", parameters : null, original : "application/mets+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mets"] } : MediaTypeStruct));
	static public var Application_Mf4 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "mf4", subtype : null, suffix : null, parameters : null, original : "application/mf4", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mikey : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "mikey", suffix : null, parameters : null, original : "application/mikey", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mods_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mods", suffix : "xml", parameters : null, original : "application/mods+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mods"] } : MediaTypeStruct));
	static public var Application_Moss_Keys : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "moss-keys", suffix : null, parameters : null, original : "application/moss-keys", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Moss_Signature : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "moss-signature", suffix : null, parameters : null, original : "application/moss-signature", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mosskey_Data : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "mosskey-data", suffix : null, parameters : null, original : "application/mosskey-data", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mosskey_Request : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "mosskey-request", suffix : null, parameters : null, original : "application/mosskey-request", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mp21 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "mp21", subtype : null, suffix : null, parameters : null, original : "application/mp21", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["m21", "mp21"] } : MediaTypeStruct));
	static public var Application_Mp4 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "mp4", subtype : null, suffix : null, parameters : null, original : "application/mp4", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mp4s", "m4p"] } : MediaTypeStruct));
	static public var Application_Mpeg4_Generic : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "mpeg4-generic", subtype : null, suffix : null, parameters : null, original : "application/mpeg4-generic", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mpeg4_Iod : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "mpeg4-iod", subtype : null, suffix : null, parameters : null, original : "application/mpeg4-iod", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mpeg4_Iod_Xmt : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "mpeg4-iod-xmt", subtype : null, suffix : null, parameters : null, original : "application/mpeg4-iod-xmt", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mrb_Consumer_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mrb-consumer", suffix : "xml", parameters : null, original : "application/mrb-consumer+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Mrb_Publish_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "mrb-publish", suffix : "xml", parameters : null, original : "application/mrb-publish+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Msc_Ivr_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "msc-ivr", suffix : "xml", parameters : null, original : "application/msc-ivr+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Msc_Mixer_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "msc-mixer", suffix : "xml", parameters : null, original : "application/msc-mixer+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Msword : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "msword", suffix : null, parameters : null, original : "application/msword", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["doc", "dot"] } : MediaTypeStruct));
	static public var Application_Mxf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "mxf", suffix : null, parameters : null, original : "application/mxf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mxf"] } : MediaTypeStruct));
	static public var Application_Nasdata : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "nasdata", suffix : null, parameters : null, original : "application/nasdata", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_News_Checkgroups : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "news-checkgroups", suffix : null, parameters : null, original : "application/news-checkgroups", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_News_Groupinfo : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "news-groupinfo", suffix : null, parameters : null, original : "application/news-groupinfo", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_News_Transmission : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "news-transmission", suffix : null, parameters : null, original : "application/news-transmission", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Nlsml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "nlsml", suffix : "xml", parameters : null, original : "application/nlsml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Nss : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "nss", suffix : null, parameters : null, original : "application/nss", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Ocsp_Request : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "ocsp-request", suffix : null, parameters : null, original : "application/ocsp-request", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Ocsp_Response : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "ocsp-response", suffix : null, parameters : null, original : "application/ocsp-response", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Octet_Stream : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "octet-stream", suffix : null, parameters : null, original : "application/octet-stream", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"] } : MediaTypeStruct));
	static public var Application_Oda : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "oda", suffix : null, parameters : null, original : "application/oda", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["oda"] } : MediaTypeStruct));
	static public var Application_Odx : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "odx", suffix : null, parameters : null, original : "application/odx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Oebps_Package_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "oebps-package", suffix : "xml", parameters : null, original : "application/oebps-package+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["opf"] } : MediaTypeStruct));
	static public var Application_Ogg : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "ogg", suffix : null, parameters : null, original : "application/ogg", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["ogx"] } : MediaTypeStruct));
	static public var Application_Omdoc_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "omdoc", suffix : "xml", parameters : null, original : "application/omdoc+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["omdoc"] } : MediaTypeStruct));
	static public var Application_Onenote : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "onenote", suffix : null, parameters : null, original : "application/onenote", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["onetoc", "onetoc2", "onetmp", "onepkg"] } : MediaTypeStruct));
	static public var Application_Oxps : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "oxps", suffix : null, parameters : null, original : "application/oxps", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["oxps"] } : MediaTypeStruct));
	static public var Application_P2p_Overlay_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "p2p-overlay", subtype : null, suffix : "xml", parameters : null, original : "application/p2p-overlay+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Parityfec : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "parityfec", suffix : null, parameters : null, original : "application/parityfec", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Patch_Ops_Error_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "patch-ops-error", suffix : "xml", parameters : null, original : "application/patch-ops-error+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xer"] } : MediaTypeStruct));
	static public var Application_Pdf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "pdf", suffix : null, parameters : null, original : "application/pdf", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["pdf"] } : MediaTypeStruct));
	static public var Application_Pdx : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "pdx", suffix : null, parameters : null, original : "application/pdx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Pgp_Encrypted : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "pgp-encrypted", suffix : null, parameters : null, original : "application/pgp-encrypted", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["pgp"] } : MediaTypeStruct));
	static public var Application_Pgp_Keys : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "pgp-keys", suffix : null, parameters : null, original : "application/pgp-keys", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Pgp_Signature : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "pgp-signature", suffix : null, parameters : null, original : "application/pgp-signature", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["asc", "sig"] } : MediaTypeStruct));
	static public var Application_Pics_Rules : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "pics-rules", suffix : null, parameters : null, original : "application/pics-rules", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["prf"] } : MediaTypeStruct));
	static public var Application_Pidf_Diff_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "pidf-diff", suffix : "xml", parameters : null, original : "application/pidf-diff+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Pidf_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "pidf", suffix : "xml", parameters : null, original : "application/pidf+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Pkcs10 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "pkcs10", subtype : null, suffix : null, parameters : null, original : "application/pkcs10", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["p10"] } : MediaTypeStruct));
	static public var Application_Pkcs12 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "pkcs12", subtype : null, suffix : null, parameters : null, original : "application/pkcs12", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Pkcs7_Mime : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "pkcs7-mime", subtype : null, suffix : null, parameters : null, original : "application/pkcs7-mime", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["p7m", "p7c"] } : MediaTypeStruct));
	static public var Application_Pkcs7_Signature : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "pkcs7-signature", subtype : null, suffix : null, parameters : null, original : "application/pkcs7-signature", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["p7s"] } : MediaTypeStruct));
	static public var Application_Pkcs8 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "pkcs8", subtype : null, suffix : null, parameters : null, original : "application/pkcs8", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["p8"] } : MediaTypeStruct));
	static public var Application_Pkix_Attr_Cert : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "pkix-attr-cert", suffix : null, parameters : null, original : "application/pkix-attr-cert", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ac"] } : MediaTypeStruct));
	static public var Application_Pkix_Cert : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "pkix-cert", suffix : null, parameters : null, original : "application/pkix-cert", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cer"] } : MediaTypeStruct));
	static public var Application_Pkix_Crl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "pkix-crl", suffix : null, parameters : null, original : "application/pkix-crl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["crl"] } : MediaTypeStruct));
	static public var Application_Pkix_Pkipath : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "pkix-pkipath", suffix : null, parameters : null, original : "application/pkix-pkipath", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pkipath"] } : MediaTypeStruct));
	static public var Application_Pkixcmp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "pkixcmp", suffix : null, parameters : null, original : "application/pkixcmp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pki"] } : MediaTypeStruct));
	static public var Application_Pls_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "pls", suffix : "xml", parameters : null, original : "application/pls+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pls"] } : MediaTypeStruct));
	static public var Application_Poc_Settings_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "poc-settings", suffix : "xml", parameters : null, original : "application/poc-settings+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Postscript : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "postscript", suffix : null, parameters : null, original : "application/postscript", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["ai", "eps", "ps"] } : MediaTypeStruct));
	static public var Application_Ppsp_Tracker_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "ppsp-tracker", suffix : "json", parameters : null, original : "application/ppsp-tracker+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Problem_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "problem", suffix : "json", parameters : null, original : "application/problem+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Problem_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "problem", suffix : "xml", parameters : null, original : "application/problem+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Provenance_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "provenance", suffix : "xml", parameters : null, original : "application/provenance+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Prs_Alvestrand_Titrax_Sheet : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : true, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "prs.alvestrand.titrax-sheet", subtype : null, suffix : null, parameters : null, original : "application/prs.alvestrand.titrax-sheet", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Prs_Cww : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : true, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "prs.cww", subtype : null, suffix : null, parameters : null, original : "application/prs.cww", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cww"] } : MediaTypeStruct));
	static public var Application_Prs_Hpub_Zip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : true, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "prs.hpub", subtype : null, suffix : "zip", parameters : null, original : "application/prs.hpub+zip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Prs_Nprend : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : true, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "prs.nprend", subtype : null, suffix : null, parameters : null, original : "application/prs.nprend", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Prs_Plucker : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : true, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "prs.plucker", subtype : null, suffix : null, parameters : null, original : "application/prs.plucker", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Prs_Rdf_Xml_Crypt : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : true, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "prs.rdf-xml-crypt", subtype : null, suffix : null, parameters : null, original : "application/prs.rdf-xml-crypt", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Prs_Xsf_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : true, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "prs.xsf", subtype : null, suffix : "xml", parameters : null, original : "application/prs.xsf+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Pskc_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "pskc", suffix : "xml", parameters : null, original : "application/pskc+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pskcxml"] } : MediaTypeStruct));
	static public var Application_Qsig : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "qsig", suffix : null, parameters : null, original : "application/qsig", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Raptorfec : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "raptorfec", suffix : null, parameters : null, original : "application/raptorfec", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Rdap_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "rdap", suffix : "json", parameters : null, original : "application/rdap+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Rdf_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "rdf", suffix : "xml", parameters : null, original : "application/rdf+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["rdf"] } : MediaTypeStruct));
	static public var Application_Reginfo_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "reginfo", suffix : "xml", parameters : null, original : "application/reginfo+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rif"] } : MediaTypeStruct));
	static public var Application_Relax_Ng_Compact_Syntax : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "relax-ng-compact-syntax", suffix : null, parameters : null, original : "application/relax-ng-compact-syntax", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rnc"] } : MediaTypeStruct));
	static public var Application_Remote_Printing : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "remote-printing", suffix : null, parameters : null, original : "application/remote-printing", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Reputon_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "reputon", suffix : "json", parameters : null, original : "application/reputon+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Resource_Lists_Diff_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "resource-lists-diff", suffix : "xml", parameters : null, original : "application/resource-lists-diff+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rld"] } : MediaTypeStruct));
	static public var Application_Resource_Lists_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "resource-lists", suffix : "xml", parameters : null, original : "application/resource-lists+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rl"] } : MediaTypeStruct));
	static public var Application_Rfc_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "rfc", suffix : "xml", parameters : null, original : "application/rfc+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Riscos : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "riscos", suffix : null, parameters : null, original : "application/riscos", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Rlmi_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "rlmi", suffix : "xml", parameters : null, original : "application/rlmi+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Rls_Services_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "rls-services", suffix : "xml", parameters : null, original : "application/rls-services+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rs"] } : MediaTypeStruct));
	static public var Application_Rpki_Ghostbusters : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "rpki-ghostbusters", suffix : null, parameters : null, original : "application/rpki-ghostbusters", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["gbr"] } : MediaTypeStruct));
	static public var Application_Rpki_Manifest : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "rpki-manifest", suffix : null, parameters : null, original : "application/rpki-manifest", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mft"] } : MediaTypeStruct));
	static public var Application_Rpki_Roa : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "rpki-roa", suffix : null, parameters : null, original : "application/rpki-roa", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["roa"] } : MediaTypeStruct));
	static public var Application_Rpki_Updown : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "rpki-updown", suffix : null, parameters : null, original : "application/rpki-updown", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Rsd_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "rsd", suffix : "xml", parameters : null, original : "application/rsd+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["rsd"] } : MediaTypeStruct));
	static public var Application_Rss_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "rss", suffix : "xml", parameters : null, original : "application/rss+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : true, extensions : ["rss"] } : MediaTypeStruct));
	static public var Application_Rtf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "rtf", suffix : null, parameters : null, original : "application/rtf", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["rtf"] } : MediaTypeStruct));
	static public var Application_Rtploopback : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "rtploopback", suffix : null, parameters : null, original : "application/rtploopback", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Rtx : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "rtx", suffix : null, parameters : null, original : "application/rtx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Samlassertion_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "samlassertion", suffix : "xml", parameters : null, original : "application/samlassertion+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Samlmetadata_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "samlmetadata", suffix : "xml", parameters : null, original : "application/samlmetadata+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Sbml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "sbml", suffix : "xml", parameters : null, original : "application/sbml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sbml"] } : MediaTypeStruct));
	static public var Application_Scaip_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "scaip", suffix : "xml", parameters : null, original : "application/scaip+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Scim_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "scim", suffix : "json", parameters : null, original : "application/scim+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Scvp_Cv_Request : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "scvp-cv-request", suffix : null, parameters : null, original : "application/scvp-cv-request", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["scq"] } : MediaTypeStruct));
	static public var Application_Scvp_Cv_Response : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "scvp-cv-response", suffix : null, parameters : null, original : "application/scvp-cv-response", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["scs"] } : MediaTypeStruct));
	static public var Application_Scvp_Vp_Request : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "scvp-vp-request", suffix : null, parameters : null, original : "application/scvp-vp-request", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["spq"] } : MediaTypeStruct));
	static public var Application_Scvp_Vp_Response : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "scvp-vp-response", suffix : null, parameters : null, original : "application/scvp-vp-response", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["spp"] } : MediaTypeStruct));
	static public var Application_Sdp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "sdp", suffix : null, parameters : null, original : "application/sdp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sdp"] } : MediaTypeStruct));
	static public var Application_Sep_Exi : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "sep-exi", suffix : null, parameters : null, original : "application/sep-exi", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Sep_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "sep", suffix : "xml", parameters : null, original : "application/sep+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Session_Info : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "session-info", suffix : null, parameters : null, original : "application/session-info", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Set_Payment : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "set-payment", suffix : null, parameters : null, original : "application/set-payment", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Set_Payment_Initiation : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "set-payment-initiation", suffix : null, parameters : null, original : "application/set-payment-initiation", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["setpay"] } : MediaTypeStruct));
	static public var Application_Set_Registration : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "set-registration", suffix : null, parameters : null, original : "application/set-registration", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Set_Registration_Initiation : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "set-registration-initiation", suffix : null, parameters : null, original : "application/set-registration-initiation", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["setreg"] } : MediaTypeStruct));
	static public var Application_Sgml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "sgml", suffix : null, parameters : null, original : "application/sgml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Sgml_Open_Catalog : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "sgml-open-catalog", suffix : null, parameters : null, original : "application/sgml-open-catalog", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Shf_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "shf", suffix : "xml", parameters : null, original : "application/shf+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["shf"] } : MediaTypeStruct));
	static public var Application_Sieve : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "sieve", suffix : null, parameters : null, original : "application/sieve", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Simple_Filter_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "simple-filter", suffix : "xml", parameters : null, original : "application/simple-filter+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Simple_Message_Summary : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "simple-message-summary", suffix : null, parameters : null, original : "application/simple-message-summary", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Simplesymbolcontainer : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "simplesymbolcontainer", suffix : null, parameters : null, original : "application/simplesymbolcontainer", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Slate : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "slate", suffix : null, parameters : null, original : "application/slate", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Smil : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "smil", suffix : null, parameters : null, original : "application/smil", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Smil_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "smil", suffix : "xml", parameters : null, original : "application/smil+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["smi", "smil"] } : MediaTypeStruct));
	static public var Application_Smpte336m : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "smpte336m", subtype : null, suffix : null, parameters : null, original : "application/smpte336m", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Soap_Fastinfoset : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "soap", suffix : "fastinfoset", parameters : null, original : "application/soap+fastinfoset", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Soap_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "soap", suffix : "xml", parameters : null, original : "application/soap+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Sparql_Query : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "sparql-query", suffix : null, parameters : null, original : "application/sparql-query", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rq"] } : MediaTypeStruct));
	static public var Application_Sparql_Results_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "sparql-results", suffix : "xml", parameters : null, original : "application/sparql-results+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["srx"] } : MediaTypeStruct));
	static public var Application_Spirits_Event_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "spirits-event", suffix : "xml", parameters : null, original : "application/spirits-event+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Sql : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "sql", suffix : null, parameters : null, original : "application/sql", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Srgs : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "srgs", suffix : null, parameters : null, original : "application/srgs", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["gram"] } : MediaTypeStruct));
	static public var Application_Srgs_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "srgs", suffix : "xml", parameters : null, original : "application/srgs+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["grxml"] } : MediaTypeStruct));
	static public var Application_Sru_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "sru", suffix : "xml", parameters : null, original : "application/sru+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sru"] } : MediaTypeStruct));
	static public var Application_Ssdl_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "ssdl", suffix : "xml", parameters : null, original : "application/ssdl+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["ssdl"] } : MediaTypeStruct));
	static public var Application_Ssml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "ssml", suffix : "xml", parameters : null, original : "application/ssml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ssml"] } : MediaTypeStruct));
	static public var Application_Tamp_Apex_Update : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "tamp-apex-update", suffix : null, parameters : null, original : "application/tamp-apex-update", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Tamp_Apex_Update_Confirm : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "tamp-apex-update-confirm", suffix : null, parameters : null, original : "application/tamp-apex-update-confirm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Tamp_Community_Update : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "tamp-community-update", suffix : null, parameters : null, original : "application/tamp-community-update", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Tamp_Community_Update_Confirm : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "tamp-community-update-confirm", suffix : null, parameters : null, original : "application/tamp-community-update-confirm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Tamp_Error : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "tamp-error", suffix : null, parameters : null, original : "application/tamp-error", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Tamp_Sequence_Adjust : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "tamp-sequence-adjust", suffix : null, parameters : null, original : "application/tamp-sequence-adjust", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Tamp_Sequence_Adjust_Confirm : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "tamp-sequence-adjust-confirm", suffix : null, parameters : null, original : "application/tamp-sequence-adjust-confirm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Tamp_Status_Query : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "tamp-status-query", suffix : null, parameters : null, original : "application/tamp-status-query", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Tamp_Status_Response : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "tamp-status-response", suffix : null, parameters : null, original : "application/tamp-status-response", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Tamp_Update : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "tamp-update", suffix : null, parameters : null, original : "application/tamp-update", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Tamp_Update_Confirm : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "tamp-update-confirm", suffix : null, parameters : null, original : "application/tamp-update-confirm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Tar : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "tar", suffix : null, parameters : null, original : "application/tar", charset : null, source : null, compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Tei_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "tei", suffix : "xml", parameters : null, original : "application/tei+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["tei", "teicorpus"] } : MediaTypeStruct));
	static public var Application_Thraud_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "thraud", suffix : "xml", parameters : null, original : "application/thraud+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["tfi"] } : MediaTypeStruct));
	static public var Application_Timestamp_Query : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "timestamp-query", suffix : null, parameters : null, original : "application/timestamp-query", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Timestamp_Reply : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "timestamp-reply", suffix : null, parameters : null, original : "application/timestamp-reply", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Timestamped_Data : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "timestamped-data", suffix : null, parameters : null, original : "application/timestamped-data", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["tsd"] } : MediaTypeStruct));
	static public var Application_Ttml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "ttml", suffix : "xml", parameters : null, original : "application/ttml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Tve_Trigger : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "tve-trigger", suffix : null, parameters : null, original : "application/tve-trigger", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Ulpfec : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "ulpfec", suffix : null, parameters : null, original : "application/ulpfec", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Urc_Grpsheet_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "urc-grpsheet", suffix : "xml", parameters : null, original : "application/urc-grpsheet+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Urc_Ressheet_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "urc-ressheet", suffix : "xml", parameters : null, original : "application/urc-ressheet+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Urc_Targetdesc_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "urc-targetdesc", suffix : "xml", parameters : null, original : "application/urc-targetdesc+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Urc_Uisocketdesc_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "urc-uisocketdesc", suffix : "xml", parameters : null, original : "application/urc-uisocketdesc+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vcard_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "vcard", suffix : "json", parameters : null, original : "application/vcard+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vcard_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "vcard", suffix : "xml", parameters : null, original : "application/vcard+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vemmi : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "vemmi", suffix : null, parameters : null, original : "application/vemmi", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vividence_Scriptfile : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vividence.scriptfile", subtype : null, suffix : null, parameters : null, original : "application/vividence.scriptfile", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3gpp2_Bcmcsinfo_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.3gpp2.bcmcsinfo", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.3gpp2.bcmcsinfo+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3gpp2_Sms : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.3gpp2.sms", subtype : null, suffix : null, parameters : null, original : "application/vnd.3gpp2.sms", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3gpp2_Tcap : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.3gpp2.tcap", subtype : null, suffix : null, parameters : null, original : "application/vnd.3gpp2.tcap", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["tcap"] } : MediaTypeStruct));
	static public var Application_Vnd_3gpp_Access_Transfer_Events_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.3gpp.access-transfer-events", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.3gpp.access-transfer-events+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3gpp_Bsf_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.3gpp.bsf", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.3gpp.bsf+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3gpp_Mid_Call_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.3gpp.mid-call", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.3gpp.mid-call+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3gpp_Pic_Bw_Large : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.3gpp.pic-bw-large", subtype : null, suffix : null, parameters : null, original : "application/vnd.3gpp.pic-bw-large", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["plb"] } : MediaTypeStruct));
	static public var Application_Vnd_3gpp_Pic_Bw_Small : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.3gpp.pic-bw-small", subtype : null, suffix : null, parameters : null, original : "application/vnd.3gpp.pic-bw-small", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["psb"] } : MediaTypeStruct));
	static public var Application_Vnd_3gpp_Pic_Bw_Var : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.3gpp.pic-bw-var", subtype : null, suffix : null, parameters : null, original : "application/vnd.3gpp.pic-bw-var", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pvb"] } : MediaTypeStruct));
	static public var Application_Vnd_3gpp_Prose_Pc3ch_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.3gpp-prose-pc3ch", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.3gpp-prose-pc3ch+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3gpp_Prose_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.3gpp-prose", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.3gpp-prose+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3gpp_Sms : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.3gpp.sms", subtype : null, suffix : null, parameters : null, original : "application/vnd.3gpp.sms", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3gpp_Sms_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.3gpp.sms", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.3gpp.sms+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3gpp_Srvcc_Ext_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.3gpp.srvcc-ext", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.3gpp.srvcc-ext+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3gpp_Srvcc_Info_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.3gpp.srvcc-info", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.3gpp.srvcc-info+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3gpp_State_And_Event_Info_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.3gpp.state-and-event-info", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.3gpp.state-and-event-info+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3gpp_Ussd_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.3gpp.ussd", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.3gpp.ussd+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3lightssoftware_Imagescal : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.3lightssoftware.imagescal", subtype : null, suffix : null, parameters : null, original : "application/vnd.3lightssoftware.imagescal", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_3m_Post_It_Notes : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.3m.post-it-notes", subtype : null, suffix : null, parameters : null, original : "application/vnd.3m.post-it-notes", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pwn"] } : MediaTypeStruct));
	static public var Application_Vnd_Accpac_Simply_Aso : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.accpac.simply.aso", subtype : null, suffix : null, parameters : null, original : "application/vnd.accpac.simply.aso", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["aso"] } : MediaTypeStruct));
	static public var Application_Vnd_Accpac_Simply_Imp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.accpac.simply.imp", subtype : null, suffix : null, parameters : null, original : "application/vnd.accpac.simply.imp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["imp"] } : MediaTypeStruct));
	static public var Application_Vnd_Acucobol : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.acucobol", subtype : null, suffix : null, parameters : null, original : "application/vnd.acucobol", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["acu"] } : MediaTypeStruct));
	static public var Application_Vnd_Acucorp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.acucorp", subtype : null, suffix : null, parameters : null, original : "application/vnd.acucorp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["atc", "acutc"] } : MediaTypeStruct));
	static public var Application_Vnd_Adobe_Air_Application_Installer_Package_Zip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.adobe.air-application-installer-package", subtype : null, suffix : "zip", parameters : null, original : "application/vnd.adobe.air-application-installer-package+zip", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["air"] } : MediaTypeStruct));
	static public var Application_Vnd_Adobe_Flash_Movie : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.adobe.flash.movie", subtype : null, suffix : null, parameters : null, original : "application/vnd.adobe.flash.movie", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Adobe_Formscentral_Fcdt : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.adobe.formscentral.fcdt", subtype : null, suffix : null, parameters : null, original : "application/vnd.adobe.formscentral.fcdt", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["fcdt"] } : MediaTypeStruct));
	static public var Application_Vnd_Adobe_Fxp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.adobe.fxp", subtype : null, suffix : null, parameters : null, original : "application/vnd.adobe.fxp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["fxp", "fxpl"] } : MediaTypeStruct));
	static public var Application_Vnd_Adobe_Partial_Upload : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.adobe.partial-upload", subtype : null, suffix : null, parameters : null, original : "application/vnd.adobe.partial-upload", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Adobe_Xdp_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.adobe.xdp", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.adobe.xdp+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xdp"] } : MediaTypeStruct));
	static public var Application_Vnd_Adobe_Xfdf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.adobe.xfdf", subtype : null, suffix : null, parameters : null, original : "application/vnd.adobe.xfdf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xfdf"] } : MediaTypeStruct));
	static public var Application_Vnd_Aether_Imp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.aether.imp", subtype : null, suffix : null, parameters : null, original : "application/vnd.aether.imp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ah_Barcode : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ah-barcode", subtype : null, suffix : null, parameters : null, original : "application/vnd.ah-barcode", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ahead_Space : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ahead.space", subtype : null, suffix : null, parameters : null, original : "application/vnd.ahead.space", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ahead"] } : MediaTypeStruct));
	static public var Application_Vnd_Airzip_Filesecure_Azf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.airzip.filesecure.azf", subtype : null, suffix : null, parameters : null, original : "application/vnd.airzip.filesecure.azf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["azf"] } : MediaTypeStruct));
	static public var Application_Vnd_Airzip_Filesecure_Azs : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.airzip.filesecure.azs", subtype : null, suffix : null, parameters : null, original : "application/vnd.airzip.filesecure.azs", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["azs"] } : MediaTypeStruct));
	static public var Application_Vnd_Amazon_Ebook : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.amazon.ebook", subtype : null, suffix : null, parameters : null, original : "application/vnd.amazon.ebook", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["azw"] } : MediaTypeStruct));
	static public var Application_Vnd_Amazon_Mobi8_Ebook : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.amazon.mobi8-ebook", subtype : null, suffix : null, parameters : null, original : "application/vnd.amazon.mobi8-ebook", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Americandynamics_Acc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.americandynamics.acc", subtype : null, suffix : null, parameters : null, original : "application/vnd.americandynamics.acc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["acc"] } : MediaTypeStruct));
	static public var Application_Vnd_Amiga_Ami : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.amiga.ami", subtype : null, suffix : null, parameters : null, original : "application/vnd.amiga.ami", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ami"] } : MediaTypeStruct));
	static public var Application_Vnd_Amundsen_Maze_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.amundsen.maze", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.amundsen.maze+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Android_Package_Archive : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.android.package-archive", subtype : null, suffix : null, parameters : null, original : "application/vnd.android.package-archive", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["apk"] } : MediaTypeStruct));
	static public var Application_Vnd_Anki : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.anki", subtype : null, suffix : null, parameters : null, original : "application/vnd.anki", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Anser_Web_Certificate_Issue_Initiation : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.anser-web-certificate-issue-initiation", subtype : null, suffix : null, parameters : null, original : "application/vnd.anser-web-certificate-issue-initiation", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cii"] } : MediaTypeStruct));
	static public var Application_Vnd_Anser_Web_Funds_Transfer_Initiation : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.anser-web-funds-transfer-initiation", subtype : null, suffix : null, parameters : null, original : "application/vnd.anser-web-funds-transfer-initiation", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["fti"] } : MediaTypeStruct));
	static public var Application_Vnd_Antix_Game_Component : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.antix.game-component", subtype : null, suffix : null, parameters : null, original : "application/vnd.antix.game-component", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["atx"] } : MediaTypeStruct));
	static public var Application_Vnd_Apache_Thrift_Binary : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.apache.thrift.binary", subtype : null, suffix : null, parameters : null, original : "application/vnd.apache.thrift.binary", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Apache_Thrift_Compact : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.apache.thrift.compact", subtype : null, suffix : null, parameters : null, original : "application/vnd.apache.thrift.compact", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Apache_Thrift_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.apache.thrift.json", subtype : null, suffix : null, parameters : null, original : "application/vnd.apache.thrift.json", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Api_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.api", subtype : null, suffix : "json", parameters : null, original : "application/vnd.api+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Apple_Installer_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.apple.installer", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.apple.installer+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mpkg"] } : MediaTypeStruct));
	static public var Application_Vnd_Apple_Mpegurl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.apple.mpegurl", subtype : null, suffix : null, parameters : null, original : "application/vnd.apple.mpegurl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["m3u8"] } : MediaTypeStruct));
	static public var Application_Vnd_Apple_Pkpass : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.apple.pkpass", subtype : null, suffix : null, parameters : null, original : "application/vnd.apple.pkpass", charset : null, source : null, compressible : false, extensions : ["pkpass"] } : MediaTypeStruct));
	static public var Application_Vnd_Arastra_Swi : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.arastra.swi", subtype : null, suffix : null, parameters : null, original : "application/vnd.arastra.swi", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Aristanetworks_Swi : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.aristanetworks.swi", subtype : null, suffix : null, parameters : null, original : "application/vnd.aristanetworks.swi", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["swi"] } : MediaTypeStruct));
	static public var Application_Vnd_Artsquare : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.artsquare", subtype : null, suffix : null, parameters : null, original : "application/vnd.artsquare", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Astraea_Software_Iota : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.astraea-software.iota", subtype : null, suffix : null, parameters : null, original : "application/vnd.astraea-software.iota", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["iota"] } : MediaTypeStruct));
	static public var Application_Vnd_Audiograph : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.audiograph", subtype : null, suffix : null, parameters : null, original : "application/vnd.audiograph", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["aep"] } : MediaTypeStruct));
	static public var Application_Vnd_Autopackage : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.autopackage", subtype : null, suffix : null, parameters : null, original : "application/vnd.autopackage", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Avistar_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.avistar", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.avistar+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Balsamiq_Bmml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.balsamiq.bmml", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.balsamiq.bmml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Balsamiq_Bmpr : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.balsamiq.bmpr", subtype : null, suffix : null, parameters : null, original : "application/vnd.balsamiq.bmpr", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Bekitzur_Stech_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.bekitzur-stech", subtype : null, suffix : "json", parameters : null, original : "application/vnd.bekitzur-stech+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Biopax_Rdf_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.biopax.rdf", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.biopax.rdf+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Blueice_Multipass : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.blueice.multipass", subtype : null, suffix : null, parameters : null, original : "application/vnd.blueice.multipass", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mpm"] } : MediaTypeStruct));
	static public var Application_Vnd_Bluetooth_Ep_Oob : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.bluetooth.ep.oob", subtype : null, suffix : null, parameters : null, original : "application/vnd.bluetooth.ep.oob", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Bluetooth_Le_Oob : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.bluetooth.le.oob", subtype : null, suffix : null, parameters : null, original : "application/vnd.bluetooth.le.oob", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Bmi : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.bmi", subtype : null, suffix : null, parameters : null, original : "application/vnd.bmi", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["bmi"] } : MediaTypeStruct));
	static public var Application_Vnd_Businessobjects : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.businessobjects", subtype : null, suffix : null, parameters : null, original : "application/vnd.businessobjects", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rep"] } : MediaTypeStruct));
	static public var Application_Vnd_Cab_Jscript : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.cab-jscript", subtype : null, suffix : null, parameters : null, original : "application/vnd.cab-jscript", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Canon_Cpdl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.canon-cpdl", subtype : null, suffix : null, parameters : null, original : "application/vnd.canon-cpdl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Canon_Lips : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.canon-lips", subtype : null, suffix : null, parameters : null, original : "application/vnd.canon-lips", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Cendio_Thinlinc_Clientconf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.cendio.thinlinc.clientconf", subtype : null, suffix : null, parameters : null, original : "application/vnd.cendio.thinlinc.clientconf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Century_Systems_Tcp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.century-systems.tcp", subtype : null, suffix : null, parameters : null, original : "application/vnd.century-systems.tcp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Chemdraw_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.chemdraw", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.chemdraw+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cdxml"] } : MediaTypeStruct));
	static public var Application_Vnd_Chess_Pgn : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.chess-pgn", subtype : null, suffix : null, parameters : null, original : "application/vnd.chess-pgn", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Chipnuts_Karaoke_Mmd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.chipnuts.karaoke-mmd", subtype : null, suffix : null, parameters : null, original : "application/vnd.chipnuts.karaoke-mmd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mmd"] } : MediaTypeStruct));
	static public var Application_Vnd_Cinderella : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.cinderella", subtype : null, suffix : null, parameters : null, original : "application/vnd.cinderella", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cdy"] } : MediaTypeStruct));
	static public var Application_Vnd_Cirpack_Isdn_Ext : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.cirpack.isdn-ext", subtype : null, suffix : null, parameters : null, original : "application/vnd.cirpack.isdn-ext", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Citationstyles_Style_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.citationstyles.style", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.citationstyles.style+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Claymore : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.claymore", subtype : null, suffix : null, parameters : null, original : "application/vnd.claymore", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cla"] } : MediaTypeStruct));
	static public var Application_Vnd_Cloanto_Rp9 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.cloanto.rp9", subtype : null, suffix : null, parameters : null, original : "application/vnd.cloanto.rp9", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rp9"] } : MediaTypeStruct));
	static public var Application_Vnd_Clonk_C4group : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.clonk.c4group", subtype : null, suffix : null, parameters : null, original : "application/vnd.clonk.c4group", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["c4g", "c4d", "c4f", "c4p", "c4u"] } : MediaTypeStruct));
	static public var Application_Vnd_Cluetrust_Cartomobile_Config : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.cluetrust.cartomobile-config", subtype : null, suffix : null, parameters : null, original : "application/vnd.cluetrust.cartomobile-config", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["c11amc"] } : MediaTypeStruct));
	static public var Application_Vnd_Cluetrust_Cartomobile_Config_Pkg : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.cluetrust.cartomobile-config-pkg", subtype : null, suffix : null, parameters : null, original : "application/vnd.cluetrust.cartomobile-config-pkg", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["c11amz"] } : MediaTypeStruct));
	static public var Application_Vnd_Coffeescript : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.coffeescript", subtype : null, suffix : null, parameters : null, original : "application/vnd.coffeescript", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Collection_Doc_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.collection.doc", subtype : null, suffix : "json", parameters : null, original : "application/vnd.collection.doc+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Collection_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.collection", subtype : null, suffix : "json", parameters : null, original : "application/vnd.collection+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Collection_Next_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.collection.next", subtype : null, suffix : "json", parameters : null, original : "application/vnd.collection.next+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Comicbook_Zip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.comicbook", subtype : null, suffix : "zip", parameters : null, original : "application/vnd.comicbook+zip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Commerce_Battelle : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.commerce-battelle", subtype : null, suffix : null, parameters : null, original : "application/vnd.commerce-battelle", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Commonspace : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.commonspace", subtype : null, suffix : null, parameters : null, original : "application/vnd.commonspace", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["csp"] } : MediaTypeStruct));
	static public var Application_Vnd_Contact_Cmsg : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.contact.cmsg", subtype : null, suffix : null, parameters : null, original : "application/vnd.contact.cmsg", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cdbcmsg"] } : MediaTypeStruct));
	static public var Application_Vnd_Coreos_Ignition_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.coreos.ignition", subtype : null, suffix : "json", parameters : null, original : "application/vnd.coreos.ignition+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Cosmocaller : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.cosmocaller", subtype : null, suffix : null, parameters : null, original : "application/vnd.cosmocaller", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cmc"] } : MediaTypeStruct));
	static public var Application_Vnd_Crick_Clicker : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.crick.clicker", subtype : null, suffix : null, parameters : null, original : "application/vnd.crick.clicker", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["clkx"] } : MediaTypeStruct));
	static public var Application_Vnd_Crick_Clicker_Keyboard : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.crick.clicker.keyboard", subtype : null, suffix : null, parameters : null, original : "application/vnd.crick.clicker.keyboard", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["clkk"] } : MediaTypeStruct));
	static public var Application_Vnd_Crick_Clicker_Palette : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.crick.clicker.palette", subtype : null, suffix : null, parameters : null, original : "application/vnd.crick.clicker.palette", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["clkp"] } : MediaTypeStruct));
	static public var Application_Vnd_Crick_Clicker_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.crick.clicker.template", subtype : null, suffix : null, parameters : null, original : "application/vnd.crick.clicker.template", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["clkt"] } : MediaTypeStruct));
	static public var Application_Vnd_Crick_Clicker_Wordbank : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.crick.clicker.wordbank", subtype : null, suffix : null, parameters : null, original : "application/vnd.crick.clicker.wordbank", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["clkw"] } : MediaTypeStruct));
	static public var Application_Vnd_Criticaltools_Wbs_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.criticaltools.wbs", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.criticaltools.wbs+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wbs"] } : MediaTypeStruct));
	static public var Application_Vnd_Ctc_Posml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ctc-posml", subtype : null, suffix : null, parameters : null, original : "application/vnd.ctc-posml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pml"] } : MediaTypeStruct));
	static public var Application_Vnd_Ctct_Ws_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.ctct.ws", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.ctct.ws+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Cups_Pdf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.cups-pdf", subtype : null, suffix : null, parameters : null, original : "application/vnd.cups-pdf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Cups_Postscript : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.cups-postscript", subtype : null, suffix : null, parameters : null, original : "application/vnd.cups-postscript", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Cups_Ppd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.cups-ppd", subtype : null, suffix : null, parameters : null, original : "application/vnd.cups-ppd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ppd"] } : MediaTypeStruct));
	static public var Application_Vnd_Cups_Raster : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.cups-raster", subtype : null, suffix : null, parameters : null, original : "application/vnd.cups-raster", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Cups_Raw : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.cups-raw", subtype : null, suffix : null, parameters : null, original : "application/vnd.cups-raw", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Curl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.curl", subtype : null, suffix : null, parameters : null, original : "application/vnd.curl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Curl_Car : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.curl.car", subtype : null, suffix : null, parameters : null, original : "application/vnd.curl.car", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["car"] } : MediaTypeStruct));
	static public var Application_Vnd_Curl_Pcurl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.curl.pcurl", subtype : null, suffix : null, parameters : null, original : "application/vnd.curl.pcurl", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["pcurl"] } : MediaTypeStruct));
	static public var Application_Vnd_Cyan_Dean_Root_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.cyan.dean.root", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.cyan.dean.root+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Cybank : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.cybank", subtype : null, suffix : null, parameters : null, original : "application/vnd.cybank", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_D2l_Coursepackage1p0_Zip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.d2l.coursepackage1p0", subtype : null, suffix : "zip", parameters : null, original : "application/vnd.d2l.coursepackage1p0+zip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dart : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dart", subtype : null, suffix : null, parameters : null, original : "application/vnd.dart", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["dart"] } : MediaTypeStruct));
	static public var Application_Vnd_Data_Vision_Rdz : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.data-vision.rdz", subtype : null, suffix : null, parameters : null, original : "application/vnd.data-vision.rdz", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rdz"] } : MediaTypeStruct));
	static public var Application_Vnd_Debian_Binary_Package : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.debian.binary-package", subtype : null, suffix : null, parameters : null, original : "application/vnd.debian.binary-package", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dece_Data : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dece.data", subtype : null, suffix : null, parameters : null, original : "application/vnd.dece.data", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["uvf", "uvvf", "uvd", "uvvd"] } : MediaTypeStruct));
	static public var Application_Vnd_Dece_Ttml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.dece.ttml", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.dece.ttml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["uvt", "uvvt"] } : MediaTypeStruct));
	static public var Application_Vnd_Dece_Unspecified : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dece.unspecified", subtype : null, suffix : null, parameters : null, original : "application/vnd.dece.unspecified", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["uvx", "uvvx"] } : MediaTypeStruct));
	static public var Application_Vnd_Dece_Zip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dece.zip", subtype : null, suffix : null, parameters : null, original : "application/vnd.dece.zip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["uvz", "uvvz"] } : MediaTypeStruct));
	static public var Application_Vnd_Denovo_Fcselayout_Link : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.denovo.fcselayout-link", subtype : null, suffix : null, parameters : null, original : "application/vnd.denovo.fcselayout-link", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["fe_launch"] } : MediaTypeStruct));
	static public var Application_Vnd_Desmume_Movie : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.desmume-movie", subtype : null, suffix : null, parameters : null, original : "application/vnd.desmume-movie", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dir_Bi_Plate_Dl_Nosuffix : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dir-bi.plate-dl-nosuffix", subtype : null, suffix : null, parameters : null, original : "application/vnd.dir-bi.plate-dl-nosuffix", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dm_Delegation_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.dm.delegation", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.dm.delegation+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dna : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dna", subtype : null, suffix : null, parameters : null, original : "application/vnd.dna", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dna"] } : MediaTypeStruct));
	static public var Application_Vnd_Document_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.document", subtype : null, suffix : "json", parameters : null, original : "application/vnd.document+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dolby_Mlp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dolby.mlp", subtype : null, suffix : null, parameters : null, original : "application/vnd.dolby.mlp", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["mlp"] } : MediaTypeStruct));
	static public var Application_Vnd_Dolby_Mobile_1 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dolby.mobile.1", subtype : null, suffix : null, parameters : null, original : "application/vnd.dolby.mobile.1", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dolby_Mobile_2 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dolby.mobile.2", subtype : null, suffix : null, parameters : null, original : "application/vnd.dolby.mobile.2", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Doremir_Scorecloud_Binary_Document : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.doremir.scorecloud-binary-document", subtype : null, suffix : null, parameters : null, original : "application/vnd.doremir.scorecloud-binary-document", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dpgraph : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dpgraph", subtype : null, suffix : null, parameters : null, original : "application/vnd.dpgraph", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dpg"] } : MediaTypeStruct));
	static public var Application_Vnd_Dreamfactory : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dreamfactory", subtype : null, suffix : null, parameters : null, original : "application/vnd.dreamfactory", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dfac"] } : MediaTypeStruct));
	static public var Application_Vnd_Drive_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.drive", subtype : null, suffix : "json", parameters : null, original : "application/vnd.drive+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ds_Keypoint : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ds-keypoint", subtype : null, suffix : null, parameters : null, original : "application/vnd.ds-keypoint", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["kpxx"] } : MediaTypeStruct));
	static public var Application_Vnd_Dtg_Local : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dtg.local", subtype : null, suffix : null, parameters : null, original : "application/vnd.dtg.local", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dtg_Local_Flash : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dtg.local.flash", subtype : null, suffix : null, parameters : null, original : "application/vnd.dtg.local.flash", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dtg_Local_Html : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dtg.local.html", subtype : null, suffix : null, parameters : null, original : "application/vnd.dtg.local.html", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Ait : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dvb.ait", subtype : null, suffix : null, parameters : null, original : "application/vnd.dvb.ait", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ait"] } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Dvbj : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dvb.dvbj", subtype : null, suffix : null, parameters : null, original : "application/vnd.dvb.dvbj", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Esgcontainer : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dvb.esgcontainer", subtype : null, suffix : null, parameters : null, original : "application/vnd.dvb.esgcontainer", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Ipdcdftnotifaccess : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dvb.ipdcdftnotifaccess", subtype : null, suffix : null, parameters : null, original : "application/vnd.dvb.ipdcdftnotifaccess", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Ipdcesgaccess : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dvb.ipdcesgaccess", subtype : null, suffix : null, parameters : null, original : "application/vnd.dvb.ipdcesgaccess", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Ipdcesgaccess2 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dvb.ipdcesgaccess2", subtype : null, suffix : null, parameters : null, original : "application/vnd.dvb.ipdcesgaccess2", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Ipdcesgpdd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dvb.ipdcesgpdd", subtype : null, suffix : null, parameters : null, original : "application/vnd.dvb.ipdcesgpdd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Ipdcroaming : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dvb.ipdcroaming", subtype : null, suffix : null, parameters : null, original : "application/vnd.dvb.ipdcroaming", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Iptv_Alfec_Base : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dvb.iptv.alfec-base", subtype : null, suffix : null, parameters : null, original : "application/vnd.dvb.iptv.alfec-base", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Iptv_Alfec_Enhancement : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dvb.iptv.alfec-enhancement", subtype : null, suffix : null, parameters : null, original : "application/vnd.dvb.iptv.alfec-enhancement", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Notif_Aggregate_Root_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.dvb.notif-aggregate-root", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.dvb.notif-aggregate-root+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Notif_Container_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.dvb.notif-container", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.dvb.notif-container+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Notif_Generic_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.dvb.notif-generic", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.dvb.notif-generic+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Notif_Ia_Msglist_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.dvb.notif-ia-msglist", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.dvb.notif-ia-msglist+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Notif_Ia_Registration_Request_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.dvb.notif-ia-registration-request", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.dvb.notif-ia-registration-request+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Notif_Ia_Registration_Response_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.dvb.notif-ia-registration-response", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.dvb.notif-ia-registration-response+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Notif_Init_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.dvb.notif-init", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.dvb.notif-init+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Pfr : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dvb.pfr", subtype : null, suffix : null, parameters : null, original : "application/vnd.dvb.pfr", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dvb_Service : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dvb.service", subtype : null, suffix : null, parameters : null, original : "application/vnd.dvb.service", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["svc"] } : MediaTypeStruct));
	static public var Application_Vnd_Dxr : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dxr", subtype : null, suffix : null, parameters : null, original : "application/vnd.dxr", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Dynageo : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dynageo", subtype : null, suffix : null, parameters : null, original : "application/vnd.dynageo", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["geo"] } : MediaTypeStruct));
	static public var Application_Vnd_Dzr : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.dzr", subtype : null, suffix : null, parameters : null, original : "application/vnd.dzr", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Easykaraoke_Cdgdownload : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.easykaraoke.cdgdownload", subtype : null, suffix : null, parameters : null, original : "application/vnd.easykaraoke.cdgdownload", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ecdis_Update : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ecdis-update", subtype : null, suffix : null, parameters : null, original : "application/vnd.ecdis-update", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ecowin_Chart : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ecowin.chart", subtype : null, suffix : null, parameters : null, original : "application/vnd.ecowin.chart", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mag"] } : MediaTypeStruct));
	static public var Application_Vnd_Ecowin_Filerequest : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ecowin.filerequest", subtype : null, suffix : null, parameters : null, original : "application/vnd.ecowin.filerequest", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ecowin_Fileupdate : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ecowin.fileupdate", subtype : null, suffix : null, parameters : null, original : "application/vnd.ecowin.fileupdate", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ecowin_Series : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ecowin.series", subtype : null, suffix : null, parameters : null, original : "application/vnd.ecowin.series", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ecowin_Seriesrequest : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ecowin.seriesrequest", subtype : null, suffix : null, parameters : null, original : "application/vnd.ecowin.seriesrequest", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ecowin_Seriesupdate : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ecowin.seriesupdate", subtype : null, suffix : null, parameters : null, original : "application/vnd.ecowin.seriesupdate", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Emclient_Accessrequest_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.emclient.accessrequest", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.emclient.accessrequest+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Enliven : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.enliven", subtype : null, suffix : null, parameters : null, original : "application/vnd.enliven", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["nml"] } : MediaTypeStruct));
	static public var Application_Vnd_Enphase_Envoy : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.enphase.envoy", subtype : null, suffix : null, parameters : null, original : "application/vnd.enphase.envoy", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Eprints_Data_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.eprints.data", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.eprints.data+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Epson_Esf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.epson.esf", subtype : null, suffix : null, parameters : null, original : "application/vnd.epson.esf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["esf"] } : MediaTypeStruct));
	static public var Application_Vnd_Epson_Msf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.epson.msf", subtype : null, suffix : null, parameters : null, original : "application/vnd.epson.msf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["msf"] } : MediaTypeStruct));
	static public var Application_Vnd_Epson_Quickanime : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.epson.quickanime", subtype : null, suffix : null, parameters : null, original : "application/vnd.epson.quickanime", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["qam"] } : MediaTypeStruct));
	static public var Application_Vnd_Epson_Salt : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.epson.salt", subtype : null, suffix : null, parameters : null, original : "application/vnd.epson.salt", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["slt"] } : MediaTypeStruct));
	static public var Application_Vnd_Epson_Ssf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.epson.ssf", subtype : null, suffix : null, parameters : null, original : "application/vnd.epson.ssf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ssf"] } : MediaTypeStruct));
	static public var Application_Vnd_Ericsson_Quickcall : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ericsson.quickcall", subtype : null, suffix : null, parameters : null, original : "application/vnd.ericsson.quickcall", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Espass_Espass_Zip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.espass-espass", subtype : null, suffix : "zip", parameters : null, original : "application/vnd.espass-espass+zip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Eszigno3_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.eszigno3", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.eszigno3+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["es3", "et3"] } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Aoc_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.aoc", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.aoc+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Asic_E_Zip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.etsi.asic-e", subtype : null, suffix : "zip", parameters : null, original : "application/vnd.etsi.asic-e+zip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Asic_S_Zip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.etsi.asic-s", subtype : null, suffix : "zip", parameters : null, original : "application/vnd.etsi.asic-s+zip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Cug_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.cug", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.cug+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Iptvcommand_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.iptvcommand", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.iptvcommand+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Iptvdiscovery_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.iptvdiscovery", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.iptvdiscovery+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Iptvprofile_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.iptvprofile", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.iptvprofile+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Iptvsad_Bc_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.iptvsad-bc", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.iptvsad-bc+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Iptvsad_Cod_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.iptvsad-cod", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.iptvsad-cod+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Iptvsad_Npvr_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.iptvsad-npvr", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.iptvsad-npvr+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Iptvservice_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.iptvservice", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.iptvservice+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Iptvsync_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.iptvsync", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.iptvsync+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Iptvueprofile_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.iptvueprofile", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.iptvueprofile+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Mcid_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.mcid", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.mcid+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Mheg5 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.etsi.mheg5", subtype : null, suffix : null, parameters : null, original : "application/vnd.etsi.mheg5", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Overload_Control_Policy_Dataset_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.overload-control-policy-dataset", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.overload-control-policy-dataset+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Pstn_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.pstn", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.pstn+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Sci_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.sci", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.sci+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Simservs_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.simservs", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.simservs+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Timestamp_Token : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.etsi.timestamp-token", subtype : null, suffix : null, parameters : null, original : "application/vnd.etsi.timestamp-token", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Tsl_Der : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.etsi.tsl.der", subtype : null, suffix : null, parameters : null, original : "application/vnd.etsi.tsl.der", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Etsi_Tsl_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.etsi.tsl", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.etsi.tsl+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Eudora_Data : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.eudora.data", subtype : null, suffix : null, parameters : null, original : "application/vnd.eudora.data", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ezpix_Album : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ezpix-album", subtype : null, suffix : null, parameters : null, original : "application/vnd.ezpix-album", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ez2"] } : MediaTypeStruct));
	static public var Application_Vnd_Ezpix_Package : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ezpix-package", subtype : null, suffix : null, parameters : null, original : "application/vnd.ezpix-package", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ez3"] } : MediaTypeStruct));
	static public var Application_Vnd_F_Secure_Mobile : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.f-secure.mobile", subtype : null, suffix : null, parameters : null, original : "application/vnd.f-secure.mobile", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Fastcopy_Disk_Image : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fastcopy-disk-image", subtype : null, suffix : null, parameters : null, original : "application/vnd.fastcopy-disk-image", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Fdf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fdf", subtype : null, suffix : null, parameters : null, original : "application/vnd.fdf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["fdf"] } : MediaTypeStruct));
	static public var Application_Vnd_Fdsn_Mseed : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fdsn.mseed", subtype : null, suffix : null, parameters : null, original : "application/vnd.fdsn.mseed", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mseed"] } : MediaTypeStruct));
	static public var Application_Vnd_Fdsn_Seed : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fdsn.seed", subtype : null, suffix : null, parameters : null, original : "application/vnd.fdsn.seed", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["seed", "dataless"] } : MediaTypeStruct));
	static public var Application_Vnd_Ffsns : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ffsns", subtype : null, suffix : null, parameters : null, original : "application/vnd.ffsns", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Filmit_Zfc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.filmit.zfc", subtype : null, suffix : null, parameters : null, original : "application/vnd.filmit.zfc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Fints : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fints", subtype : null, suffix : null, parameters : null, original : "application/vnd.fints", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Firemonkeys_Cloudcell : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.firemonkeys.cloudcell", subtype : null, suffix : null, parameters : null, original : "application/vnd.firemonkeys.cloudcell", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Flographit : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.flographit", subtype : null, suffix : null, parameters : null, original : "application/vnd.flographit", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["gph"] } : MediaTypeStruct));
	static public var Application_Vnd_Fluxtime_Clip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fluxtime.clip", subtype : null, suffix : null, parameters : null, original : "application/vnd.fluxtime.clip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ftc"] } : MediaTypeStruct));
	static public var Application_Vnd_Font_Fontforge_Sfd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.font-fontforge-sfd", subtype : null, suffix : null, parameters : null, original : "application/vnd.font-fontforge-sfd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Framemaker : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.framemaker", subtype : null, suffix : null, parameters : null, original : "application/vnd.framemaker", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["fm", "frame", "maker", "book"] } : MediaTypeStruct));
	static public var Application_Vnd_Frogans_Fnc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.frogans.fnc", subtype : null, suffix : null, parameters : null, original : "application/vnd.frogans.fnc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["fnc"] } : MediaTypeStruct));
	static public var Application_Vnd_Frogans_Ltf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.frogans.ltf", subtype : null, suffix : null, parameters : null, original : "application/vnd.frogans.ltf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ltf"] } : MediaTypeStruct));
	static public var Application_Vnd_Fsc_Weblaunch : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fsc.weblaunch", subtype : null, suffix : null, parameters : null, original : "application/vnd.fsc.weblaunch", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["fsc"] } : MediaTypeStruct));
	static public var Application_Vnd_Fujitsu_Oasys : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fujitsu.oasys", subtype : null, suffix : null, parameters : null, original : "application/vnd.fujitsu.oasys", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["oas"] } : MediaTypeStruct));
	static public var Application_Vnd_Fujitsu_Oasys2 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fujitsu.oasys2", subtype : null, suffix : null, parameters : null, original : "application/vnd.fujitsu.oasys2", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["oa2"] } : MediaTypeStruct));
	static public var Application_Vnd_Fujitsu_Oasys3 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fujitsu.oasys3", subtype : null, suffix : null, parameters : null, original : "application/vnd.fujitsu.oasys3", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["oa3"] } : MediaTypeStruct));
	static public var Application_Vnd_Fujitsu_Oasysgp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fujitsu.oasysgp", subtype : null, suffix : null, parameters : null, original : "application/vnd.fujitsu.oasysgp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["fg5"] } : MediaTypeStruct));
	static public var Application_Vnd_Fujitsu_Oasysprs : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fujitsu.oasysprs", subtype : null, suffix : null, parameters : null, original : "application/vnd.fujitsu.oasysprs", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["bh2"] } : MediaTypeStruct));
	static public var Application_Vnd_Fujixerox_Art4 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fujixerox.art4", subtype : null, suffix : null, parameters : null, original : "application/vnd.fujixerox.art4", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Fujixerox_Art_Ex : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fujixerox.art-ex", subtype : null, suffix : null, parameters : null, original : "application/vnd.fujixerox.art-ex", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Fujixerox_Ddd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fujixerox.ddd", subtype : null, suffix : null, parameters : null, original : "application/vnd.fujixerox.ddd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ddd"] } : MediaTypeStruct));
	static public var Application_Vnd_Fujixerox_Docuworks : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fujixerox.docuworks", subtype : null, suffix : null, parameters : null, original : "application/vnd.fujixerox.docuworks", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xdw"] } : MediaTypeStruct));
	static public var Application_Vnd_Fujixerox_Docuworks_Binder : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fujixerox.docuworks.binder", subtype : null, suffix : null, parameters : null, original : "application/vnd.fujixerox.docuworks.binder", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xbd"] } : MediaTypeStruct));
	static public var Application_Vnd_Fujixerox_Docuworks_Container : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fujixerox.docuworks.container", subtype : null, suffix : null, parameters : null, original : "application/vnd.fujixerox.docuworks.container", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Fujixerox_Hbpl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fujixerox.hbpl", subtype : null, suffix : null, parameters : null, original : "application/vnd.fujixerox.hbpl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Fut_Misnet : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fut-misnet", subtype : null, suffix : null, parameters : null, original : "application/vnd.fut-misnet", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Fuzzysheet : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.fuzzysheet", subtype : null, suffix : null, parameters : null, original : "application/vnd.fuzzysheet", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["fzs"] } : MediaTypeStruct));
	static public var Application_Vnd_Genomatix_Tuxedo : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.genomatix.tuxedo", subtype : null, suffix : null, parameters : null, original : "application/vnd.genomatix.tuxedo", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["txd"] } : MediaTypeStruct));
	static public var Application_Vnd_Geo_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.geo", subtype : null, suffix : "json", parameters : null, original : "application/vnd.geo+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Geocube_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.geocube", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.geocube+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Geogebra_File : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.geogebra.file", subtype : null, suffix : null, parameters : null, original : "application/vnd.geogebra.file", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ggb"] } : MediaTypeStruct));
	static public var Application_Vnd_Geogebra_Tool : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.geogebra.tool", subtype : null, suffix : null, parameters : null, original : "application/vnd.geogebra.tool", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ggt"] } : MediaTypeStruct));
	static public var Application_Vnd_Geometry_Explorer : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.geometry-explorer", subtype : null, suffix : null, parameters : null, original : "application/vnd.geometry-explorer", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["gex", "gre"] } : MediaTypeStruct));
	static public var Application_Vnd_Geonext : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.geonext", subtype : null, suffix : null, parameters : null, original : "application/vnd.geonext", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["gxt"] } : MediaTypeStruct));
	static public var Application_Vnd_Geoplan : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.geoplan", subtype : null, suffix : null, parameters : null, original : "application/vnd.geoplan", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["g2w"] } : MediaTypeStruct));
	static public var Application_Vnd_Geospace : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.geospace", subtype : null, suffix : null, parameters : null, original : "application/vnd.geospace", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["g3w"] } : MediaTypeStruct));
	static public var Application_Vnd_Gerber : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.gerber", subtype : null, suffix : null, parameters : null, original : "application/vnd.gerber", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Globalplatform_Card_Content_Mgt : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.globalplatform.card-content-mgt", subtype : null, suffix : null, parameters : null, original : "application/vnd.globalplatform.card-content-mgt", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Globalplatform_Card_Content_Mgt_Response : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.globalplatform.card-content-mgt-response", subtype : null, suffix : null, parameters : null, original : "application/vnd.globalplatform.card-content-mgt-response", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Gmx : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.gmx", subtype : null, suffix : null, parameters : null, original : "application/vnd.gmx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["gmx"] } : MediaTypeStruct));
	static public var Application_Vnd_Google_Apps_Document : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.google-apps.document", subtype : null, suffix : null, parameters : null, original : "application/vnd.google-apps.document", charset : null, source : null, compressible : false, extensions : ["gdoc"] } : MediaTypeStruct));
	static public var Application_Vnd_Google_Apps_Presentation : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.google-apps.presentation", subtype : null, suffix : null, parameters : null, original : "application/vnd.google-apps.presentation", charset : null, source : null, compressible : false, extensions : ["gslides"] } : MediaTypeStruct));
	static public var Application_Vnd_Google_Apps_Spreadsheet : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.google-apps.spreadsheet", subtype : null, suffix : null, parameters : null, original : "application/vnd.google-apps.spreadsheet", charset : null, source : null, compressible : false, extensions : ["gsheet"] } : MediaTypeStruct));
	static public var Application_Vnd_Google_Earth_Kml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.google-earth.kml", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.google-earth.kml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["kml"] } : MediaTypeStruct));
	static public var Application_Vnd_Google_Earth_Kmz : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.google-earth.kmz", subtype : null, suffix : null, parameters : null, original : "application/vnd.google-earth.kmz", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["kmz"] } : MediaTypeStruct));
	static public var Application_Vnd_Gov_Sk_E_Form_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.gov.sk.e-form", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.gov.sk.e-form+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Gov_Sk_E_Form_Zip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.gov.sk.e-form", subtype : null, suffix : "zip", parameters : null, original : "application/vnd.gov.sk.e-form+zip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Gov_Sk_Xmldatacontainer_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.gov.sk.xmldatacontainer", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.gov.sk.xmldatacontainer+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Grafeq : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.grafeq", subtype : null, suffix : null, parameters : null, original : "application/vnd.grafeq", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["gqf", "gqs"] } : MediaTypeStruct));
	static public var Application_Vnd_Gridmp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.gridmp", subtype : null, suffix : null, parameters : null, original : "application/vnd.gridmp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Groove_Account : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.groove-account", subtype : null, suffix : null, parameters : null, original : "application/vnd.groove-account", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["gac"] } : MediaTypeStruct));
	static public var Application_Vnd_Groove_Help : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.groove-help", subtype : null, suffix : null, parameters : null, original : "application/vnd.groove-help", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ghf"] } : MediaTypeStruct));
	static public var Application_Vnd_Groove_Identity_Message : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.groove-identity-message", subtype : null, suffix : null, parameters : null, original : "application/vnd.groove-identity-message", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["gim"] } : MediaTypeStruct));
	static public var Application_Vnd_Groove_Injector : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.groove-injector", subtype : null, suffix : null, parameters : null, original : "application/vnd.groove-injector", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["grv"] } : MediaTypeStruct));
	static public var Application_Vnd_Groove_Tool_Message : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.groove-tool-message", subtype : null, suffix : null, parameters : null, original : "application/vnd.groove-tool-message", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["gtm"] } : MediaTypeStruct));
	static public var Application_Vnd_Groove_Tool_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.groove-tool-template", subtype : null, suffix : null, parameters : null, original : "application/vnd.groove-tool-template", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["tpl"] } : MediaTypeStruct));
	static public var Application_Vnd_Groove_Vcard : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.groove-vcard", subtype : null, suffix : null, parameters : null, original : "application/vnd.groove-vcard", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["vcg"] } : MediaTypeStruct));
	static public var Application_Vnd_Hal_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.hal", subtype : null, suffix : "json", parameters : null, original : "application/vnd.hal+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Hal_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.hal", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.hal+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["hal"] } : MediaTypeStruct));
	static public var Application_Vnd_Handheld_Entertainment_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.handheld-entertainment", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.handheld-entertainment+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["zmm"] } : MediaTypeStruct));
	static public var Application_Vnd_Hbci : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.hbci", subtype : null, suffix : null, parameters : null, original : "application/vnd.hbci", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["hbci"] } : MediaTypeStruct));
	static public var Application_Vnd_Hcl_Bireports : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.hcl-bireports", subtype : null, suffix : null, parameters : null, original : "application/vnd.hcl-bireports", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Hdt : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.hdt", subtype : null, suffix : null, parameters : null, original : "application/vnd.hdt", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Heroku_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.heroku", subtype : null, suffix : "json", parameters : null, original : "application/vnd.heroku+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Hhe_Lesson_Player : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.hhe.lesson-player", subtype : null, suffix : null, parameters : null, original : "application/vnd.hhe.lesson-player", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["les"] } : MediaTypeStruct));
	static public var Application_Vnd_Hp_Hpgl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.hp-hpgl", subtype : null, suffix : null, parameters : null, original : "application/vnd.hp-hpgl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["hpgl"] } : MediaTypeStruct));
	static public var Application_Vnd_Hp_Hpid : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.hp-hpid", subtype : null, suffix : null, parameters : null, original : "application/vnd.hp-hpid", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["hpid"] } : MediaTypeStruct));
	static public var Application_Vnd_Hp_Hps : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.hp-hps", subtype : null, suffix : null, parameters : null, original : "application/vnd.hp-hps", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["hps"] } : MediaTypeStruct));
	static public var Application_Vnd_Hp_Jlyt : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.hp-jlyt", subtype : null, suffix : null, parameters : null, original : "application/vnd.hp-jlyt", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["jlt"] } : MediaTypeStruct));
	static public var Application_Vnd_Hp_Pcl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.hp-pcl", subtype : null, suffix : null, parameters : null, original : "application/vnd.hp-pcl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pcl"] } : MediaTypeStruct));
	static public var Application_Vnd_Hp_Pclxl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.hp-pclxl", subtype : null, suffix : null, parameters : null, original : "application/vnd.hp-pclxl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pclxl"] } : MediaTypeStruct));
	static public var Application_Vnd_Httphone : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.httphone", subtype : null, suffix : null, parameters : null, original : "application/vnd.httphone", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Hydrostatix_Sof_Data : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.hydrostatix.sof-data", subtype : null, suffix : null, parameters : null, original : "application/vnd.hydrostatix.sof-data", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sfd-hdstx"] } : MediaTypeStruct));
	static public var Application_Vnd_Hyperdrive_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.hyperdrive", subtype : null, suffix : "json", parameters : null, original : "application/vnd.hyperdrive+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Hzn_3d_Crossword : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.hzn-3d-crossword", subtype : null, suffix : null, parameters : null, original : "application/vnd.hzn-3d-crossword", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ibm_Afplinedata : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ibm.afplinedata", subtype : null, suffix : null, parameters : null, original : "application/vnd.ibm.afplinedata", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ibm_Electronic_Media : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ibm.electronic-media", subtype : null, suffix : null, parameters : null, original : "application/vnd.ibm.electronic-media", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ibm_Minipay : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ibm.minipay", subtype : null, suffix : null, parameters : null, original : "application/vnd.ibm.minipay", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mpy"] } : MediaTypeStruct));
	static public var Application_Vnd_Ibm_Modcap : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ibm.modcap", subtype : null, suffix : null, parameters : null, original : "application/vnd.ibm.modcap", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["afp", "listafp", "list3820"] } : MediaTypeStruct));
	static public var Application_Vnd_Ibm_Rights_Management : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ibm.rights-management", subtype : null, suffix : null, parameters : null, original : "application/vnd.ibm.rights-management", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["irm"] } : MediaTypeStruct));
	static public var Application_Vnd_Ibm_Secure_Container : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ibm.secure-container", subtype : null, suffix : null, parameters : null, original : "application/vnd.ibm.secure-container", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sc"] } : MediaTypeStruct));
	static public var Application_Vnd_Iccprofile : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.iccprofile", subtype : null, suffix : null, parameters : null, original : "application/vnd.iccprofile", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["icc", "icm"] } : MediaTypeStruct));
	static public var Application_Vnd_Ieee_1905 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ieee.1905", subtype : null, suffix : null, parameters : null, original : "application/vnd.ieee.1905", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Igloader : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.igloader", subtype : null, suffix : null, parameters : null, original : "application/vnd.igloader", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["igl"] } : MediaTypeStruct));
	static public var Application_Vnd_Immervision_Ivp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.immervision-ivp", subtype : null, suffix : null, parameters : null, original : "application/vnd.immervision-ivp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ivp"] } : MediaTypeStruct));
	static public var Application_Vnd_Immervision_Ivu : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.immervision-ivu", subtype : null, suffix : null, parameters : null, original : "application/vnd.immervision-ivu", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ivu"] } : MediaTypeStruct));
	static public var Application_Vnd_Ims_Imsccv1p1 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ims.imsccv1p1", subtype : null, suffix : null, parameters : null, original : "application/vnd.ims.imsccv1p1", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ims_Imsccv1p2 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ims.imsccv1p2", subtype : null, suffix : null, parameters : null, original : "application/vnd.ims.imsccv1p2", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ims_Imsccv1p3 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ims.imsccv1p3", subtype : null, suffix : null, parameters : null, original : "application/vnd.ims.imsccv1p3", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ims_Lis_V2_Result_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.ims.lis.v2.result", subtype : null, suffix : "json", parameters : null, original : "application/vnd.ims.lis.v2.result+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ims_Lti_V2_Toolconsumerprofile_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.ims.lti.v2.toolconsumerprofile", subtype : null, suffix : "json", parameters : null, original : "application/vnd.ims.lti.v2.toolconsumerprofile+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ims_Lti_V2_Toolproxy_Id_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.ims.lti.v2.toolproxy.id", subtype : null, suffix : "json", parameters : null, original : "application/vnd.ims.lti.v2.toolproxy.id+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ims_Lti_V2_Toolproxy_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.ims.lti.v2.toolproxy", subtype : null, suffix : "json", parameters : null, original : "application/vnd.ims.lti.v2.toolproxy+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ims_Lti_V2_Toolsettings_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.ims.lti.v2.toolsettings", subtype : null, suffix : "json", parameters : null, original : "application/vnd.ims.lti.v2.toolsettings+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ims_Lti_V2_Toolsettings_Simple_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.ims.lti.v2.toolsettings.simple", subtype : null, suffix : "json", parameters : null, original : "application/vnd.ims.lti.v2.toolsettings.simple+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Informedcontrol_Rms_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.informedcontrol.rms", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.informedcontrol.rms+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Informix_Visionary : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.informix-visionary", subtype : null, suffix : null, parameters : null, original : "application/vnd.informix-visionary", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Infotech_Project : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.infotech.project", subtype : null, suffix : null, parameters : null, original : "application/vnd.infotech.project", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Infotech_Project_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.infotech.project", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.infotech.project+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Innopath_Wamp_Notification : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.innopath.wamp.notification", subtype : null, suffix : null, parameters : null, original : "application/vnd.innopath.wamp.notification", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Insors_Igm : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.insors.igm", subtype : null, suffix : null, parameters : null, original : "application/vnd.insors.igm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["igm"] } : MediaTypeStruct));
	static public var Application_Vnd_Intercon_Formnet : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.intercon.formnet", subtype : null, suffix : null, parameters : null, original : "application/vnd.intercon.formnet", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xpw", "xpx"] } : MediaTypeStruct));
	static public var Application_Vnd_Intergeo : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.intergeo", subtype : null, suffix : null, parameters : null, original : "application/vnd.intergeo", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["i2g"] } : MediaTypeStruct));
	static public var Application_Vnd_Intertrust_Digibox : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.intertrust.digibox", subtype : null, suffix : null, parameters : null, original : "application/vnd.intertrust.digibox", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Intertrust_Nncp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.intertrust.nncp", subtype : null, suffix : null, parameters : null, original : "application/vnd.intertrust.nncp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Intu_Qbo : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.intu.qbo", subtype : null, suffix : null, parameters : null, original : "application/vnd.intu.qbo", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["qbo"] } : MediaTypeStruct));
	static public var Application_Vnd_Intu_Qfx : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.intu.qfx", subtype : null, suffix : null, parameters : null, original : "application/vnd.intu.qfx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["qfx"] } : MediaTypeStruct));
	static public var Application_Vnd_Iptc_G2_Catalogitem_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.iptc.g2.catalogitem", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.iptc.g2.catalogitem+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Iptc_G2_Conceptitem_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.iptc.g2.conceptitem", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.iptc.g2.conceptitem+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Iptc_G2_Knowledgeitem_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.iptc.g2.knowledgeitem", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.iptc.g2.knowledgeitem+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Iptc_G2_Newsitem_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.iptc.g2.newsitem", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.iptc.g2.newsitem+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Iptc_G2_Newsmessage_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.iptc.g2.newsmessage", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.iptc.g2.newsmessage+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Iptc_G2_Packageitem_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.iptc.g2.packageitem", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.iptc.g2.packageitem+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Iptc_G2_Planningitem_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.iptc.g2.planningitem", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.iptc.g2.planningitem+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ipunplugged_Rcprofile : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ipunplugged.rcprofile", subtype : null, suffix : null, parameters : null, original : "application/vnd.ipunplugged.rcprofile", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rcprofile"] } : MediaTypeStruct));
	static public var Application_Vnd_Irepository_Package_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.irepository.package", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.irepository.package+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["irp"] } : MediaTypeStruct));
	static public var Application_Vnd_Is_Xpr : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.is-xpr", subtype : null, suffix : null, parameters : null, original : "application/vnd.is-xpr", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xpr"] } : MediaTypeStruct));
	static public var Application_Vnd_Isac_Fcs : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.isac.fcs", subtype : null, suffix : null, parameters : null, original : "application/vnd.isac.fcs", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["fcs"] } : MediaTypeStruct));
	static public var Application_Vnd_Jam : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.jam", subtype : null, suffix : null, parameters : null, original : "application/vnd.jam", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["jam"] } : MediaTypeStruct));
	static public var Application_Vnd_Japannet_Directory_Service : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.japannet-directory-service", subtype : null, suffix : null, parameters : null, original : "application/vnd.japannet-directory-service", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Japannet_Jpnstore_Wakeup : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.japannet-jpnstore-wakeup", subtype : null, suffix : null, parameters : null, original : "application/vnd.japannet-jpnstore-wakeup", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Japannet_Payment_Wakeup : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.japannet-payment-wakeup", subtype : null, suffix : null, parameters : null, original : "application/vnd.japannet-payment-wakeup", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Japannet_Registration : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.japannet-registration", subtype : null, suffix : null, parameters : null, original : "application/vnd.japannet-registration", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Japannet_Registration_Wakeup : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.japannet-registration-wakeup", subtype : null, suffix : null, parameters : null, original : "application/vnd.japannet-registration-wakeup", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Japannet_Setstore_Wakeup : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.japannet-setstore-wakeup", subtype : null, suffix : null, parameters : null, original : "application/vnd.japannet-setstore-wakeup", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Japannet_Verification : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.japannet-verification", subtype : null, suffix : null, parameters : null, original : "application/vnd.japannet-verification", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Japannet_Verification_Wakeup : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.japannet-verification-wakeup", subtype : null, suffix : null, parameters : null, original : "application/vnd.japannet-verification-wakeup", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Jcp_Javame_Midlet_Rms : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.jcp.javame.midlet-rms", subtype : null, suffix : null, parameters : null, original : "application/vnd.jcp.javame.midlet-rms", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rms"] } : MediaTypeStruct));
	static public var Application_Vnd_Jisp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.jisp", subtype : null, suffix : null, parameters : null, original : "application/vnd.jisp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["jisp"] } : MediaTypeStruct));
	static public var Application_Vnd_Joost_Joda_Archive : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.joost.joda-archive", subtype : null, suffix : null, parameters : null, original : "application/vnd.joost.joda-archive", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["joda"] } : MediaTypeStruct));
	static public var Application_Vnd_Jsk_Isdn_Ngn : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.jsk.isdn-ngn", subtype : null, suffix : null, parameters : null, original : "application/vnd.jsk.isdn-ngn", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Kahootz : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.kahootz", subtype : null, suffix : null, parameters : null, original : "application/vnd.kahootz", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ktz", "ktr"] } : MediaTypeStruct));
	static public var Application_Vnd_Kde_Karbon : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.kde.karbon", subtype : null, suffix : null, parameters : null, original : "application/vnd.kde.karbon", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["karbon"] } : MediaTypeStruct));
	static public var Application_Vnd_Kde_Kchart : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.kde.kchart", subtype : null, suffix : null, parameters : null, original : "application/vnd.kde.kchart", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["chrt"] } : MediaTypeStruct));
	static public var Application_Vnd_Kde_Kformula : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.kde.kformula", subtype : null, suffix : null, parameters : null, original : "application/vnd.kde.kformula", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["kfo"] } : MediaTypeStruct));
	static public var Application_Vnd_Kde_Kivio : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.kde.kivio", subtype : null, suffix : null, parameters : null, original : "application/vnd.kde.kivio", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["flw"] } : MediaTypeStruct));
	static public var Application_Vnd_Kde_Kontour : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.kde.kontour", subtype : null, suffix : null, parameters : null, original : "application/vnd.kde.kontour", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["kon"] } : MediaTypeStruct));
	static public var Application_Vnd_Kde_Kpresenter : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.kde.kpresenter", subtype : null, suffix : null, parameters : null, original : "application/vnd.kde.kpresenter", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["kpr", "kpt"] } : MediaTypeStruct));
	static public var Application_Vnd_Kde_Kspread : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.kde.kspread", subtype : null, suffix : null, parameters : null, original : "application/vnd.kde.kspread", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ksp"] } : MediaTypeStruct));
	static public var Application_Vnd_Kde_Kword : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.kde.kword", subtype : null, suffix : null, parameters : null, original : "application/vnd.kde.kword", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["kwd", "kwt"] } : MediaTypeStruct));
	static public var Application_Vnd_Kenameaapp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.kenameaapp", subtype : null, suffix : null, parameters : null, original : "application/vnd.kenameaapp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["htke"] } : MediaTypeStruct));
	static public var Application_Vnd_Kidspiration : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.kidspiration", subtype : null, suffix : null, parameters : null, original : "application/vnd.kidspiration", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["kia"] } : MediaTypeStruct));
	static public var Application_Vnd_Kinar : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.kinar", subtype : null, suffix : null, parameters : null, original : "application/vnd.kinar", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["kne", "knp"] } : MediaTypeStruct));
	static public var Application_Vnd_Koan : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.koan", subtype : null, suffix : null, parameters : null, original : "application/vnd.koan", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["skp", "skd", "skt", "skm"] } : MediaTypeStruct));
	static public var Application_Vnd_Kodak_Descriptor : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.kodak-descriptor", subtype : null, suffix : null, parameters : null, original : "application/vnd.kodak-descriptor", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sse"] } : MediaTypeStruct));
	static public var Application_Vnd_Las_Las_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.las.las", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.las.las+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["lasxml"] } : MediaTypeStruct));
	static public var Application_Vnd_Liberty_Request_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.liberty-request", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.liberty-request+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Llamagraphics_Life_Balance_Desktop : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.llamagraphics.life-balance.desktop", subtype : null, suffix : null, parameters : null, original : "application/vnd.llamagraphics.life-balance.desktop", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["lbd"] } : MediaTypeStruct));
	static public var Application_Vnd_Llamagraphics_Life_Balance_Exchange_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.llamagraphics.life-balance.exchange", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.llamagraphics.life-balance.exchange+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["lbe"] } : MediaTypeStruct));
	static public var Application_Vnd_Lotus_1_2_3 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.lotus-1-2-3", subtype : null, suffix : null, parameters : null, original : "application/vnd.lotus-1-2-3", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["123"] } : MediaTypeStruct));
	static public var Application_Vnd_Lotus_Approach : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.lotus-approach", subtype : null, suffix : null, parameters : null, original : "application/vnd.lotus-approach", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["apr"] } : MediaTypeStruct));
	static public var Application_Vnd_Lotus_Freelance : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.lotus-freelance", subtype : null, suffix : null, parameters : null, original : "application/vnd.lotus-freelance", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pre"] } : MediaTypeStruct));
	static public var Application_Vnd_Lotus_Notes : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.lotus-notes", subtype : null, suffix : null, parameters : null, original : "application/vnd.lotus-notes", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["nsf"] } : MediaTypeStruct));
	static public var Application_Vnd_Lotus_Organizer : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.lotus-organizer", subtype : null, suffix : null, parameters : null, original : "application/vnd.lotus-organizer", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["org"] } : MediaTypeStruct));
	static public var Application_Vnd_Lotus_Screencam : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.lotus-screencam", subtype : null, suffix : null, parameters : null, original : "application/vnd.lotus-screencam", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["scm"] } : MediaTypeStruct));
	static public var Application_Vnd_Lotus_Wordpro : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.lotus-wordpro", subtype : null, suffix : null, parameters : null, original : "application/vnd.lotus-wordpro", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["lwp"] } : MediaTypeStruct));
	static public var Application_Vnd_Macports_Portpkg : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.macports.portpkg", subtype : null, suffix : null, parameters : null, original : "application/vnd.macports.portpkg", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["portpkg"] } : MediaTypeStruct));
	static public var Application_Vnd_Mapbox_Vector_Tile : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mapbox-vector-tile", subtype : null, suffix : null, parameters : null, original : "application/vnd.mapbox-vector-tile", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Marlin_Drm_Actiontoken_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.marlin.drm.actiontoken", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.marlin.drm.actiontoken+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Marlin_Drm_Conftoken_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.marlin.drm.conftoken", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.marlin.drm.conftoken+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Marlin_Drm_License_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.marlin.drm.license", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.marlin.drm.license+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Marlin_Drm_Mdcf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.marlin.drm.mdcf", subtype : null, suffix : null, parameters : null, original : "application/vnd.marlin.drm.mdcf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Mason_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.mason", subtype : null, suffix : "json", parameters : null, original : "application/vnd.mason+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Maxmind_Maxmind_Db : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.maxmind.maxmind-db", subtype : null, suffix : null, parameters : null, original : "application/vnd.maxmind.maxmind-db", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Mcd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mcd", subtype : null, suffix : null, parameters : null, original : "application/vnd.mcd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mcd"] } : MediaTypeStruct));
	static public var Application_Vnd_Medcalcdata : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.medcalcdata", subtype : null, suffix : null, parameters : null, original : "application/vnd.medcalcdata", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mc1"] } : MediaTypeStruct));
	static public var Application_Vnd_Mediastation_Cdkey : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mediastation.cdkey", subtype : null, suffix : null, parameters : null, original : "application/vnd.mediastation.cdkey", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cdkey"] } : MediaTypeStruct));
	static public var Application_Vnd_Meridian_Slingshot : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.meridian-slingshot", subtype : null, suffix : null, parameters : null, original : "application/vnd.meridian-slingshot", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Mfer : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mfer", subtype : null, suffix : null, parameters : null, original : "application/vnd.mfer", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mwf"] } : MediaTypeStruct));
	static public var Application_Vnd_Mfmp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mfmp", subtype : null, suffix : null, parameters : null, original : "application/vnd.mfmp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mfm"] } : MediaTypeStruct));
	static public var Application_Vnd_Micro_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.micro", subtype : null, suffix : "json", parameters : null, original : "application/vnd.micro+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Micrografx_Flo : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.micrografx.flo", subtype : null, suffix : null, parameters : null, original : "application/vnd.micrografx.flo", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["flo"] } : MediaTypeStruct));
	static public var Application_Vnd_Micrografx_Igx : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.micrografx.igx", subtype : null, suffix : null, parameters : null, original : "application/vnd.micrografx.igx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["igx"] } : MediaTypeStruct));
	static public var Application_Vnd_Microsoft_Portable_Executable : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.microsoft.portable-executable", subtype : null, suffix : null, parameters : null, original : "application/vnd.microsoft.portable-executable", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Miele_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.miele", subtype : null, suffix : "json", parameters : null, original : "application/vnd.miele+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Mif : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mif", subtype : null, suffix : null, parameters : null, original : "application/vnd.mif", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mif"] } : MediaTypeStruct));
	static public var Application_Vnd_Minisoft_Hp3000_Save : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.minisoft-hp3000-save", subtype : null, suffix : null, parameters : null, original : "application/vnd.minisoft-hp3000-save", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Mitsubishi_Misty_Guard_Trustweb : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mitsubishi.misty-guard.trustweb", subtype : null, suffix : null, parameters : null, original : "application/vnd.mitsubishi.misty-guard.trustweb", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Mobius_Daf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mobius.daf", subtype : null, suffix : null, parameters : null, original : "application/vnd.mobius.daf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["daf"] } : MediaTypeStruct));
	static public var Application_Vnd_Mobius_Dis : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mobius.dis", subtype : null, suffix : null, parameters : null, original : "application/vnd.mobius.dis", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dis"] } : MediaTypeStruct));
	static public var Application_Vnd_Mobius_Mbk : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mobius.mbk", subtype : null, suffix : null, parameters : null, original : "application/vnd.mobius.mbk", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mbk"] } : MediaTypeStruct));
	static public var Application_Vnd_Mobius_Mqy : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mobius.mqy", subtype : null, suffix : null, parameters : null, original : "application/vnd.mobius.mqy", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mqy"] } : MediaTypeStruct));
	static public var Application_Vnd_Mobius_Msl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mobius.msl", subtype : null, suffix : null, parameters : null, original : "application/vnd.mobius.msl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["msl"] } : MediaTypeStruct));
	static public var Application_Vnd_Mobius_Plc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mobius.plc", subtype : null, suffix : null, parameters : null, original : "application/vnd.mobius.plc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["plc"] } : MediaTypeStruct));
	static public var Application_Vnd_Mobius_Txf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mobius.txf", subtype : null, suffix : null, parameters : null, original : "application/vnd.mobius.txf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["txf"] } : MediaTypeStruct));
	static public var Application_Vnd_Mophun_Application : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mophun.application", subtype : null, suffix : null, parameters : null, original : "application/vnd.mophun.application", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mpn"] } : MediaTypeStruct));
	static public var Application_Vnd_Mophun_Certificate : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mophun.certificate", subtype : null, suffix : null, parameters : null, original : "application/vnd.mophun.certificate", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mpc"] } : MediaTypeStruct));
	static public var Application_Vnd_Motorola_Flexsuite : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.motorola.flexsuite", subtype : null, suffix : null, parameters : null, original : "application/vnd.motorola.flexsuite", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Motorola_Flexsuite_Adsi : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.motorola.flexsuite.adsi", subtype : null, suffix : null, parameters : null, original : "application/vnd.motorola.flexsuite.adsi", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Motorola_Flexsuite_Fis : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.motorola.flexsuite.fis", subtype : null, suffix : null, parameters : null, original : "application/vnd.motorola.flexsuite.fis", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Motorola_Flexsuite_Gotap : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.motorola.flexsuite.gotap", subtype : null, suffix : null, parameters : null, original : "application/vnd.motorola.flexsuite.gotap", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Motorola_Flexsuite_Kmr : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.motorola.flexsuite.kmr", subtype : null, suffix : null, parameters : null, original : "application/vnd.motorola.flexsuite.kmr", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Motorola_Flexsuite_Ttc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.motorola.flexsuite.ttc", subtype : null, suffix : null, parameters : null, original : "application/vnd.motorola.flexsuite.ttc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Motorola_Flexsuite_Wem : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.motorola.flexsuite.wem", subtype : null, suffix : null, parameters : null, original : "application/vnd.motorola.flexsuite.wem", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Motorola_Iprm : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.motorola.iprm", subtype : null, suffix : null, parameters : null, original : "application/vnd.motorola.iprm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Mozilla_Xul_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.mozilla.xul", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.mozilla.xul+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["xul"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_3mfdocument : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-3mfdocument", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-3mfdocument", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Artgalry : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-artgalry", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-artgalry", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cil"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Asf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-asf", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-asf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Cab_Compressed : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-cab-compressed", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-cab-compressed", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cab"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Color_Iccprofile : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-color.iccprofile", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-color.iccprofile", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Excel : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-excel", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-excel", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["xls", "xlm", "xla", "xlc", "xlt", "xlw"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Excel_Addin_Macroenabled_12 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-excel.addin.macroenabled.12", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-excel.addin.macroenabled.12", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xlam"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Excel_Sheet_Binary_Macroenabled_12 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-excel.sheet.binary.macroenabled.12", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-excel.sheet.binary.macroenabled.12", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xlsb"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Excel_Sheet_Macroenabled_12 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-excel.sheet.macroenabled.12", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-excel.sheet.macroenabled.12", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xlsm"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Excel_Template_Macroenabled_12 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-excel.template.macroenabled.12", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-excel.template.macroenabled.12", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xltm"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Fontobject : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-fontobject", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-fontobject", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["eot"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Htmlhelp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-htmlhelp", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-htmlhelp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["chm"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Ims : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-ims", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-ims", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ims"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Lrm : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-lrm", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-lrm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["lrm"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Office_Activex_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.ms-office.activex", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.ms-office.activex+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Officetheme : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-officetheme", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-officetheme", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["thmx"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Opentype : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-opentype", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-opentype", charset : null, source : (("apache" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Package_Obfuscated_Opentype : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-package.obfuscated-opentype", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-package.obfuscated-opentype", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Pki_Seccat : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-pki.seccat", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-pki.seccat", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["cat"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Pki_Stl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-pki.stl", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-pki.stl", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["stl"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Playready_Initiator_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.ms-playready.initiator", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.ms-playready.initiator+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Powerpoint : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-powerpoint", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-powerpoint", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["ppt", "pps", "pot"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Powerpoint_Addin_Macroenabled_12 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-powerpoint.addin.macroenabled.12", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-powerpoint.addin.macroenabled.12", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ppam"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Powerpoint_Presentation_Macroenabled_12 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-powerpoint.presentation.macroenabled.12", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-powerpoint.presentation.macroenabled.12", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pptm"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Powerpoint_Slide_Macroenabled_12 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-powerpoint.slide.macroenabled.12", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-powerpoint.slide.macroenabled.12", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sldm"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Powerpoint_Slideshow_Macroenabled_12 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-powerpoint.slideshow.macroenabled.12", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-powerpoint.slideshow.macroenabled.12", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ppsm"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Powerpoint_Template_Macroenabled_12 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-powerpoint.template.macroenabled.12", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-powerpoint.template.macroenabled.12", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["potm"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Printdevicecapabilities_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.ms-printdevicecapabilities", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.ms-printdevicecapabilities+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Printing_Printticket_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.ms-printing.printticket", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.ms-printing.printticket+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Printschematicket_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.ms-printschematicket", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.ms-printschematicket+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Project : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-project", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-project", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mpp", "mpt"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Tnef : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-tnef", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-tnef", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Windows_Devicepairing : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-windows.devicepairing", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-windows.devicepairing", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Windows_Nwprinting_Oob : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-windows.nwprinting.oob", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-windows.nwprinting.oob", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Windows_Printerpairing : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-windows.printerpairing", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-windows.printerpairing", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Windows_Wsd_Oob : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-windows.wsd.oob", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-windows.wsd.oob", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Wmdrm_Lic_Chlg_Req : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-wmdrm.lic-chlg-req", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-wmdrm.lic-chlg-req", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Wmdrm_Lic_Resp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-wmdrm.lic-resp", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-wmdrm.lic-resp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Wmdrm_Meter_Chlg_Req : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-wmdrm.meter-chlg-req", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-wmdrm.meter-chlg-req", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Wmdrm_Meter_Resp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-wmdrm.meter-resp", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-wmdrm.meter-resp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Word_Document_Macroenabled_12 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-word.document.macroenabled.12", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-word.document.macroenabled.12", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["docm"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Word_Template_Macroenabled_12 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-word.template.macroenabled.12", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-word.template.macroenabled.12", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dotm"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Works : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-works", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-works", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wps", "wks", "wcm", "wdb"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Wpl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-wpl", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-wpl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wpl"] } : MediaTypeStruct));
	static public var Application_Vnd_Ms_Xpsdocument : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ms-xpsdocument", subtype : null, suffix : null, parameters : null, original : "application/vnd.ms-xpsdocument", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["xps"] } : MediaTypeStruct));
	static public var Application_Vnd_Msa_Disk_Image : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.msa-disk-image", subtype : null, suffix : null, parameters : null, original : "application/vnd.msa-disk-image", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Mseq : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mseq", subtype : null, suffix : null, parameters : null, original : "application/vnd.mseq", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mseq"] } : MediaTypeStruct));
	static public var Application_Vnd_Msign : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.msign", subtype : null, suffix : null, parameters : null, original : "application/vnd.msign", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Multiad_Creator : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.multiad.creator", subtype : null, suffix : null, parameters : null, original : "application/vnd.multiad.creator", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Multiad_Creator_Cif : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.multiad.creator.cif", subtype : null, suffix : null, parameters : null, original : "application/vnd.multiad.creator.cif", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Music_Niff : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.music-niff", subtype : null, suffix : null, parameters : null, original : "application/vnd.music-niff", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Musician : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.musician", subtype : null, suffix : null, parameters : null, original : "application/vnd.musician", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mus"] } : MediaTypeStruct));
	static public var Application_Vnd_Muvee_Style : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.muvee.style", subtype : null, suffix : null, parameters : null, original : "application/vnd.muvee.style", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["msty"] } : MediaTypeStruct));
	static public var Application_Vnd_Mynfc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.mynfc", subtype : null, suffix : null, parameters : null, original : "application/vnd.mynfc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["taglet"] } : MediaTypeStruct));
	static public var Application_Vnd_Ncd_Control : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ncd.control", subtype : null, suffix : null, parameters : null, original : "application/vnd.ncd.control", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ncd_Reference : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ncd.reference", subtype : null, suffix : null, parameters : null, original : "application/vnd.ncd.reference", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nearst_Inv_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.nearst.inv", subtype : null, suffix : "json", parameters : null, original : "application/vnd.nearst.inv+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nervana : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.nervana", subtype : null, suffix : null, parameters : null, original : "application/vnd.nervana", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Netfpx : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.netfpx", subtype : null, suffix : null, parameters : null, original : "application/vnd.netfpx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Neurolanguage_Nlu : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.neurolanguage.nlu", subtype : null, suffix : null, parameters : null, original : "application/vnd.neurolanguage.nlu", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["nlu"] } : MediaTypeStruct));
	static public var Application_Vnd_Nintendo_Nitro_Rom : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.nintendo.nitro.rom", subtype : null, suffix : null, parameters : null, original : "application/vnd.nintendo.nitro.rom", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nintendo_Snes_Rom : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.nintendo.snes.rom", subtype : null, suffix : null, parameters : null, original : "application/vnd.nintendo.snes.rom", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nitf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.nitf", subtype : null, suffix : null, parameters : null, original : "application/vnd.nitf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ntf", "nitf"] } : MediaTypeStruct));
	static public var Application_Vnd_Noblenet_Directory : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.noblenet-directory", subtype : null, suffix : null, parameters : null, original : "application/vnd.noblenet-directory", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["nnd"] } : MediaTypeStruct));
	static public var Application_Vnd_Noblenet_Sealer : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.noblenet-sealer", subtype : null, suffix : null, parameters : null, original : "application/vnd.noblenet-sealer", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["nns"] } : MediaTypeStruct));
	static public var Application_Vnd_Noblenet_Web : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.noblenet-web", subtype : null, suffix : null, parameters : null, original : "application/vnd.noblenet-web", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["nnw"] } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_Catalogs : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.nokia.catalogs", subtype : null, suffix : null, parameters : null, original : "application/vnd.nokia.catalogs", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_Conml_Wbxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.nokia.conml", subtype : null, suffix : "wbxml", parameters : null, original : "application/vnd.nokia.conml+wbxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_Conml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.nokia.conml", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.nokia.conml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_Iptv_Config_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.nokia.iptv.config", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.nokia.iptv.config+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_Isds_Radio_Presets : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.nokia.isds-radio-presets", subtype : null, suffix : null, parameters : null, original : "application/vnd.nokia.isds-radio-presets", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_Landmark_Wbxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.nokia.landmark", subtype : null, suffix : "wbxml", parameters : null, original : "application/vnd.nokia.landmark+wbxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_Landmark_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.nokia.landmark", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.nokia.landmark+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_Landmarkcollection_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.nokia.landmarkcollection", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.nokia.landmarkcollection+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_N_Gage_Ac_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.nokia.n-gage.ac", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.nokia.n-gage.ac+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_N_Gage_Data : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.nokia.n-gage.data", subtype : null, suffix : null, parameters : null, original : "application/vnd.nokia.n-gage.data", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ngdat"] } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_N_Gage_Symbian_Install : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.nokia.n-gage.symbian.install", subtype : null, suffix : null, parameters : null, original : "application/vnd.nokia.n-gage.symbian.install", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["n-gage"] } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_Ncd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.nokia.ncd", subtype : null, suffix : null, parameters : null, original : "application/vnd.nokia.ncd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_Pcd_Wbxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.nokia.pcd", subtype : null, suffix : "wbxml", parameters : null, original : "application/vnd.nokia.pcd+wbxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_Pcd_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.nokia.pcd", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.nokia.pcd+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_Radio_Preset : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.nokia.radio-preset", subtype : null, suffix : null, parameters : null, original : "application/vnd.nokia.radio-preset", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rpst"] } : MediaTypeStruct));
	static public var Application_Vnd_Nokia_Radio_Presets : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.nokia.radio-presets", subtype : null, suffix : null, parameters : null, original : "application/vnd.nokia.radio-presets", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rpss"] } : MediaTypeStruct));
	static public var Application_Vnd_Novadigm_Edm : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.novadigm.edm", subtype : null, suffix : null, parameters : null, original : "application/vnd.novadigm.edm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["edm"] } : MediaTypeStruct));
	static public var Application_Vnd_Novadigm_Edx : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.novadigm.edx", subtype : null, suffix : null, parameters : null, original : "application/vnd.novadigm.edx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["edx"] } : MediaTypeStruct));
	static public var Application_Vnd_Novadigm_Ext : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.novadigm.ext", subtype : null, suffix : null, parameters : null, original : "application/vnd.novadigm.ext", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ext"] } : MediaTypeStruct));
	static public var Application_Vnd_Ntt_Local_Content_Share : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ntt-local.content-share", subtype : null, suffix : null, parameters : null, original : "application/vnd.ntt-local.content-share", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ntt_Local_File_Transfer : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ntt-local.file-transfer", subtype : null, suffix : null, parameters : null, original : "application/vnd.ntt-local.file-transfer", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ntt_Local_Ogw : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ntt-local.ogw", subtype : null, suffix : null, parameters : null, original : "application/vnd.ntt-local.ogw", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ntt_Local_Sip_Ta : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ntt-local.sip-ta", subtype : null, suffix : null, parameters : null, original : "application/vnd.ntt-local.sip-ta", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Chart : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.chart", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.chart", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["odc"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Chart_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.chart-template", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.chart-template", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["otc"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Database : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.database", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.database", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["odb"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Formula : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.formula", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.formula", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["odf"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Formula_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.formula-template", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.formula-template", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["odft"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Graphics : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.graphics", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.graphics", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["odg"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Graphics_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.graphics-template", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.graphics-template", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["otg"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Image : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.image", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.image", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["odi"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Image_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.image-template", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.image-template", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["oti"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Presentation : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.presentation", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.presentation", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["odp"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Presentation_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.presentation-template", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.presentation-template", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["otp"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Spreadsheet : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.spreadsheet", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.spreadsheet", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["ods"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Spreadsheet_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.spreadsheet-template", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.spreadsheet-template", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ots"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Text : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.text", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.text", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["odt"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Text_Master : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.text-master", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.text-master", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["odm"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Text_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.text-template", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.text-template", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ott"] } : MediaTypeStruct));
	static public var Application_Vnd_Oasis_Opendocument_Text_Web : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oasis.opendocument.text-web", subtype : null, suffix : null, parameters : null, original : "application/vnd.oasis.opendocument.text-web", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["oth"] } : MediaTypeStruct));
	static public var Application_Vnd_Obn : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.obn", subtype : null, suffix : null, parameters : null, original : "application/vnd.obn", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oftn_L10n_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.oftn.l10n", subtype : null, suffix : "json", parameters : null, original : "application/vnd.oftn.l10n+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oipf_Contentaccessdownload_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oipf.contentaccessdownload", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oipf.contentaccessdownload+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oipf_Contentaccessstreaming_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oipf.contentaccessstreaming", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oipf.contentaccessstreaming+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oipf_Cspg_Hexbinary : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oipf.cspg-hexbinary", subtype : null, suffix : null, parameters : null, original : "application/vnd.oipf.cspg-hexbinary", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oipf_Dae_Svg_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oipf.dae.svg", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oipf.dae.svg+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oipf_Dae_Xhtml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oipf.dae.xhtml", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oipf.dae.xhtml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oipf_Mippvcontrolmessage_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oipf.mippvcontrolmessage", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oipf.mippvcontrolmessage+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oipf_Pae_Gem : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oipf.pae.gem", subtype : null, suffix : null, parameters : null, original : "application/vnd.oipf.pae.gem", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oipf_Spdiscovery_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oipf.spdiscovery", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oipf.spdiscovery+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oipf_Spdlist_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oipf.spdlist", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oipf.spdlist+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oipf_Ueprofile_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oipf.ueprofile", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oipf.ueprofile+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oipf_Userprofile_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oipf.userprofile", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oipf.userprofile+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Olpc_Sugar : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.olpc-sugar", subtype : null, suffix : null, parameters : null, original : "application/vnd.olpc-sugar", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xo"] } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Bcast_Associated_Procedure_Parameter_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.bcast.associated-procedure-parameter", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.bcast.associated-procedure-parameter+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Bcast_Drm_Trigger_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.bcast.drm-trigger", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.bcast.drm-trigger+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Bcast_Imd_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.bcast.imd", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.bcast.imd+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Bcast_Ltkm : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oma.bcast.ltkm", subtype : null, suffix : null, parameters : null, original : "application/vnd.oma.bcast.ltkm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Bcast_Notification_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.bcast.notification", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.bcast.notification+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Bcast_Provisioningtrigger : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oma.bcast.provisioningtrigger", subtype : null, suffix : null, parameters : null, original : "application/vnd.oma.bcast.provisioningtrigger", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Bcast_Sgboot : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oma.bcast.sgboot", subtype : null, suffix : null, parameters : null, original : "application/vnd.oma.bcast.sgboot", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Bcast_Sgdd_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.bcast.sgdd", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.bcast.sgdd+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Bcast_Sgdu : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oma.bcast.sgdu", subtype : null, suffix : null, parameters : null, original : "application/vnd.oma.bcast.sgdu", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Bcast_Simple_Symbol_Container : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oma.bcast.simple-symbol-container", subtype : null, suffix : null, parameters : null, original : "application/vnd.oma.bcast.simple-symbol-container", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Bcast_Smartcard_Trigger_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.bcast.smartcard-trigger", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.bcast.smartcard-trigger+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Bcast_Sprov_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.bcast.sprov", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.bcast.sprov+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Bcast_Stkm : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oma.bcast.stkm", subtype : null, suffix : null, parameters : null, original : "application/vnd.oma.bcast.stkm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Cab_Address_Book_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.cab-address-book", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.cab-address-book+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Cab_Feature_Handler_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.cab-feature-handler", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.cab-feature-handler+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Cab_Pcc_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.cab-pcc", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.cab-pcc+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Cab_Subs_Invite_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.cab-subs-invite", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.cab-subs-invite+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Cab_User_Prefs_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.cab-user-prefs", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.cab-user-prefs+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Dcd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oma.dcd", subtype : null, suffix : null, parameters : null, original : "application/vnd.oma.dcd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Dcdc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oma.dcdc", subtype : null, suffix : null, parameters : null, original : "application/vnd.oma.dcdc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Dd2_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.dd2", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.dd2+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dd2"] } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Drm_Risd_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.drm.risd", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.drm.risd+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Group_Usage_List_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.group-usage-list", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.group-usage-list+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Lwm2m_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.oma.lwm2m", subtype : null, suffix : "json", parameters : null, original : "application/vnd.oma.lwm2m+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Lwm2m_Tlv : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oma.lwm2m", subtype : null, suffix : "tlv", parameters : null, original : "application/vnd.oma.lwm2m+tlv", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Pal_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.pal", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.pal+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Poc_Detailed_Progress_Report_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.poc.detailed-progress-report", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.poc.detailed-progress-report+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Poc_Final_Report_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.poc.final-report", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.poc.final-report+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Poc_Groups_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.poc.groups", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.poc.groups+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Poc_Invocation_Descriptor_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.poc.invocation-descriptor", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.poc.invocation-descriptor+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Poc_Optimized_Progress_Report_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.poc.optimized-progress-report", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.poc.optimized-progress-report+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Push : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oma.push", subtype : null, suffix : null, parameters : null, original : "application/vnd.oma.push", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Scidm_Messages_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.scidm.messages", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.scidm.messages+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Scws_Config : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oma-scws-config", subtype : null, suffix : null, parameters : null, original : "application/vnd.oma-scws-config", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Scws_Http_Request : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oma-scws-http-request", subtype : null, suffix : null, parameters : null, original : "application/vnd.oma-scws-http-request", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Scws_Http_Response : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oma-scws-http-response", subtype : null, suffix : null, parameters : null, original : "application/vnd.oma-scws-http-response", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oma_Xcap_Directory_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.oma.xcap-directory", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.oma.xcap-directory+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Omads_Email_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.omads-email", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.omads-email+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Omads_File_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.omads-file", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.omads-file+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Omads_Folder_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.omads-folder", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.omads-folder+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Omaloc_Supl_Init : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.omaloc-supl-init", subtype : null, suffix : null, parameters : null, original : "application/vnd.omaloc-supl-init", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Onepager : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.onepager", subtype : null, suffix : null, parameters : null, original : "application/vnd.onepager", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openblox_Game_Binary : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.openblox.game-binary", subtype : null, suffix : null, parameters : null, original : "application/vnd.openblox.game-binary", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openblox_Game_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openblox.game", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openblox.game+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openeye_Oeb : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.openeye.oeb", subtype : null, suffix : null, parameters : null, original : "application/vnd.openeye.oeb", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openofficeorg_Extension : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.openofficeorg.extension", subtype : null, suffix : null, parameters : null, original : "application/vnd.openofficeorg.extension", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["oxt"] } : MediaTypeStruct));
	static public var Application_Vnd_Openstreetmap_Data_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openstreetmap.data", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openstreetmap.data+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Custom_Properties_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.custom-properties", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.custom-properties+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Customxmlproperties_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.customxmlproperties", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.customxmlproperties+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Drawing_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.drawing", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.drawing+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Drawingml_Chart_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.drawingml.chart", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.drawingml.chart+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Drawingml_Chartshapes_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.drawingml.chartshapes", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Drawingml_Diagramcolors_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.drawingml.diagramcolors", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Drawingml_Diagramdata_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.drawingml.diagramdata", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Drawingml_Diagramlayout_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.drawingml.diagramlayout", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Drawingml_Diagramstyle_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.drawingml.diagramstyle", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Extended_Properties_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.extended-properties", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.extended-properties+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Commentauthors_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.commentauthors", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Comments_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.comments", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.comments+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Handoutmaster_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.handoutmaster", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Notesmaster_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.notesmaster", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Notesslide_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.notesslide", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Presentation : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.presentation", subtype : null, suffix : null, parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.presentation", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["pptx"] } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Presentation_Main_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.presentation.main", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Presprops_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.presprops", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.presprops+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Slide : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.slide", subtype : null, suffix : null, parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.slide", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sldx"] } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Slide_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.slide", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.slide+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Slidelayout_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.slidelayout", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Slidemaster_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.slidemaster", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Slideshow : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.slideshow", subtype : null, suffix : null, parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.slideshow", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ppsx"] } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Slideshow_Main_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.slideshow.main", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Slideupdateinfo_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.slideupdateinfo", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Tablestyles_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.tablestyles", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Tags_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.tags", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.tags+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml-template", subtype : null, suffix : null, parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml-template", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Template_Main_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.template.main", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Presentationml_Viewprops_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.presentationml.viewprops", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Calcchain_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.calcchain", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Chartsheet_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.chartsheet", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Comments_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.comments", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Connections_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.connections", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Dialogsheet_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Externallink_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.externallink", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Pivotcachedefinition_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Pivotcacherecords_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Pivottable_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.pivottable", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Querytable_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.querytable", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Revisionheaders_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Revisionlog_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.revisionlog", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Sharedstrings_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Sheet : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.sheet", subtype : null, suffix : null, parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["xlsx"] } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Sheet_Main_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.sheet.main", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Sheetmetadata_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Styles_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.styles", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Table_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.table", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Tablesinglecells_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml-template", subtype : null, suffix : null, parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml-template", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Template_Main_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.template.main", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Usernames_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.usernames", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Volatiledependencies_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Spreadsheetml_Worksheet_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.spreadsheetml.worksheet", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Theme_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.theme", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.theme+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Themeoverride_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.themeoverride", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.themeoverride+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Vmldrawing : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.vmldrawing", subtype : null, suffix : null, parameters : null, original : "application/vnd.openxmlformats-officedocument.vmldrawing", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Wordprocessingml_Comments_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.wordprocessingml.comments", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Wordprocessingml_Document : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.wordprocessingml.document", subtype : null, suffix : null, parameters : null, original : "application/vnd.openxmlformats-officedocument.wordprocessingml.document", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["docx"] } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Wordprocessingml_Document_Glossary_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.wordprocessingml.document.glossary", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Wordprocessingml_Document_Main_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.wordprocessingml.document.main", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Wordprocessingml_Endnotes_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.wordprocessingml.endnotes", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Wordprocessingml_Fonttable_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.wordprocessingml.fonttable", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Wordprocessingml_Footer_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.wordprocessingml.footer", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Wordprocessingml_Footnotes_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.wordprocessingml.footnotes", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Wordprocessingml_Numbering_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.wordprocessingml.numbering", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Wordprocessingml_Settings_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.wordprocessingml.settings", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Wordprocessingml_Styles_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.wordprocessingml.styles", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Wordprocessingml_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.wordprocessingml-template", subtype : null, suffix : null, parameters : null, original : "application/vnd.openxmlformats-officedocument.wordprocessingml-template", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Wordprocessingml_Template_Main_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.wordprocessingml.template.main", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Officedocument_Wordprocessingml_Websettings_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-officedocument.wordprocessingml.websettings", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Package_Core_Properties_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-package.core-properties", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-package.core-properties+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Package_Digital_Signature_Xmlsignature_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-package.digital-signature-xmlsignature", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Openxmlformats_Package_Relationships_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.openxmlformats-package.relationships", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.openxmlformats-package.relationships+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oracle_Resource_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.oracle.resource", subtype : null, suffix : "json", parameters : null, original : "application/vnd.oracle.resource+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Orange_Indata : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.orange.indata", subtype : null, suffix : null, parameters : null, original : "application/vnd.orange.indata", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Osa_Netdeploy : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.osa.netdeploy", subtype : null, suffix : null, parameters : null, original : "application/vnd.osa.netdeploy", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Osgeo_Mapguide_Package : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.osgeo.mapguide.package", subtype : null, suffix : null, parameters : null, original : "application/vnd.osgeo.mapguide.package", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mgp"] } : MediaTypeStruct));
	static public var Application_Vnd_Osgi_Bundle : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.osgi.bundle", subtype : null, suffix : null, parameters : null, original : "application/vnd.osgi.bundle", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Osgi_Dp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.osgi.dp", subtype : null, suffix : null, parameters : null, original : "application/vnd.osgi.dp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dp"] } : MediaTypeStruct));
	static public var Application_Vnd_Osgi_Subsystem : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.osgi.subsystem", subtype : null, suffix : null, parameters : null, original : "application/vnd.osgi.subsystem", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["esa"] } : MediaTypeStruct));
	static public var Application_Vnd_Otps_Ct_Kip_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.otps.ct-kip", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.otps.ct-kip+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Oxli_Countgraph : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.oxli.countgraph", subtype : null, suffix : null, parameters : null, original : "application/vnd.oxli.countgraph", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Pagerduty_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.pagerduty", subtype : null, suffix : "json", parameters : null, original : "application/vnd.pagerduty+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Palm : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.palm", subtype : null, suffix : null, parameters : null, original : "application/vnd.palm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pdb", "pqa", "oprc"] } : MediaTypeStruct));
	static public var Application_Vnd_Panoply : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.panoply", subtype : null, suffix : null, parameters : null, original : "application/vnd.panoply", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Paos_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.paos.xml", subtype : null, suffix : null, parameters : null, original : "application/vnd.paos.xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Pawaafile : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.pawaafile", subtype : null, suffix : null, parameters : null, original : "application/vnd.pawaafile", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["paw"] } : MediaTypeStruct));
	static public var Application_Vnd_Pcos : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.pcos", subtype : null, suffix : null, parameters : null, original : "application/vnd.pcos", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Pg_Format : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.pg.format", subtype : null, suffix : null, parameters : null, original : "application/vnd.pg.format", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["str"] } : MediaTypeStruct));
	static public var Application_Vnd_Pg_Osasli : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.pg.osasli", subtype : null, suffix : null, parameters : null, original : "application/vnd.pg.osasli", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ei6"] } : MediaTypeStruct));
	static public var Application_Vnd_Piaccess_Application_Licence : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.piaccess.application-licence", subtype : null, suffix : null, parameters : null, original : "application/vnd.piaccess.application-licence", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Picsel : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.picsel", subtype : null, suffix : null, parameters : null, original : "application/vnd.picsel", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["efif"] } : MediaTypeStruct));
	static public var Application_Vnd_Pmi_Widget : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.pmi.widget", subtype : null, suffix : null, parameters : null, original : "application/vnd.pmi.widget", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wg"] } : MediaTypeStruct));
	static public var Application_Vnd_Poc_Group_Advertisement_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.poc.group-advertisement", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.poc.group-advertisement+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Pocketlearn : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.pocketlearn", subtype : null, suffix : null, parameters : null, original : "application/vnd.pocketlearn", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["plf"] } : MediaTypeStruct));
	static public var Application_Vnd_Powerbuilder6 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.powerbuilder6", subtype : null, suffix : null, parameters : null, original : "application/vnd.powerbuilder6", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pbd"] } : MediaTypeStruct));
	static public var Application_Vnd_Powerbuilder6_S : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.powerbuilder6-s", subtype : null, suffix : null, parameters : null, original : "application/vnd.powerbuilder6-s", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Powerbuilder7 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.powerbuilder7", subtype : null, suffix : null, parameters : null, original : "application/vnd.powerbuilder7", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Powerbuilder75 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.powerbuilder75", subtype : null, suffix : null, parameters : null, original : "application/vnd.powerbuilder75", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Powerbuilder75_S : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.powerbuilder75-s", subtype : null, suffix : null, parameters : null, original : "application/vnd.powerbuilder75-s", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Powerbuilder7_S : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.powerbuilder7-s", subtype : null, suffix : null, parameters : null, original : "application/vnd.powerbuilder7-s", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Preminet : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.preminet", subtype : null, suffix : null, parameters : null, original : "application/vnd.preminet", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Previewsystems_Box : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.previewsystems.box", subtype : null, suffix : null, parameters : null, original : "application/vnd.previewsystems.box", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["box"] } : MediaTypeStruct));
	static public var Application_Vnd_Proteus_Magazine : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.proteus.magazine", subtype : null, suffix : null, parameters : null, original : "application/vnd.proteus.magazine", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mgz"] } : MediaTypeStruct));
	static public var Application_Vnd_Publishare_Delta_Tree : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.publishare-delta-tree", subtype : null, suffix : null, parameters : null, original : "application/vnd.publishare-delta-tree", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["qps"] } : MediaTypeStruct));
	static public var Application_Vnd_Pvi_Ptid1 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.pvi.ptid1", subtype : null, suffix : null, parameters : null, original : "application/vnd.pvi.ptid1", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ptid"] } : MediaTypeStruct));
	static public var Application_Vnd_Pwg_Multiplexed : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.pwg-multiplexed", subtype : null, suffix : null, parameters : null, original : "application/vnd.pwg-multiplexed", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Pwg_Xhtml_Print_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.pwg-xhtml-print", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.pwg-xhtml-print+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Qualcomm_Brew_App_Res : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.qualcomm.brew-app-res", subtype : null, suffix : null, parameters : null, original : "application/vnd.qualcomm.brew-app-res", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Quarantainenet : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.quarantainenet", subtype : null, suffix : null, parameters : null, original : "application/vnd.quarantainenet", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Quark_Quarkxpress : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.quark.quarkxpress", subtype : null, suffix : null, parameters : null, original : "application/vnd.quark.quarkxpress", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"] } : MediaTypeStruct));
	static public var Application_Vnd_Quobject_Quoxdocument : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.quobject-quoxdocument", subtype : null, suffix : null, parameters : null, original : "application/vnd.quobject-quoxdocument", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Moml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.moml", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.moml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Msml_Audit_Conf_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.msml-audit-conf", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.msml-audit-conf+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Msml_Audit_Conn_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.msml-audit-conn", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.msml-audit-conn+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Msml_Audit_Dialog_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.msml-audit-dialog", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.msml-audit-dialog+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Msml_Audit_Stream_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.msml-audit-stream", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.msml-audit-stream+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Msml_Audit_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.msml-audit", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.msml-audit+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Msml_Conf_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.msml-conf", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.msml-conf+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Msml_Dialog_Base_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.msml-dialog-base", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.msml-dialog-base+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Msml_Dialog_Fax_Detect_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.msml-dialog-fax-detect", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.msml-dialog-fax-detect+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Msml_Dialog_Fax_Sendrecv_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.msml-dialog-fax-sendrecv", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.msml-dialog-fax-sendrecv+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Msml_Dialog_Group_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.msml-dialog-group", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.msml-dialog-group+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Msml_Dialog_Speech_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.msml-dialog-speech", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.msml-dialog-speech+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Msml_Dialog_Transform_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.msml-dialog-transform", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.msml-dialog-transform+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Msml_Dialog_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.msml-dialog", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.msml-dialog+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Radisys_Msml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.radisys.msml", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.radisys.msml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Rainstor_Data : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.rainstor.data", subtype : null, suffix : null, parameters : null, original : "application/vnd.rainstor.data", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Rapid : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.rapid", subtype : null, suffix : null, parameters : null, original : "application/vnd.rapid", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Rar : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.rar", subtype : null, suffix : null, parameters : null, original : "application/vnd.rar", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Realvnc_Bed : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.realvnc.bed", subtype : null, suffix : null, parameters : null, original : "application/vnd.realvnc.bed", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["bed"] } : MediaTypeStruct));
	static public var Application_Vnd_Recordare_Musicxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.recordare.musicxml", subtype : null, suffix : null, parameters : null, original : "application/vnd.recordare.musicxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mxl"] } : MediaTypeStruct));
	static public var Application_Vnd_Recordare_Musicxml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.recordare.musicxml", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.recordare.musicxml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["musicxml"] } : MediaTypeStruct));
	static public var Application_Vnd_Renlearn_Rlprint : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.renlearn.rlprint", subtype : null, suffix : null, parameters : null, original : "application/vnd.renlearn.rlprint", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Rig_Cryptonote : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.rig.cryptonote", subtype : null, suffix : null, parameters : null, original : "application/vnd.rig.cryptonote", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cryptonote"] } : MediaTypeStruct));
	static public var Application_Vnd_Rim_Cod : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.rim.cod", subtype : null, suffix : null, parameters : null, original : "application/vnd.rim.cod", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["cod"] } : MediaTypeStruct));
	static public var Application_Vnd_Rn_Realmedia : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.rn-realmedia", subtype : null, suffix : null, parameters : null, original : "application/vnd.rn-realmedia", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["rm"] } : MediaTypeStruct));
	static public var Application_Vnd_Rn_Realmedia_Vbr : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.rn-realmedia-vbr", subtype : null, suffix : null, parameters : null, original : "application/vnd.rn-realmedia-vbr", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["rmvb"] } : MediaTypeStruct));
	static public var Application_Vnd_Route66_Link66_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.route66.link66", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.route66.link66+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["link66"] } : MediaTypeStruct));
	static public var Application_Vnd_Rs_274x : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.rs-274x", subtype : null, suffix : null, parameters : null, original : "application/vnd.rs-274x", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ruckus_Download : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ruckus.download", subtype : null, suffix : null, parameters : null, original : "application/vnd.ruckus.download", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_S3sms : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.s3sms", subtype : null, suffix : null, parameters : null, original : "application/vnd.s3sms", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sailingtracker_Track : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sailingtracker.track", subtype : null, suffix : null, parameters : null, original : "application/vnd.sailingtracker.track", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["st"] } : MediaTypeStruct));
	static public var Application_Vnd_Sbm_Cid : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sbm.cid", subtype : null, suffix : null, parameters : null, original : "application/vnd.sbm.cid", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sbm_Mid2 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sbm.mid2", subtype : null, suffix : null, parameters : null, original : "application/vnd.sbm.mid2", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Scribus : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.scribus", subtype : null, suffix : null, parameters : null, original : "application/vnd.scribus", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sealed_3df : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sealed.3df", subtype : null, suffix : null, parameters : null, original : "application/vnd.sealed.3df", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sealed_Csf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sealed.csf", subtype : null, suffix : null, parameters : null, original : "application/vnd.sealed.csf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sealed_Doc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sealed.doc", subtype : null, suffix : null, parameters : null, original : "application/vnd.sealed.doc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sealed_Eml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sealed.eml", subtype : null, suffix : null, parameters : null, original : "application/vnd.sealed.eml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sealed_Mht : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sealed.mht", subtype : null, suffix : null, parameters : null, original : "application/vnd.sealed.mht", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sealed_Net : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sealed.net", subtype : null, suffix : null, parameters : null, original : "application/vnd.sealed.net", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sealed_Ppt : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sealed.ppt", subtype : null, suffix : null, parameters : null, original : "application/vnd.sealed.ppt", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sealed_Tiff : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sealed.tiff", subtype : null, suffix : null, parameters : null, original : "application/vnd.sealed.tiff", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sealed_Xls : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sealed.xls", subtype : null, suffix : null, parameters : null, original : "application/vnd.sealed.xls", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sealedmedia_Softseal_Html : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sealedmedia.softseal.html", subtype : null, suffix : null, parameters : null, original : "application/vnd.sealedmedia.softseal.html", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sealedmedia_Softseal_Pdf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sealedmedia.softseal.pdf", subtype : null, suffix : null, parameters : null, original : "application/vnd.sealedmedia.softseal.pdf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Seemail : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.seemail", subtype : null, suffix : null, parameters : null, original : "application/vnd.seemail", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["see"] } : MediaTypeStruct));
	static public var Application_Vnd_Sema : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sema", subtype : null, suffix : null, parameters : null, original : "application/vnd.sema", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sema"] } : MediaTypeStruct));
	static public var Application_Vnd_Semd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.semd", subtype : null, suffix : null, parameters : null, original : "application/vnd.semd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["semd"] } : MediaTypeStruct));
	static public var Application_Vnd_Semf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.semf", subtype : null, suffix : null, parameters : null, original : "application/vnd.semf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["semf"] } : MediaTypeStruct));
	static public var Application_Vnd_Shana_Informed_Formdata : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.shana.informed.formdata", subtype : null, suffix : null, parameters : null, original : "application/vnd.shana.informed.formdata", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ifm"] } : MediaTypeStruct));
	static public var Application_Vnd_Shana_Informed_Formtemplate : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.shana.informed.formtemplate", subtype : null, suffix : null, parameters : null, original : "application/vnd.shana.informed.formtemplate", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["itp"] } : MediaTypeStruct));
	static public var Application_Vnd_Shana_Informed_Interchange : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.shana.informed.interchange", subtype : null, suffix : null, parameters : null, original : "application/vnd.shana.informed.interchange", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["iif"] } : MediaTypeStruct));
	static public var Application_Vnd_Shana_Informed_Package : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.shana.informed.package", subtype : null, suffix : null, parameters : null, original : "application/vnd.shana.informed.package", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ipk"] } : MediaTypeStruct));
	static public var Application_Vnd_Simtech_Mindmapper : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.simtech-mindmapper", subtype : null, suffix : null, parameters : null, original : "application/vnd.simtech-mindmapper", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["twd", "twds"] } : MediaTypeStruct));
	static public var Application_Vnd_Siren_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.siren", subtype : null, suffix : "json", parameters : null, original : "application/vnd.siren+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Smaf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.smaf", subtype : null, suffix : null, parameters : null, original : "application/vnd.smaf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mmf"] } : MediaTypeStruct));
	static public var Application_Vnd_Smart_Notebook : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.smart.notebook", subtype : null, suffix : null, parameters : null, original : "application/vnd.smart.notebook", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Smart_Teacher : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.smart.teacher", subtype : null, suffix : null, parameters : null, original : "application/vnd.smart.teacher", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["teacher"] } : MediaTypeStruct));
	static public var Application_Vnd_Software602_Filler_Form_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.software602.filler.form", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.software602.filler.form+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Software602_Filler_Form_Xml_Zip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.software602.filler.form-xml-zip", subtype : null, suffix : null, parameters : null, original : "application/vnd.software602.filler.form-xml-zip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Solent_Sdkm_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.solent.sdkm", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.solent.sdkm+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sdkm", "sdkd"] } : MediaTypeStruct));
	static public var Application_Vnd_Spotfire_Dxp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.spotfire.dxp", subtype : null, suffix : null, parameters : null, original : "application/vnd.spotfire.dxp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dxp"] } : MediaTypeStruct));
	static public var Application_Vnd_Spotfire_Sfs : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.spotfire.sfs", subtype : null, suffix : null, parameters : null, original : "application/vnd.spotfire.sfs", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sfs"] } : MediaTypeStruct));
	static public var Application_Vnd_Sss_Cod : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sss-cod", subtype : null, suffix : null, parameters : null, original : "application/vnd.sss-cod", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sss_Dtf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sss-dtf", subtype : null, suffix : null, parameters : null, original : "application/vnd.sss-dtf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sss_Ntf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sss-ntf", subtype : null, suffix : null, parameters : null, original : "application/vnd.sss-ntf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Stardivision_Calc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.stardivision.calc", subtype : null, suffix : null, parameters : null, original : "application/vnd.stardivision.calc", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sdc"] } : MediaTypeStruct));
	static public var Application_Vnd_Stardivision_Draw : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.stardivision.draw", subtype : null, suffix : null, parameters : null, original : "application/vnd.stardivision.draw", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sda"] } : MediaTypeStruct));
	static public var Application_Vnd_Stardivision_Impress : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.stardivision.impress", subtype : null, suffix : null, parameters : null, original : "application/vnd.stardivision.impress", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sdd"] } : MediaTypeStruct));
	static public var Application_Vnd_Stardivision_Math : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.stardivision.math", subtype : null, suffix : null, parameters : null, original : "application/vnd.stardivision.math", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["smf"] } : MediaTypeStruct));
	static public var Application_Vnd_Stardivision_Writer : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.stardivision.writer", subtype : null, suffix : null, parameters : null, original : "application/vnd.stardivision.writer", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sdw", "vor"] } : MediaTypeStruct));
	static public var Application_Vnd_Stardivision_Writer_Global : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.stardivision.writer-global", subtype : null, suffix : null, parameters : null, original : "application/vnd.stardivision.writer-global", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sgl"] } : MediaTypeStruct));
	static public var Application_Vnd_Stepmania_Package : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.stepmania.package", subtype : null, suffix : null, parameters : null, original : "application/vnd.stepmania.package", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["smzip"] } : MediaTypeStruct));
	static public var Application_Vnd_Stepmania_Stepchart : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.stepmania.stepchart", subtype : null, suffix : null, parameters : null, original : "application/vnd.stepmania.stepchart", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sm"] } : MediaTypeStruct));
	static public var Application_Vnd_Street_Stream : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.street-stream", subtype : null, suffix : null, parameters : null, original : "application/vnd.street-stream", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sun_Wadl_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.sun.wadl", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.sun.wadl+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Sun_Xml_Calc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sun.xml.calc", subtype : null, suffix : null, parameters : null, original : "application/vnd.sun.xml.calc", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sxc"] } : MediaTypeStruct));
	static public var Application_Vnd_Sun_Xml_Calc_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sun.xml.calc.template", subtype : null, suffix : null, parameters : null, original : "application/vnd.sun.xml.calc.template", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["stc"] } : MediaTypeStruct));
	static public var Application_Vnd_Sun_Xml_Draw : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sun.xml.draw", subtype : null, suffix : null, parameters : null, original : "application/vnd.sun.xml.draw", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sxd"] } : MediaTypeStruct));
	static public var Application_Vnd_Sun_Xml_Draw_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sun.xml.draw.template", subtype : null, suffix : null, parameters : null, original : "application/vnd.sun.xml.draw.template", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["std"] } : MediaTypeStruct));
	static public var Application_Vnd_Sun_Xml_Impress : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sun.xml.impress", subtype : null, suffix : null, parameters : null, original : "application/vnd.sun.xml.impress", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sxi"] } : MediaTypeStruct));
	static public var Application_Vnd_Sun_Xml_Impress_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sun.xml.impress.template", subtype : null, suffix : null, parameters : null, original : "application/vnd.sun.xml.impress.template", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sti"] } : MediaTypeStruct));
	static public var Application_Vnd_Sun_Xml_Math : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sun.xml.math", subtype : null, suffix : null, parameters : null, original : "application/vnd.sun.xml.math", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sxm"] } : MediaTypeStruct));
	static public var Application_Vnd_Sun_Xml_Writer : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sun.xml.writer", subtype : null, suffix : null, parameters : null, original : "application/vnd.sun.xml.writer", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sxw"] } : MediaTypeStruct));
	static public var Application_Vnd_Sun_Xml_Writer_Global : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sun.xml.writer.global", subtype : null, suffix : null, parameters : null, original : "application/vnd.sun.xml.writer.global", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sxg"] } : MediaTypeStruct));
	static public var Application_Vnd_Sun_Xml_Writer_Template : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sun.xml.writer.template", subtype : null, suffix : null, parameters : null, original : "application/vnd.sun.xml.writer.template", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["stw"] } : MediaTypeStruct));
	static public var Application_Vnd_Sus_Calendar : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.sus-calendar", subtype : null, suffix : null, parameters : null, original : "application/vnd.sus-calendar", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sus", "susp"] } : MediaTypeStruct));
	static public var Application_Vnd_Svd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.svd", subtype : null, suffix : null, parameters : null, original : "application/vnd.svd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["svd"] } : MediaTypeStruct));
	static public var Application_Vnd_Swiftview_Ics : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.swiftview-ics", subtype : null, suffix : null, parameters : null, original : "application/vnd.swiftview-ics", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Symbian_Install : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.symbian.install", subtype : null, suffix : null, parameters : null, original : "application/vnd.symbian.install", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sis", "sisx"] } : MediaTypeStruct));
	static public var Application_Vnd_Syncml_Dm_Notification : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.syncml.dm.notification", subtype : null, suffix : null, parameters : null, original : "application/vnd.syncml.dm.notification", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Syncml_Dm_Wbxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.syncml.dm", subtype : null, suffix : "wbxml", parameters : null, original : "application/vnd.syncml.dm+wbxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["bdm"] } : MediaTypeStruct));
	static public var Application_Vnd_Syncml_Dm_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.syncml.dm", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.syncml.dm+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xdm"] } : MediaTypeStruct));
	static public var Application_Vnd_Syncml_Dmddf_Wbxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.syncml.dmddf", subtype : null, suffix : "wbxml", parameters : null, original : "application/vnd.syncml.dmddf+wbxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Syncml_Dmddf_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.syncml.dmddf", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.syncml.dmddf+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Syncml_Dmtnds_Wbxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.syncml.dmtnds", subtype : null, suffix : "wbxml", parameters : null, original : "application/vnd.syncml.dmtnds+wbxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Syncml_Dmtnds_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.syncml.dmtnds", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.syncml.dmtnds+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Syncml_Ds_Notification : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.syncml.ds.notification", subtype : null, suffix : null, parameters : null, original : "application/vnd.syncml.ds.notification", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Syncml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.syncml", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.syncml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xsm"] } : MediaTypeStruct));
	static public var Application_Vnd_Tao_Intent_Module_Archive : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.tao.intent-module-archive", subtype : null, suffix : null, parameters : null, original : "application/vnd.tao.intent-module-archive", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["tao"] } : MediaTypeStruct));
	static public var Application_Vnd_Tcpdump_Pcap : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.tcpdump.pcap", subtype : null, suffix : null, parameters : null, original : "application/vnd.tcpdump.pcap", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pcap", "cap", "dmp"] } : MediaTypeStruct));
	static public var Application_Vnd_Tmd_Mediaflex_Api_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.tmd.mediaflex.api", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.tmd.mediaflex.api+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Tml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.tml", subtype : null, suffix : null, parameters : null, original : "application/vnd.tml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Tmobile_Livetv : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.tmobile-livetv", subtype : null, suffix : null, parameters : null, original : "application/vnd.tmobile-livetv", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["tmo"] } : MediaTypeStruct));
	static public var Application_Vnd_Tri_Onesource : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.tri.onesource", subtype : null, suffix : null, parameters : null, original : "application/vnd.tri.onesource", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Trid_Tpt : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.trid.tpt", subtype : null, suffix : null, parameters : null, original : "application/vnd.trid.tpt", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["tpt"] } : MediaTypeStruct));
	static public var Application_Vnd_Triscape_Mxs : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.triscape.mxs", subtype : null, suffix : null, parameters : null, original : "application/vnd.triscape.mxs", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mxs"] } : MediaTypeStruct));
	static public var Application_Vnd_Trueapp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.trueapp", subtype : null, suffix : null, parameters : null, original : "application/vnd.trueapp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["tra"] } : MediaTypeStruct));
	static public var Application_Vnd_Truedoc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.truedoc", subtype : null, suffix : null, parameters : null, original : "application/vnd.truedoc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ubisoft_Webplayer : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ubisoft.webplayer", subtype : null, suffix : null, parameters : null, original : "application/vnd.ubisoft.webplayer", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Ufdl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.ufdl", subtype : null, suffix : null, parameters : null, original : "application/vnd.ufdl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ufd", "ufdl"] } : MediaTypeStruct));
	static public var Application_Vnd_Uiq_Theme : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uiq.theme", subtype : null, suffix : null, parameters : null, original : "application/vnd.uiq.theme", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["utz"] } : MediaTypeStruct));
	static public var Application_Vnd_Umajin : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.umajin", subtype : null, suffix : null, parameters : null, original : "application/vnd.umajin", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["umj"] } : MediaTypeStruct));
	static public var Application_Vnd_Unity : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.unity", subtype : null, suffix : null, parameters : null, original : "application/vnd.unity", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["unityweb"] } : MediaTypeStruct));
	static public var Application_Vnd_Uoml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.uoml", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.uoml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["uoml"] } : MediaTypeStruct));
	static public var Application_Vnd_Uplanet_Alert : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uplanet.alert", subtype : null, suffix : null, parameters : null, original : "application/vnd.uplanet.alert", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Uplanet_Alert_Wbxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uplanet.alert-wbxml", subtype : null, suffix : null, parameters : null, original : "application/vnd.uplanet.alert-wbxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Uplanet_Bearer_Choice : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uplanet.bearer-choice", subtype : null, suffix : null, parameters : null, original : "application/vnd.uplanet.bearer-choice", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Uplanet_Bearer_Choice_Wbxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uplanet.bearer-choice-wbxml", subtype : null, suffix : null, parameters : null, original : "application/vnd.uplanet.bearer-choice-wbxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Uplanet_Cacheop : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uplanet.cacheop", subtype : null, suffix : null, parameters : null, original : "application/vnd.uplanet.cacheop", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Uplanet_Cacheop_Wbxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uplanet.cacheop-wbxml", subtype : null, suffix : null, parameters : null, original : "application/vnd.uplanet.cacheop-wbxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Uplanet_Channel : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uplanet.channel", subtype : null, suffix : null, parameters : null, original : "application/vnd.uplanet.channel", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Uplanet_Channel_Wbxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uplanet.channel-wbxml", subtype : null, suffix : null, parameters : null, original : "application/vnd.uplanet.channel-wbxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Uplanet_List : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uplanet.list", subtype : null, suffix : null, parameters : null, original : "application/vnd.uplanet.list", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Uplanet_List_Wbxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uplanet.list-wbxml", subtype : null, suffix : null, parameters : null, original : "application/vnd.uplanet.list-wbxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Uplanet_Listcmd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uplanet.listcmd", subtype : null, suffix : null, parameters : null, original : "application/vnd.uplanet.listcmd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Uplanet_Listcmd_Wbxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uplanet.listcmd-wbxml", subtype : null, suffix : null, parameters : null, original : "application/vnd.uplanet.listcmd-wbxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Uplanet_Signal : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uplanet.signal", subtype : null, suffix : null, parameters : null, original : "application/vnd.uplanet.signal", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Uri_Map : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.uri-map", subtype : null, suffix : null, parameters : null, original : "application/vnd.uri-map", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Valve_Source_Material : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.valve.source.material", subtype : null, suffix : null, parameters : null, original : "application/vnd.valve.source.material", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Vcx : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.vcx", subtype : null, suffix : null, parameters : null, original : "application/vnd.vcx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["vcx"] } : MediaTypeStruct));
	static public var Application_Vnd_Vd_Study : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.vd-study", subtype : null, suffix : null, parameters : null, original : "application/vnd.vd-study", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Vectorworks : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.vectorworks", subtype : null, suffix : null, parameters : null, original : "application/vnd.vectorworks", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Vel_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.vel", subtype : null, suffix : "json", parameters : null, original : "application/vnd.vel+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Verimatrix_Vcas : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.verimatrix.vcas", subtype : null, suffix : null, parameters : null, original : "application/vnd.verimatrix.vcas", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Vidsoft_Vidconference : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.vidsoft.vidconference", subtype : null, suffix : null, parameters : null, original : "application/vnd.vidsoft.vidconference", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Visio : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.visio", subtype : null, suffix : null, parameters : null, original : "application/vnd.visio", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["vsd", "vst", "vss", "vsw"] } : MediaTypeStruct));
	static public var Application_Vnd_Visionary : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.visionary", subtype : null, suffix : null, parameters : null, original : "application/vnd.visionary", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["vis"] } : MediaTypeStruct));
	static public var Application_Vnd_Vividence_Scriptfile : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.vividence.scriptfile", subtype : null, suffix : null, parameters : null, original : "application/vnd.vividence.scriptfile", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Vsf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.vsf", subtype : null, suffix : null, parameters : null, original : "application/vnd.vsf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["vsf"] } : MediaTypeStruct));
	static public var Application_Vnd_Wap_Sic : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wap.sic", subtype : null, suffix : null, parameters : null, original : "application/vnd.wap.sic", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Wap_Slc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wap.slc", subtype : null, suffix : null, parameters : null, original : "application/vnd.wap.slc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Wap_Wbxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wap.wbxml", subtype : null, suffix : null, parameters : null, original : "application/vnd.wap.wbxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wbxml"] } : MediaTypeStruct));
	static public var Application_Vnd_Wap_Wmlc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wap.wmlc", subtype : null, suffix : null, parameters : null, original : "application/vnd.wap.wmlc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wmlc"] } : MediaTypeStruct));
	static public var Application_Vnd_Wap_Wmlscriptc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wap.wmlscriptc", subtype : null, suffix : null, parameters : null, original : "application/vnd.wap.wmlscriptc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wmlsc"] } : MediaTypeStruct));
	static public var Application_Vnd_Webturbo : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.webturbo", subtype : null, suffix : null, parameters : null, original : "application/vnd.webturbo", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wtb"] } : MediaTypeStruct));
	static public var Application_Vnd_Wfa_P2p : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wfa.p2p", subtype : null, suffix : null, parameters : null, original : "application/vnd.wfa.p2p", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Wfa_Wsc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wfa.wsc", subtype : null, suffix : null, parameters : null, original : "application/vnd.wfa.wsc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Windows_Devicepairing : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.windows.devicepairing", subtype : null, suffix : null, parameters : null, original : "application/vnd.windows.devicepairing", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Wmc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wmc", subtype : null, suffix : null, parameters : null, original : "application/vnd.wmc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Wmf_Bootstrap : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wmf.bootstrap", subtype : null, suffix : null, parameters : null, original : "application/vnd.wmf.bootstrap", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Wolfram_Mathematica : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wolfram.mathematica", subtype : null, suffix : null, parameters : null, original : "application/vnd.wolfram.mathematica", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Wolfram_Mathematica_Package : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wolfram.mathematica.package", subtype : null, suffix : null, parameters : null, original : "application/vnd.wolfram.mathematica.package", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Wolfram_Player : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wolfram.player", subtype : null, suffix : null, parameters : null, original : "application/vnd.wolfram.player", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["nbp"] } : MediaTypeStruct));
	static public var Application_Vnd_Wordperfect : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wordperfect", subtype : null, suffix : null, parameters : null, original : "application/vnd.wordperfect", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wpd"] } : MediaTypeStruct));
	static public var Application_Vnd_Wqd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wqd", subtype : null, suffix : null, parameters : null, original : "application/vnd.wqd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wqd"] } : MediaTypeStruct));
	static public var Application_Vnd_Wrq_Hp3000_Labelled : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wrq-hp3000-labelled", subtype : null, suffix : null, parameters : null, original : "application/vnd.wrq-hp3000-labelled", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Wt_Stf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wt.stf", subtype : null, suffix : null, parameters : null, original : "application/vnd.wt.stf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["stf"] } : MediaTypeStruct));
	static public var Application_Vnd_Wv_Csp_Wbxml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.wv.csp", subtype : null, suffix : "wbxml", parameters : null, original : "application/vnd.wv.csp+wbxml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Wv_Csp_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.wv.csp", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.wv.csp+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Wv_Ssp_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.wv.ssp", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.wv.ssp+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Xacml_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : "vnd.xacml", subtype : null, suffix : "json", parameters : null, original : "application/vnd.xacml+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Xara : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.xara", subtype : null, suffix : null, parameters : null, original : "application/vnd.xara", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xar"] } : MediaTypeStruct));
	static public var Application_Vnd_Xfdl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.xfdl", subtype : null, suffix : null, parameters : null, original : "application/vnd.xfdl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xfdl"] } : MediaTypeStruct));
	static public var Application_Vnd_Xfdl_Webform : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.xfdl.webform", subtype : null, suffix : null, parameters : null, original : "application/vnd.xfdl.webform", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Xmi_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.xmi", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.xmi+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Xmpie_Cpkg : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.xmpie.cpkg", subtype : null, suffix : null, parameters : null, original : "application/vnd.xmpie.cpkg", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Xmpie_Dpkg : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.xmpie.dpkg", subtype : null, suffix : null, parameters : null, original : "application/vnd.xmpie.dpkg", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Xmpie_Plan : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.xmpie.plan", subtype : null, suffix : null, parameters : null, original : "application/vnd.xmpie.plan", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Xmpie_Ppkg : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.xmpie.ppkg", subtype : null, suffix : null, parameters : null, original : "application/vnd.xmpie.ppkg", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Xmpie_Xlim : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.xmpie.xlim", subtype : null, suffix : null, parameters : null, original : "application/vnd.xmpie.xlim", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Yamaha_Hv_Dic : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.yamaha.hv-dic", subtype : null, suffix : null, parameters : null, original : "application/vnd.yamaha.hv-dic", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["hvd"] } : MediaTypeStruct));
	static public var Application_Vnd_Yamaha_Hv_Script : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.yamaha.hv-script", subtype : null, suffix : null, parameters : null, original : "application/vnd.yamaha.hv-script", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["hvs"] } : MediaTypeStruct));
	static public var Application_Vnd_Yamaha_Hv_Voice : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.yamaha.hv-voice", subtype : null, suffix : null, parameters : null, original : "application/vnd.yamaha.hv-voice", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["hvp"] } : MediaTypeStruct));
	static public var Application_Vnd_Yamaha_Openscoreformat : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.yamaha.openscoreformat", subtype : null, suffix : null, parameters : null, original : "application/vnd.yamaha.openscoreformat", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["osf"] } : MediaTypeStruct));
	static public var Application_Vnd_Yamaha_Openscoreformat_Osfpvg_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.yamaha.openscoreformat.osfpvg", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.yamaha.openscoreformat.osfpvg+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["osfpvg"] } : MediaTypeStruct));
	static public var Application_Vnd_Yamaha_Remote_Setup : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.yamaha.remote-setup", subtype : null, suffix : null, parameters : null, original : "application/vnd.yamaha.remote-setup", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Yamaha_Smaf_Audio : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.yamaha.smaf-audio", subtype : null, suffix : null, parameters : null, original : "application/vnd.yamaha.smaf-audio", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["saf"] } : MediaTypeStruct));
	static public var Application_Vnd_Yamaha_Smaf_Phrase : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.yamaha.smaf-phrase", subtype : null, suffix : null, parameters : null, original : "application/vnd.yamaha.smaf-phrase", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["spf"] } : MediaTypeStruct));
	static public var Application_Vnd_Yamaha_Through_Ngn : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.yamaha.through-ngn", subtype : null, suffix : null, parameters : null, original : "application/vnd.yamaha.through-ngn", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Yamaha_Tunnel_Udpencap : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.yamaha.tunnel-udpencap", subtype : null, suffix : null, parameters : null, original : "application/vnd.yamaha.tunnel-udpencap", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Yaoweme : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.yaoweme", subtype : null, suffix : null, parameters : null, original : "application/vnd.yaoweme", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Vnd_Yellowriver_Custom_Menu : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.yellowriver-custom-menu", subtype : null, suffix : null, parameters : null, original : "application/vnd.yellowriver-custom-menu", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cmp"] } : MediaTypeStruct));
	static public var Application_Vnd_Zul : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "vnd.zul", subtype : null, suffix : null, parameters : null, original : "application/vnd.zul", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["zir", "zirz"] } : MediaTypeStruct));
	static public var Application_Vnd_Zzazz_Deck_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : "vnd.zzazz.deck", subtype : null, suffix : "xml", parameters : null, original : "application/vnd.zzazz.deck+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["zaz"] } : MediaTypeStruct));
	static public var Application_Voicexml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "voicexml", suffix : "xml", parameters : null, original : "application/voicexml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["vxml"] } : MediaTypeStruct));
	static public var Application_Vq_Rtcpxr : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "vq-rtcpxr", suffix : null, parameters : null, original : "application/vq-rtcpxr", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Watcherinfo_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "watcherinfo", suffix : "xml", parameters : null, original : "application/watcherinfo+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Whoispp_Query : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "whoispp-query", suffix : null, parameters : null, original : "application/whoispp-query", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Whoispp_Response : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "whoispp-response", suffix : null, parameters : null, original : "application/whoispp-response", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Widget : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "widget", suffix : null, parameters : null, original : "application/widget", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wgt"] } : MediaTypeStruct));
	static public var Application_Winhlp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "winhlp", suffix : null, parameters : null, original : "application/winhlp", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["hlp"] } : MediaTypeStruct));
	static public var Application_Wita : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "wita", suffix : null, parameters : null, original : "application/wita", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Wordperfect5_1 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "wordperfect5.1", subtype : null, suffix : null, parameters : null, original : "application/wordperfect5.1", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Wsdl_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "wsdl", suffix : "xml", parameters : null, original : "application/wsdl+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wsdl"] } : MediaTypeStruct));
	static public var Application_Wspolicy_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "wspolicy", suffix : "xml", parameters : null, original : "application/wspolicy+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wspolicy"] } : MediaTypeStruct));
	static public var Application_X400_Bp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "x400-bp", subtype : null, suffix : null, parameters : null, original : "application/x400-bp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_X_7z_Compressed : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "x-7z-compressed", subtype : null, suffix : null, parameters : null, original : "application/x-7z-compressed", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["7z"] } : MediaTypeStruct));
	static public var Application_X_Abiword : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-abiword", suffix : null, parameters : null, original : "application/x-abiword", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["abw"] } : MediaTypeStruct));
	static public var Application_X_Ace_Compressed : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-ace-compressed", suffix : null, parameters : null, original : "application/x-ace-compressed", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["ace"] } : MediaTypeStruct));
	static public var Application_X_Amf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-amf", suffix : null, parameters : null, original : "application/x-amf", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_X_Apple_Diskimage : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-apple-diskimage", suffix : null, parameters : null, original : "application/x-apple-diskimage", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["dmg"] } : MediaTypeStruct));
	static public var Application_X_Authorware_Bin : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-authorware-bin", suffix : null, parameters : null, original : "application/x-authorware-bin", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["aab", "x32", "u32", "vox"] } : MediaTypeStruct));
	static public var Application_X_Authorware_Map : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-authorware-map", suffix : null, parameters : null, original : "application/x-authorware-map", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["aam"] } : MediaTypeStruct));
	static public var Application_X_Authorware_Seg : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-authorware-seg", suffix : null, parameters : null, original : "application/x-authorware-seg", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["aas"] } : MediaTypeStruct));
	static public var Application_X_Bcpio : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-bcpio", suffix : null, parameters : null, original : "application/x-bcpio", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["bcpio"] } : MediaTypeStruct));
	static public var Application_X_Bdoc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-bdoc", suffix : null, parameters : null, original : "application/x-bdoc", charset : null, source : null, compressible : false, extensions : ["bdoc"] } : MediaTypeStruct));
	static public var Application_X_Bittorrent : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-bittorrent", suffix : null, parameters : null, original : "application/x-bittorrent", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["torrent"] } : MediaTypeStruct));
	static public var Application_X_Blorb : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-blorb", suffix : null, parameters : null, original : "application/x-blorb", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["blb", "blorb"] } : MediaTypeStruct));
	static public var Application_X_Bzip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-bzip", suffix : null, parameters : null, original : "application/x-bzip", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["bz"] } : MediaTypeStruct));
	static public var Application_X_Bzip2 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "x-bzip2", subtype : null, suffix : null, parameters : null, original : "application/x-bzip2", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["bz2", "boz"] } : MediaTypeStruct));
	static public var Application_X_Cbr : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-cbr", suffix : null, parameters : null, original : "application/x-cbr", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["cbr", "cba", "cbt", "cbz", "cb7"] } : MediaTypeStruct));
	static public var Application_X_Cdlink : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-cdlink", suffix : null, parameters : null, original : "application/x-cdlink", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["vcd"] } : MediaTypeStruct));
	static public var Application_X_Cfs_Compressed : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-cfs-compressed", suffix : null, parameters : null, original : "application/x-cfs-compressed", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["cfs"] } : MediaTypeStruct));
	static public var Application_X_Chat : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-chat", suffix : null, parameters : null, original : "application/x-chat", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["chat"] } : MediaTypeStruct));
	static public var Application_X_Chess_Pgn : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-chess-pgn", suffix : null, parameters : null, original : "application/x-chess-pgn", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["pgn"] } : MediaTypeStruct));
	static public var Application_X_Chrome_Extension : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-chrome-extension", suffix : null, parameters : null, original : "application/x-chrome-extension", charset : null, source : null, compressible : null, extensions : ["crx"] } : MediaTypeStruct));
	static public var Application_X_Cocoa : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-cocoa", suffix : null, parameters : null, original : "application/x-cocoa", charset : null, source : (("nginx" : MediaTypeSource)), compressible : null, extensions : ["cco"] } : MediaTypeStruct));
	static public var Application_X_Compress : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-compress", suffix : null, parameters : null, original : "application/x-compress", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_X_Conference : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-conference", suffix : null, parameters : null, original : "application/x-conference", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["nsc"] } : MediaTypeStruct));
	static public var Application_X_Cpio : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-cpio", suffix : null, parameters : null, original : "application/x-cpio", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["cpio"] } : MediaTypeStruct));
	static public var Application_X_Csh : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-csh", suffix : null, parameters : null, original : "application/x-csh", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["csh"] } : MediaTypeStruct));
	static public var Application_X_Deb : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-deb", suffix : null, parameters : null, original : "application/x-deb", charset : null, source : null, compressible : false, extensions : null } : MediaTypeStruct));
	static public var Application_X_Debian_Package : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-debian-package", suffix : null, parameters : null, original : "application/x-debian-package", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["deb", "udeb"] } : MediaTypeStruct));
	static public var Application_X_Dgc_Compressed : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-dgc-compressed", suffix : null, parameters : null, original : "application/x-dgc-compressed", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["dgc"] } : MediaTypeStruct));
	static public var Application_X_Director : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-director", suffix : null, parameters : null, original : "application/x-director", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"] } : MediaTypeStruct));
	static public var Application_X_Doom : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-doom", suffix : null, parameters : null, original : "application/x-doom", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["wad"] } : MediaTypeStruct));
	static public var Application_X_Dtbncx_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "x-dtbncx", suffix : "xml", parameters : null, original : "application/x-dtbncx+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["ncx"] } : MediaTypeStruct));
	static public var Application_X_Dtbook_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "x-dtbook", suffix : "xml", parameters : null, original : "application/x-dtbook+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["dtb"] } : MediaTypeStruct));
	static public var Application_X_Dtbresource_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "x-dtbresource", suffix : "xml", parameters : null, original : "application/x-dtbresource+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["res"] } : MediaTypeStruct));
	static public var Application_X_Dvi : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-dvi", suffix : null, parameters : null, original : "application/x-dvi", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["dvi"] } : MediaTypeStruct));
	static public var Application_X_Envoy : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-envoy", suffix : null, parameters : null, original : "application/x-envoy", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["evy"] } : MediaTypeStruct));
	static public var Application_X_Eva : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-eva", suffix : null, parameters : null, original : "application/x-eva", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["eva"] } : MediaTypeStruct));
	static public var Application_X_Font_Bdf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-font-bdf", suffix : null, parameters : null, original : "application/x-font-bdf", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["bdf"] } : MediaTypeStruct));
	static public var Application_X_Font_Dos : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-font-dos", suffix : null, parameters : null, original : "application/x-font-dos", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_X_Font_Framemaker : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-font-framemaker", suffix : null, parameters : null, original : "application/x-font-framemaker", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_X_Font_Ghostscript : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-font-ghostscript", suffix : null, parameters : null, original : "application/x-font-ghostscript", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["gsf"] } : MediaTypeStruct));
	static public var Application_X_Font_Libgrx : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-font-libgrx", suffix : null, parameters : null, original : "application/x-font-libgrx", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_X_Font_Linux_Psf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-font-linux-psf", suffix : null, parameters : null, original : "application/x-font-linux-psf", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["psf"] } : MediaTypeStruct));
	static public var Application_X_Font_Otf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-font-otf", suffix : null, parameters : null, original : "application/x-font-otf", charset : null, source : (("apache" : MediaTypeSource)), compressible : true, extensions : ["otf"] } : MediaTypeStruct));
	static public var Application_X_Font_Pcf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-font-pcf", suffix : null, parameters : null, original : "application/x-font-pcf", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["pcf"] } : MediaTypeStruct));
	static public var Application_X_Font_Snf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-font-snf", suffix : null, parameters : null, original : "application/x-font-snf", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["snf"] } : MediaTypeStruct));
	static public var Application_X_Font_Speedo : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-font-speedo", suffix : null, parameters : null, original : "application/x-font-speedo", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_X_Font_Sunos_News : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-font-sunos-news", suffix : null, parameters : null, original : "application/x-font-sunos-news", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_X_Font_Ttf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-font-ttf", suffix : null, parameters : null, original : "application/x-font-ttf", charset : null, source : (("apache" : MediaTypeSource)), compressible : true, extensions : ["ttf", "ttc"] } : MediaTypeStruct));
	static public var Application_X_Font_Type1 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "x-font-type1", subtype : null, suffix : null, parameters : null, original : "application/x-font-type1", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["pfa", "pfb", "pfm", "afm"] } : MediaTypeStruct));
	static public var Application_X_Font_Vfont : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-font-vfont", suffix : null, parameters : null, original : "application/x-font-vfont", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_X_Freearc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-freearc", suffix : null, parameters : null, original : "application/x-freearc", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["arc"] } : MediaTypeStruct));
	static public var Application_X_Futuresplash : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-futuresplash", suffix : null, parameters : null, original : "application/x-futuresplash", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["spl"] } : MediaTypeStruct));
	static public var Application_X_Gca_Compressed : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-gca-compressed", suffix : null, parameters : null, original : "application/x-gca-compressed", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["gca"] } : MediaTypeStruct));
	static public var Application_X_Glulx : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-glulx", suffix : null, parameters : null, original : "application/x-glulx", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["ulx"] } : MediaTypeStruct));
	static public var Application_X_Gnumeric : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-gnumeric", suffix : null, parameters : null, original : "application/x-gnumeric", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["gnumeric"] } : MediaTypeStruct));
	static public var Application_X_Gramps_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-gramps-xml", suffix : null, parameters : null, original : "application/x-gramps-xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["gramps"] } : MediaTypeStruct));
	static public var Application_X_Gtar : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-gtar", suffix : null, parameters : null, original : "application/x-gtar", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["gtar"] } : MediaTypeStruct));
	static public var Application_X_Gzip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-gzip", suffix : null, parameters : null, original : "application/x-gzip", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_X_Hdf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-hdf", suffix : null, parameters : null, original : "application/x-hdf", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["hdf"] } : MediaTypeStruct));
	static public var Application_X_Httpd_Php : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-httpd-php", suffix : null, parameters : null, original : "application/x-httpd-php", charset : null, source : null, compressible : true, extensions : ["php"] } : MediaTypeStruct));
	static public var Application_X_Install_Instructions : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-install-instructions", suffix : null, parameters : null, original : "application/x-install-instructions", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["install"] } : MediaTypeStruct));
	static public var Application_X_Iso9660_Image : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "x-iso9660-image", subtype : null, suffix : null, parameters : null, original : "application/x-iso9660-image", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["iso"] } : MediaTypeStruct));
	static public var Application_X_Java_Archive_Diff : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-java-archive-diff", suffix : null, parameters : null, original : "application/x-java-archive-diff", charset : null, source : (("nginx" : MediaTypeSource)), compressible : null, extensions : ["jardiff"] } : MediaTypeStruct));
	static public var Application_X_Java_Jnlp_File : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-java-jnlp-file", suffix : null, parameters : null, original : "application/x-java-jnlp-file", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["jnlp"] } : MediaTypeStruct));
	static public var Application_X_Javascript : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-javascript", suffix : null, parameters : null, original : "application/x-javascript", charset : null, source : null, compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_X_Latex : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-latex", suffix : null, parameters : null, original : "application/x-latex", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["latex"] } : MediaTypeStruct));
	static public var Application_X_Lua_Bytecode : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-lua-bytecode", suffix : null, parameters : null, original : "application/x-lua-bytecode", charset : null, source : null, compressible : null, extensions : ["luac"] } : MediaTypeStruct));
	static public var Application_X_Lzh_Compressed : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-lzh-compressed", suffix : null, parameters : null, original : "application/x-lzh-compressed", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["lzh", "lha"] } : MediaTypeStruct));
	static public var Application_X_Makeself : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-makeself", suffix : null, parameters : null, original : "application/x-makeself", charset : null, source : (("nginx" : MediaTypeSource)), compressible : null, extensions : ["run"] } : MediaTypeStruct));
	static public var Application_X_Mie : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-mie", suffix : null, parameters : null, original : "application/x-mie", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["mie"] } : MediaTypeStruct));
	static public var Application_X_Mobipocket_Ebook : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-mobipocket-ebook", suffix : null, parameters : null, original : "application/x-mobipocket-ebook", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["prc", "mobi"] } : MediaTypeStruct));
	static public var Application_X_Mpegurl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-mpegurl", suffix : null, parameters : null, original : "application/x-mpegurl", charset : null, source : null, compressible : false, extensions : null } : MediaTypeStruct));
	static public var Application_X_Ms_Application : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-ms-application", suffix : null, parameters : null, original : "application/x-ms-application", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["application"] } : MediaTypeStruct));
	static public var Application_X_Ms_Shortcut : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-ms-shortcut", suffix : null, parameters : null, original : "application/x-ms-shortcut", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["lnk"] } : MediaTypeStruct));
	static public var Application_X_Ms_Wmd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-ms-wmd", suffix : null, parameters : null, original : "application/x-ms-wmd", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["wmd"] } : MediaTypeStruct));
	static public var Application_X_Ms_Wmz : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-ms-wmz", suffix : null, parameters : null, original : "application/x-ms-wmz", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["wmz"] } : MediaTypeStruct));
	static public var Application_X_Ms_Xbap : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-ms-xbap", suffix : null, parameters : null, original : "application/x-ms-xbap", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["xbap"] } : MediaTypeStruct));
	static public var Application_X_Msaccess : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-msaccess", suffix : null, parameters : null, original : "application/x-msaccess", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["mdb"] } : MediaTypeStruct));
	static public var Application_X_Msbinder : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-msbinder", suffix : null, parameters : null, original : "application/x-msbinder", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["obd"] } : MediaTypeStruct));
	static public var Application_X_Mscardfile : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-mscardfile", suffix : null, parameters : null, original : "application/x-mscardfile", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["crd"] } : MediaTypeStruct));
	static public var Application_X_Msclip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-msclip", suffix : null, parameters : null, original : "application/x-msclip", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["clp"] } : MediaTypeStruct));
	static public var Application_X_Msdos_Program : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-msdos-program", suffix : null, parameters : null, original : "application/x-msdos-program", charset : null, source : null, compressible : null, extensions : ["exe"] } : MediaTypeStruct));
	static public var Application_X_Msdownload : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-msdownload", suffix : null, parameters : null, original : "application/x-msdownload", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["exe", "dll", "com", "bat", "msi"] } : MediaTypeStruct));
	static public var Application_X_Msmediaview : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-msmediaview", suffix : null, parameters : null, original : "application/x-msmediaview", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["mvb", "m13", "m14"] } : MediaTypeStruct));
	static public var Application_X_Msmetafile : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-msmetafile", suffix : null, parameters : null, original : "application/x-msmetafile", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["wmf", "wmz", "emf", "emz"] } : MediaTypeStruct));
	static public var Application_X_Msmoney : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-msmoney", suffix : null, parameters : null, original : "application/x-msmoney", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["mny"] } : MediaTypeStruct));
	static public var Application_X_Mspublisher : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-mspublisher", suffix : null, parameters : null, original : "application/x-mspublisher", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["pub"] } : MediaTypeStruct));
	static public var Application_X_Msschedule : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-msschedule", suffix : null, parameters : null, original : "application/x-msschedule", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["scd"] } : MediaTypeStruct));
	static public var Application_X_Msterminal : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-msterminal", suffix : null, parameters : null, original : "application/x-msterminal", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["trm"] } : MediaTypeStruct));
	static public var Application_X_Mswrite : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-mswrite", suffix : null, parameters : null, original : "application/x-mswrite", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["wri"] } : MediaTypeStruct));
	static public var Application_X_Netcdf : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-netcdf", suffix : null, parameters : null, original : "application/x-netcdf", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["nc", "cdf"] } : MediaTypeStruct));
	static public var Application_X_Ns_Proxy_Autoconfig : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-ns-proxy-autoconfig", suffix : null, parameters : null, original : "application/x-ns-proxy-autoconfig", charset : null, source : null, compressible : true, extensions : ["pac"] } : MediaTypeStruct));
	static public var Application_X_Nzb : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-nzb", suffix : null, parameters : null, original : "application/x-nzb", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["nzb"] } : MediaTypeStruct));
	static public var Application_X_Perl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-perl", suffix : null, parameters : null, original : "application/x-perl", charset : null, source : (("nginx" : MediaTypeSource)), compressible : null, extensions : ["pl", "pm"] } : MediaTypeStruct));
	static public var Application_X_Pilot : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-pilot", suffix : null, parameters : null, original : "application/x-pilot", charset : null, source : (("nginx" : MediaTypeSource)), compressible : null, extensions : ["prc", "pdb"] } : MediaTypeStruct));
	static public var Application_X_Pkcs12 : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "x-pkcs12", subtype : null, suffix : null, parameters : null, original : "application/x-pkcs12", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["p12", "pfx"] } : MediaTypeStruct));
	static public var Application_X_Pkcs7_Certificates : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "x-pkcs7-certificates", subtype : null, suffix : null, parameters : null, original : "application/x-pkcs7-certificates", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["p7b", "spc"] } : MediaTypeStruct));
	static public var Application_X_Pkcs7_Certreqresp : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "x-pkcs7-certreqresp", subtype : null, suffix : null, parameters : null, original : "application/x-pkcs7-certreqresp", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["p7r"] } : MediaTypeStruct));
	static public var Application_X_Rar_Compressed : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-rar-compressed", suffix : null, parameters : null, original : "application/x-rar-compressed", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["rar"] } : MediaTypeStruct));
	static public var Application_X_Redhat_Package_Manager : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-redhat-package-manager", suffix : null, parameters : null, original : "application/x-redhat-package-manager", charset : null, source : (("nginx" : MediaTypeSource)), compressible : null, extensions : ["rpm"] } : MediaTypeStruct));
	static public var Application_X_Research_Info_Systems : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-research-info-systems", suffix : null, parameters : null, original : "application/x-research-info-systems", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["ris"] } : MediaTypeStruct));
	static public var Application_X_Sea : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-sea", suffix : null, parameters : null, original : "application/x-sea", charset : null, source : (("nginx" : MediaTypeSource)), compressible : null, extensions : ["sea"] } : MediaTypeStruct));
	static public var Application_X_Sh : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-sh", suffix : null, parameters : null, original : "application/x-sh", charset : null, source : (("apache" : MediaTypeSource)), compressible : true, extensions : ["sh"] } : MediaTypeStruct));
	static public var Application_X_Shar : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-shar", suffix : null, parameters : null, original : "application/x-shar", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["shar"] } : MediaTypeStruct));
	static public var Application_X_Shockwave_Flash : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-shockwave-flash", suffix : null, parameters : null, original : "application/x-shockwave-flash", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["swf"] } : MediaTypeStruct));
	static public var Application_X_Silverlight_App : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-silverlight-app", suffix : null, parameters : null, original : "application/x-silverlight-app", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["xap"] } : MediaTypeStruct));
	static public var Application_X_Sql : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-sql", suffix : null, parameters : null, original : "application/x-sql", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sql"] } : MediaTypeStruct));
	static public var Application_X_Stuffit : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-stuffit", suffix : null, parameters : null, original : "application/x-stuffit", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["sit"] } : MediaTypeStruct));
	static public var Application_X_Stuffitx : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-stuffitx", suffix : null, parameters : null, original : "application/x-stuffitx", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sitx"] } : MediaTypeStruct));
	static public var Application_X_Subrip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-subrip", suffix : null, parameters : null, original : "application/x-subrip", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["srt"] } : MediaTypeStruct));
	static public var Application_X_Sv4cpio : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "x-sv4cpio", subtype : null, suffix : null, parameters : null, original : "application/x-sv4cpio", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sv4cpio"] } : MediaTypeStruct));
	static public var Application_X_Sv4crc : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "x-sv4crc", subtype : null, suffix : null, parameters : null, original : "application/x-sv4crc", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sv4crc"] } : MediaTypeStruct));
	static public var Application_X_T3vm_Image : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "x-t3vm-image", subtype : null, suffix : null, parameters : null, original : "application/x-t3vm-image", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["t3"] } : MediaTypeStruct));
	static public var Application_X_Tads : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-tads", suffix : null, parameters : null, original : "application/x-tads", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["gam"] } : MediaTypeStruct));
	static public var Application_X_Tar : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-tar", suffix : null, parameters : null, original : "application/x-tar", charset : null, source : (("apache" : MediaTypeSource)), compressible : true, extensions : ["tar"] } : MediaTypeStruct));
	static public var Application_X_Tcl : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-tcl", suffix : null, parameters : null, original : "application/x-tcl", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["tcl", "tk"] } : MediaTypeStruct));
	static public var Application_X_Tex : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-tex", suffix : null, parameters : null, original : "application/x-tex", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["tex"] } : MediaTypeStruct));
	static public var Application_X_Tex_Tfm : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-tex-tfm", suffix : null, parameters : null, original : "application/x-tex-tfm", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["tfm"] } : MediaTypeStruct));
	static public var Application_X_Texinfo : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-texinfo", suffix : null, parameters : null, original : "application/x-texinfo", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["texinfo", "texi"] } : MediaTypeStruct));
	static public var Application_X_Tgif : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-tgif", suffix : null, parameters : null, original : "application/x-tgif", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["obj"] } : MediaTypeStruct));
	static public var Application_X_Ustar : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-ustar", suffix : null, parameters : null, original : "application/x-ustar", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["ustar"] } : MediaTypeStruct));
	static public var Application_X_Wais_Source : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-wais-source", suffix : null, parameters : null, original : "application/x-wais-source", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["src"] } : MediaTypeStruct));
	static public var Application_X_Web_App_Manifest_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "x-web-app-manifest", suffix : "json", parameters : null, original : "application/x-web-app-manifest+json", charset : null, source : null, compressible : true, extensions : ["webapp"] } : MediaTypeStruct));
	static public var Application_X_Www_Form_Urlencoded : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-www-form-urlencoded", suffix : null, parameters : null, original : "application/x-www-form-urlencoded", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_X_X509_Ca_Cert : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : "x-x509-ca-cert", subtype : null, suffix : null, parameters : null, original : "application/x-x509-ca-cert", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["der", "crt", "pem"] } : MediaTypeStruct));
	static public var Application_X_Xfig : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-xfig", suffix : null, parameters : null, original : "application/x-xfig", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["fig"] } : MediaTypeStruct));
	static public var Application_X_Xliff_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "x-xliff", suffix : "xml", parameters : null, original : "application/x-xliff+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["xlf"] } : MediaTypeStruct));
	static public var Application_X_Xpinstall : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-xpinstall", suffix : null, parameters : null, original : "application/x-xpinstall", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["xpi"] } : MediaTypeStruct));
	static public var Application_X_Xz : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-xz", suffix : null, parameters : null, original : "application/x-xz", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["xz"] } : MediaTypeStruct));
	static public var Application_X_Zmachine : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "x-zmachine", suffix : null, parameters : null, original : "application/x-zmachine", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"] } : MediaTypeStruct));
	static public var Application_Xacml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xacml", suffix : "xml", parameters : null, original : "application/xacml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Xaml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xaml", suffix : "xml", parameters : null, original : "application/xaml+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["xaml"] } : MediaTypeStruct));
	static public var Application_Xcap_Att_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xcap-att", suffix : "xml", parameters : null, original : "application/xcap-att+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Xcap_Caps_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xcap-caps", suffix : "xml", parameters : null, original : "application/xcap-caps+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Xcap_Diff_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xcap-diff", suffix : "xml", parameters : null, original : "application/xcap-diff+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xdf"] } : MediaTypeStruct));
	static public var Application_Xcap_El_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xcap-el", suffix : "xml", parameters : null, original : "application/xcap-el+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Xcap_Error_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xcap-error", suffix : "xml", parameters : null, original : "application/xcap-error+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Xcap_Ns_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xcap-ns", suffix : "xml", parameters : null, original : "application/xcap-ns+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Xcon_Conference_Info_Diff_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xcon-conference-info-diff", suffix : "xml", parameters : null, original : "application/xcon-conference-info-diff+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Xcon_Conference_Info_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xcon-conference-info", suffix : "xml", parameters : null, original : "application/xcon-conference-info+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Xenc_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xenc", suffix : "xml", parameters : null, original : "application/xenc+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xenc"] } : MediaTypeStruct));
	static public var Application_Xhtml_Voice_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xhtml-voice", suffix : "xml", parameters : null, original : "application/xhtml-voice+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Xhtml_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xhtml", suffix : "xml", parameters : null, original : "application/xhtml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["xhtml", "xht"] } : MediaTypeStruct));
	static public var Application_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "xml", suffix : null, parameters : null, original : "application/xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["xml", "xsl", "xsd", "rng"] } : MediaTypeStruct));
	static public var Application_Xml_Dtd : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "xml-dtd", suffix : null, parameters : null, original : "application/xml-dtd", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["dtd"] } : MediaTypeStruct));
	static public var Application_Xml_External_Parsed_Entity : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "xml-external-parsed-entity", suffix : null, parameters : null, original : "application/xml-external-parsed-entity", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Xml_Patch_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xml-patch", suffix : "xml", parameters : null, original : "application/xml-patch+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Xmpp_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xmpp", suffix : "xml", parameters : null, original : "application/xmpp+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Xop_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xop", suffix : "xml", parameters : null, original : "application/xop+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["xop"] } : MediaTypeStruct));
	static public var Application_Xproc_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xproc", suffix : "xml", parameters : null, original : "application/xproc+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["xpl"] } : MediaTypeStruct));
	static public var Application_Xslt_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xslt", suffix : "xml", parameters : null, original : "application/xslt+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xslt"] } : MediaTypeStruct));
	static public var Application_Xspf_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xspf", suffix : "xml", parameters : null, original : "application/xspf+xml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["xspf"] } : MediaTypeStruct));
	static public var Application_Xv_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "xv", suffix : "xml", parameters : null, original : "application/xv+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mxml", "xhvml", "xvml", "xvm"] } : MediaTypeStruct));
	static public var Application_Yang : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "yang", suffix : null, parameters : null, original : "application/yang", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["yang"] } : MediaTypeStruct));
	static public var Application_Yang_Data_Json : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "application", tree : null, subtype : "yang-data", suffix : "json", parameters : null, original : "application/yang-data+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Application_Yang_Data_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "yang-data", suffix : "xml", parameters : null, original : "application/yang-data+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Application_Yin_Xml : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "application", tree : null, subtype : "yin", suffix : "xml", parameters : null, original : "application/yin+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["yin"] } : MediaTypeStruct));
	static public var Application_Zip : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "zip", suffix : null, parameters : null, original : "application/zip", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["zip"] } : MediaTypeStruct));
	static public var Application_Zlib : MediaTypeConst = @:mime (({ isApplication : true, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "application", tree : null, subtype : "zlib", suffix : null, parameters : null, original : "application/zlib", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_1d_Interleaved_Parityfec : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "1d-interleaved-parityfec", subtype : null, suffix : null, parameters : null, original : "audio/1d-interleaved-parityfec", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_32kadpcm : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "32kadpcm", subtype : null, suffix : null, parameters : null, original : "audio/32kadpcm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_3gpp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "3gpp", subtype : null, suffix : null, parameters : null, original : "audio/3gpp", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["3gpp"] } : MediaTypeStruct));
	static public var Audio_3gpp2 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "3gpp2", subtype : null, suffix : null, parameters : null, original : "audio/3gpp2", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Ac3 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "ac3", subtype : null, suffix : null, parameters : null, original : "audio/ac3", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Adpcm : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "adpcm", suffix : null, parameters : null, original : "audio/adpcm", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["adp"] } : MediaTypeStruct));
	static public var Audio_Amr : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "amr", suffix : null, parameters : null, original : "audio/amr", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Amr_Wb : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "amr-wb", suffix : null, parameters : null, original : "audio/amr-wb", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Aptx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "aptx", suffix : null, parameters : null, original : "audio/aptx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Asc : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "asc", suffix : null, parameters : null, original : "audio/asc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Atrac3 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "atrac3", subtype : null, suffix : null, parameters : null, original : "audio/atrac3", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Atrac_Advanced_Lossless : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "atrac-advanced-lossless", suffix : null, parameters : null, original : "audio/atrac-advanced-lossless", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Atrac_X : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "atrac-x", suffix : null, parameters : null, original : "audio/atrac-x", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Basic : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "basic", suffix : null, parameters : null, original : "audio/basic", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["au", "snd"] } : MediaTypeStruct));
	static public var Audio_Bv16 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "bv16", subtype : null, suffix : null, parameters : null, original : "audio/bv16", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Bv32 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "bv32", subtype : null, suffix : null, parameters : null, original : "audio/bv32", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Clearmode : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "clearmode", suffix : null, parameters : null, original : "audio/clearmode", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Cn : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "cn", suffix : null, parameters : null, original : "audio/cn", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Dat12 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "dat12", subtype : null, suffix : null, parameters : null, original : "audio/dat12", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Dls : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "dls", suffix : null, parameters : null, original : "audio/dls", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Dsr_Es201108 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "dsr-es201108", subtype : null, suffix : null, parameters : null, original : "audio/dsr-es201108", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Dsr_Es202050 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "dsr-es202050", subtype : null, suffix : null, parameters : null, original : "audio/dsr-es202050", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Dsr_Es202211 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "dsr-es202211", subtype : null, suffix : null, parameters : null, original : "audio/dsr-es202211", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Dsr_Es202212 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "dsr-es202212", subtype : null, suffix : null, parameters : null, original : "audio/dsr-es202212", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Dv : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "dv", suffix : null, parameters : null, original : "audio/dv", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Dvi4 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "dvi4", subtype : null, suffix : null, parameters : null, original : "audio/dvi4", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Eac3 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "eac3", subtype : null, suffix : null, parameters : null, original : "audio/eac3", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Encaprtp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "encaprtp", suffix : null, parameters : null, original : "audio/encaprtp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Evrc : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "evrc", suffix : null, parameters : null, original : "audio/evrc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Evrc0 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "evrc0", subtype : null, suffix : null, parameters : null, original : "audio/evrc0", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Evrc1 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "evrc1", subtype : null, suffix : null, parameters : null, original : "audio/evrc1", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Evrc_Qcp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "evrc-qcp", suffix : null, parameters : null, original : "audio/evrc-qcp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Evrcb : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "evrcb", suffix : null, parameters : null, original : "audio/evrcb", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Evrcb0 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "evrcb0", subtype : null, suffix : null, parameters : null, original : "audio/evrcb0", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Evrcb1 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "evrcb1", subtype : null, suffix : null, parameters : null, original : "audio/evrcb1", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Evrcnw : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "evrcnw", suffix : null, parameters : null, original : "audio/evrcnw", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Evrcnw0 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "evrcnw0", subtype : null, suffix : null, parameters : null, original : "audio/evrcnw0", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Evrcnw1 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "evrcnw1", subtype : null, suffix : null, parameters : null, original : "audio/evrcnw1", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Evrcwb : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "evrcwb", suffix : null, parameters : null, original : "audio/evrcwb", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Evrcwb0 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "evrcwb0", subtype : null, suffix : null, parameters : null, original : "audio/evrcwb0", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Evrcwb1 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "evrcwb1", subtype : null, suffix : null, parameters : null, original : "audio/evrcwb1", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Evs : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "evs", suffix : null, parameters : null, original : "audio/evs", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Fwdred : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "fwdred", suffix : null, parameters : null, original : "audio/fwdred", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_G711_0 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "g711-0", subtype : null, suffix : null, parameters : null, original : "audio/g711-0", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_G719 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "g719", subtype : null, suffix : null, parameters : null, original : "audio/g719", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_G722 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "g722", subtype : null, suffix : null, parameters : null, original : "audio/g722", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_G7221 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "g7221", subtype : null, suffix : null, parameters : null, original : "audio/g7221", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_G723 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "g723", subtype : null, suffix : null, parameters : null, original : "audio/g723", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_G726_16 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "g726-16", subtype : null, suffix : null, parameters : null, original : "audio/g726-16", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_G726_24 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "g726-24", subtype : null, suffix : null, parameters : null, original : "audio/g726-24", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_G726_32 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "g726-32", subtype : null, suffix : null, parameters : null, original : "audio/g726-32", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_G726_40 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "g726-40", subtype : null, suffix : null, parameters : null, original : "audio/g726-40", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_G728 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "g728", subtype : null, suffix : null, parameters : null, original : "audio/g728", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_G729 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "g729", subtype : null, suffix : null, parameters : null, original : "audio/g729", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_G7291 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "g7291", subtype : null, suffix : null, parameters : null, original : "audio/g7291", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_G729d : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "g729d", subtype : null, suffix : null, parameters : null, original : "audio/g729d", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_G729e : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "g729e", subtype : null, suffix : null, parameters : null, original : "audio/g729e", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Gsm : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "gsm", suffix : null, parameters : null, original : "audio/gsm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Gsm_Efr : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "gsm-efr", suffix : null, parameters : null, original : "audio/gsm-efr", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Gsm_Hr_08 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "gsm-hr-08", subtype : null, suffix : null, parameters : null, original : "audio/gsm-hr-08", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Ilbc : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "ilbc", suffix : null, parameters : null, original : "audio/ilbc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Ip_Mr : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "ip-mr", suffix : null, parameters : null, original : "audio/ip-mr", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Isac : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "isac", suffix : null, parameters : null, original : "audio/isac", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_L16 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "l16", subtype : null, suffix : null, parameters : null, original : "audio/l16", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_L20 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "l20", subtype : null, suffix : null, parameters : null, original : "audio/l20", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_L24 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "l24", subtype : null, suffix : null, parameters : null, original : "audio/l24", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : null } : MediaTypeStruct));
	static public var Audio_L8 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "l8", subtype : null, suffix : null, parameters : null, original : "audio/l8", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Lpc : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "lpc", suffix : null, parameters : null, original : "audio/lpc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Midi : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "midi", suffix : null, parameters : null, original : "audio/midi", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["mid", "midi", "kar", "rmi"] } : MediaTypeStruct));
	static public var Audio_Mobile_Xmf : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "mobile-xmf", suffix : null, parameters : null, original : "audio/mobile-xmf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Mp3 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "mp3", subtype : null, suffix : null, parameters : null, original : "audio/mp3", charset : null, source : null, compressible : false, extensions : ["mp3"] } : MediaTypeStruct));
	static public var Audio_Mp4 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "mp4", subtype : null, suffix : null, parameters : null, original : "audio/mp4", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["m4a", "mp4a"] } : MediaTypeStruct));
	static public var Audio_Mp4a_Latm : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "mp4a-latm", subtype : null, suffix : null, parameters : null, original : "audio/mp4a-latm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Mpa : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "mpa", suffix : null, parameters : null, original : "audio/mpa", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Mpa_Robust : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "mpa-robust", suffix : null, parameters : null, original : "audio/mpa-robust", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Mpeg : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "mpeg", suffix : null, parameters : null, original : "audio/mpeg", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"] } : MediaTypeStruct));
	static public var Audio_Mpeg4_Generic : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "mpeg4-generic", subtype : null, suffix : null, parameters : null, original : "audio/mpeg4-generic", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Musepack : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "musepack", suffix : null, parameters : null, original : "audio/musepack", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Ogg : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "ogg", suffix : null, parameters : null, original : "audio/ogg", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["oga", "ogg", "spx"] } : MediaTypeStruct));
	static public var Audio_Opus : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "opus", suffix : null, parameters : null, original : "audio/opus", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Parityfec : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "parityfec", suffix : null, parameters : null, original : "audio/parityfec", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Pcma : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "pcma", suffix : null, parameters : null, original : "audio/pcma", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Pcma_Wb : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "pcma-wb", suffix : null, parameters : null, original : "audio/pcma-wb", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Pcmu : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "pcmu", suffix : null, parameters : null, original : "audio/pcmu", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Pcmu_Wb : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "pcmu-wb", suffix : null, parameters : null, original : "audio/pcmu-wb", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Prs_Sid : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : true, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "prs.sid", subtype : null, suffix : null, parameters : null, original : "audio/prs.sid", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Qcelp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "qcelp", suffix : null, parameters : null, original : "audio/qcelp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Raptorfec : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "raptorfec", suffix : null, parameters : null, original : "audio/raptorfec", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Red : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "red", suffix : null, parameters : null, original : "audio/red", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Rtp_Enc_Aescm128 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "rtp-enc-aescm128", subtype : null, suffix : null, parameters : null, original : "audio/rtp-enc-aescm128", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Rtp_Midi : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "rtp-midi", suffix : null, parameters : null, original : "audio/rtp-midi", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Rtploopback : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "rtploopback", suffix : null, parameters : null, original : "audio/rtploopback", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Rtx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "rtx", suffix : null, parameters : null, original : "audio/rtx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_S3m : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "s3m", subtype : null, suffix : null, parameters : null, original : "audio/s3m", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["s3m"] } : MediaTypeStruct));
	static public var Audio_Silk : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "silk", suffix : null, parameters : null, original : "audio/silk", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sil"] } : MediaTypeStruct));
	static public var Audio_Smv : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "smv", suffix : null, parameters : null, original : "audio/smv", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Smv0 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "smv0", subtype : null, suffix : null, parameters : null, original : "audio/smv0", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Smv_Qcp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "smv-qcp", suffix : null, parameters : null, original : "audio/smv-qcp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Sp_Midi : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "sp-midi", suffix : null, parameters : null, original : "audio/sp-midi", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Speex : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "speex", suffix : null, parameters : null, original : "audio/speex", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_T140c : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "t140c", subtype : null, suffix : null, parameters : null, original : "audio/t140c", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_T38 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "t38", subtype : null, suffix : null, parameters : null, original : "audio/t38", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Telephone_Event : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "telephone-event", suffix : null, parameters : null, original : "audio/telephone-event", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Tone : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "tone", suffix : null, parameters : null, original : "audio/tone", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Uemclip : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "uemclip", suffix : null, parameters : null, original : "audio/uemclip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Ulpfec : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "ulpfec", suffix : null, parameters : null, original : "audio/ulpfec", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vdvi : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "vdvi", suffix : null, parameters : null, original : "audio/vdvi", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vmr_Wb : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "vmr-wb", suffix : null, parameters : null, original : "audio/vmr-wb", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_3gpp_Iufp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.3gpp.iufp", subtype : null, suffix : null, parameters : null, original : "audio/vnd.3gpp.iufp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_4sb : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.4sb", subtype : null, suffix : null, parameters : null, original : "audio/vnd.4sb", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Audiokoz : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.audiokoz", subtype : null, suffix : null, parameters : null, original : "audio/vnd.audiokoz", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Celp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.celp", subtype : null, suffix : null, parameters : null, original : "audio/vnd.celp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Cisco_Nse : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.cisco.nse", subtype : null, suffix : null, parameters : null, original : "audio/vnd.cisco.nse", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Cmles_Radio_Events : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.cmles.radio-events", subtype : null, suffix : null, parameters : null, original : "audio/vnd.cmles.radio-events", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Cns_Anp1 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.cns.anp1", subtype : null, suffix : null, parameters : null, original : "audio/vnd.cns.anp1", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Cns_Inf1 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.cns.inf1", subtype : null, suffix : null, parameters : null, original : "audio/vnd.cns.inf1", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Dece_Audio : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.dece.audio", subtype : null, suffix : null, parameters : null, original : "audio/vnd.dece.audio", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["uva", "uvva"] } : MediaTypeStruct));
	static public var Audio_Vnd_Digital_Winds : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.digital-winds", subtype : null, suffix : null, parameters : null, original : "audio/vnd.digital-winds", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["eol"] } : MediaTypeStruct));
	static public var Audio_Vnd_Dlna_Adts : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.dlna.adts", subtype : null, suffix : null, parameters : null, original : "audio/vnd.dlna.adts", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Dolby_Heaac_1 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.dolby.heaac.1", subtype : null, suffix : null, parameters : null, original : "audio/vnd.dolby.heaac.1", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Dolby_Heaac_2 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.dolby.heaac.2", subtype : null, suffix : null, parameters : null, original : "audio/vnd.dolby.heaac.2", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Dolby_Mlp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.dolby.mlp", subtype : null, suffix : null, parameters : null, original : "audio/vnd.dolby.mlp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Dolby_Mps : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.dolby.mps", subtype : null, suffix : null, parameters : null, original : "audio/vnd.dolby.mps", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Dolby_Pl2 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.dolby.pl2", subtype : null, suffix : null, parameters : null, original : "audio/vnd.dolby.pl2", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Dolby_Pl2x : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.dolby.pl2x", subtype : null, suffix : null, parameters : null, original : "audio/vnd.dolby.pl2x", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Dolby_Pl2z : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.dolby.pl2z", subtype : null, suffix : null, parameters : null, original : "audio/vnd.dolby.pl2z", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Dolby_Pulse_1 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.dolby.pulse.1", subtype : null, suffix : null, parameters : null, original : "audio/vnd.dolby.pulse.1", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Dra : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.dra", subtype : null, suffix : null, parameters : null, original : "audio/vnd.dra", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dra"] } : MediaTypeStruct));
	static public var Audio_Vnd_Dts : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.dts", subtype : null, suffix : null, parameters : null, original : "audio/vnd.dts", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dts"] } : MediaTypeStruct));
	static public var Audio_Vnd_Dts_Hd : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.dts.hd", subtype : null, suffix : null, parameters : null, original : "audio/vnd.dts.hd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dtshd"] } : MediaTypeStruct));
	static public var Audio_Vnd_Dvb_File : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.dvb.file", subtype : null, suffix : null, parameters : null, original : "audio/vnd.dvb.file", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Everad_Plj : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.everad.plj", subtype : null, suffix : null, parameters : null, original : "audio/vnd.everad.plj", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Hns_Audio : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.hns.audio", subtype : null, suffix : null, parameters : null, original : "audio/vnd.hns.audio", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Lucent_Voice : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.lucent.voice", subtype : null, suffix : null, parameters : null, original : "audio/vnd.lucent.voice", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["lvp"] } : MediaTypeStruct));
	static public var Audio_Vnd_Ms_Playready_Media_Pya : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.ms-playready.media.pya", subtype : null, suffix : null, parameters : null, original : "audio/vnd.ms-playready.media.pya", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["pya"] } : MediaTypeStruct));
	static public var Audio_Vnd_Nokia_Mobile_Xmf : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.nokia.mobile-xmf", subtype : null, suffix : null, parameters : null, original : "audio/vnd.nokia.mobile-xmf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Nortel_Vbk : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.nortel.vbk", subtype : null, suffix : null, parameters : null, original : "audio/vnd.nortel.vbk", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Nuera_Ecelp4800 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.nuera.ecelp4800", subtype : null, suffix : null, parameters : null, original : "audio/vnd.nuera.ecelp4800", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ecelp4800"] } : MediaTypeStruct));
	static public var Audio_Vnd_Nuera_Ecelp7470 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.nuera.ecelp7470", subtype : null, suffix : null, parameters : null, original : "audio/vnd.nuera.ecelp7470", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ecelp7470"] } : MediaTypeStruct));
	static public var Audio_Vnd_Nuera_Ecelp9600 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.nuera.ecelp9600", subtype : null, suffix : null, parameters : null, original : "audio/vnd.nuera.ecelp9600", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ecelp9600"] } : MediaTypeStruct));
	static public var Audio_Vnd_Octel_Sbc : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.octel.sbc", subtype : null, suffix : null, parameters : null, original : "audio/vnd.octel.sbc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Qcelp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.qcelp", subtype : null, suffix : null, parameters : null, original : "audio/vnd.qcelp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Rhetorex_32kadpcm : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.rhetorex.32kadpcm", subtype : null, suffix : null, parameters : null, original : "audio/vnd.rhetorex.32kadpcm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Rip : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.rip", subtype : null, suffix : null, parameters : null, original : "audio/vnd.rip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rip"] } : MediaTypeStruct));
	static public var Audio_Vnd_Rn_Realaudio : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.rn-realaudio", subtype : null, suffix : null, parameters : null, original : "audio/vnd.rn-realaudio", charset : null, source : null, compressible : false, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Sealedmedia_Softseal_Mpeg : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.sealedmedia.softseal.mpeg", subtype : null, suffix : null, parameters : null, original : "audio/vnd.sealedmedia.softseal.mpeg", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Vmx_Cvsd : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.vmx.cvsd", subtype : null, suffix : null, parameters : null, original : "audio/vnd.vmx.cvsd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Vnd_Wave : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "vnd.wave", subtype : null, suffix : null, parameters : null, original : "audio/vnd.wave", charset : null, source : null, compressible : false, extensions : null } : MediaTypeStruct));
	static public var Audio_Vorbis : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "vorbis", suffix : null, parameters : null, original : "audio/vorbis", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : null } : MediaTypeStruct));
	static public var Audio_Vorbis_Config : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "vorbis-config", suffix : null, parameters : null, original : "audio/vorbis-config", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_Wav : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "wav", suffix : null, parameters : null, original : "audio/wav", charset : null, source : null, compressible : false, extensions : ["wav"] } : MediaTypeStruct));
	static public var Audio_Wave : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "wave", suffix : null, parameters : null, original : "audio/wave", charset : null, source : null, compressible : false, extensions : ["wav"] } : MediaTypeStruct));
	static public var Audio_Webm : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "webm", suffix : null, parameters : null, original : "audio/webm", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["weba"] } : MediaTypeStruct));
	static public var Audio_X_Aac : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "x-aac", suffix : null, parameters : null, original : "audio/x-aac", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["aac"] } : MediaTypeStruct));
	static public var Audio_X_Aiff : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "x-aiff", suffix : null, parameters : null, original : "audio/x-aiff", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["aif", "aiff", "aifc"] } : MediaTypeStruct));
	static public var Audio_X_Caf : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "x-caf", suffix : null, parameters : null, original : "audio/x-caf", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["caf"] } : MediaTypeStruct));
	static public var Audio_X_Flac : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "x-flac", suffix : null, parameters : null, original : "audio/x-flac", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["flac"] } : MediaTypeStruct));
	static public var Audio_X_M4a : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : "x-m4a", subtype : null, suffix : null, parameters : null, original : "audio/x-m4a", charset : null, source : (("nginx" : MediaTypeSource)), compressible : null, extensions : ["m4a"] } : MediaTypeStruct));
	static public var Audio_X_Matroska : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "x-matroska", suffix : null, parameters : null, original : "audio/x-matroska", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["mka"] } : MediaTypeStruct));
	static public var Audio_X_Mpegurl : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "x-mpegurl", suffix : null, parameters : null, original : "audio/x-mpegurl", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["m3u"] } : MediaTypeStruct));
	static public var Audio_X_Ms_Wax : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "x-ms-wax", suffix : null, parameters : null, original : "audio/x-ms-wax", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["wax"] } : MediaTypeStruct));
	static public var Audio_X_Ms_Wma : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "x-ms-wma", suffix : null, parameters : null, original : "audio/x-ms-wma", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["wma"] } : MediaTypeStruct));
	static public var Audio_X_Pn_Realaudio : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "x-pn-realaudio", suffix : null, parameters : null, original : "audio/x-pn-realaudio", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["ram", "ra"] } : MediaTypeStruct));
	static public var Audio_X_Pn_Realaudio_Plugin : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "x-pn-realaudio-plugin", suffix : null, parameters : null, original : "audio/x-pn-realaudio-plugin", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["rmp"] } : MediaTypeStruct));
	static public var Audio_X_Realaudio : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "x-realaudio", suffix : null, parameters : null, original : "audio/x-realaudio", charset : null, source : (("nginx" : MediaTypeSource)), compressible : null, extensions : ["ra"] } : MediaTypeStruct));
	static public var Audio_X_Tta : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "x-tta", suffix : null, parameters : null, original : "audio/x-tta", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Audio_X_Wav : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "x-wav", suffix : null, parameters : null, original : "audio/x-wav", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["wav"] } : MediaTypeStruct));
	static public var Audio_Xm : MediaTypeConst = @:mime (({ isApplication : false, isAudio : true, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "audio", tree : null, subtype : "xm", suffix : null, parameters : null, original : "audio/xm", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["xm"] } : MediaTypeStruct));
	static public var Chemical_X_Cdx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "chemical", tree : null, subtype : "x-cdx", suffix : null, parameters : null, original : "chemical/x-cdx", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["cdx"] } : MediaTypeStruct));
	static public var Chemical_X_Cif : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "chemical", tree : null, subtype : "x-cif", suffix : null, parameters : null, original : "chemical/x-cif", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["cif"] } : MediaTypeStruct));
	static public var Chemical_X_Cmdf : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "chemical", tree : null, subtype : "x-cmdf", suffix : null, parameters : null, original : "chemical/x-cmdf", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["cmdf"] } : MediaTypeStruct));
	static public var Chemical_X_Cml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "chemical", tree : null, subtype : "x-cml", suffix : null, parameters : null, original : "chemical/x-cml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["cml"] } : MediaTypeStruct));
	static public var Chemical_X_Csml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "chemical", tree : null, subtype : "x-csml", suffix : null, parameters : null, original : "chemical/x-csml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["csml"] } : MediaTypeStruct));
	static public var Chemical_X_Pdb : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "chemical", tree : null, subtype : "x-pdb", suffix : null, parameters : null, original : "chemical/x-pdb", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Chemical_X_Xyz : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "chemical", tree : null, subtype : "x-xyz", suffix : null, parameters : null, original : "chemical/x-xyz", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["xyz"] } : MediaTypeStruct));
	static public var Font_Opentype : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "font", tree : null, subtype : "opentype", suffix : null, parameters : null, original : "font/opentype", charset : null, source : null, compressible : true, extensions : ["otf"] } : MediaTypeStruct));
	static public var Image_Bmp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "bmp", suffix : null, parameters : null, original : "image/bmp", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["bmp"] } : MediaTypeStruct));
	static public var Image_Cgm : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "cgm", suffix : null, parameters : null, original : "image/cgm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["cgm"] } : MediaTypeStruct));
	static public var Image_Dicom_Rle : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "dicom-rle", suffix : null, parameters : null, original : "image/dicom-rle", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Emf : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "emf", suffix : null, parameters : null, original : "image/emf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Fits : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "fits", suffix : null, parameters : null, original : "image/fits", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_G3fax : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "g3fax", subtype : null, suffix : null, parameters : null, original : "image/g3fax", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["g3"] } : MediaTypeStruct));
	static public var Image_Gif : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "gif", suffix : null, parameters : null, original : "image/gif", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["gif"] } : MediaTypeStruct));
	static public var Image_Ief : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "ief", suffix : null, parameters : null, original : "image/ief", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ief"] } : MediaTypeStruct));
	static public var Image_Jls : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "jls", suffix : null, parameters : null, original : "image/jls", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Jp2 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "jp2", subtype : null, suffix : null, parameters : null, original : "image/jp2", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Jpeg : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "jpeg", suffix : null, parameters : null, original : "image/jpeg", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["jpeg", "jpg", "jpe"] } : MediaTypeStruct));
	static public var Image_Jpm : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "jpm", suffix : null, parameters : null, original : "image/jpm", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Jpx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "jpx", suffix : null, parameters : null, original : "image/jpx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Ktx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "ktx", suffix : null, parameters : null, original : "image/ktx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ktx"] } : MediaTypeStruct));
	static public var Image_Naplps : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "naplps", suffix : null, parameters : null, original : "image/naplps", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Pjpeg : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "pjpeg", suffix : null, parameters : null, original : "image/pjpeg", charset : null, source : null, compressible : false, extensions : null } : MediaTypeStruct));
	static public var Image_Png : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "png", suffix : null, parameters : null, original : "image/png", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["png"] } : MediaTypeStruct));
	static public var Image_Prs_Btif : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : true, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "prs.btif", subtype : null, suffix : null, parameters : null, original : "image/prs.btif", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["btif"] } : MediaTypeStruct));
	static public var Image_Prs_Pti : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : true, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "prs.pti", subtype : null, suffix : null, parameters : null, original : "image/prs.pti", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Pwg_Raster : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "pwg-raster", suffix : null, parameters : null, original : "image/pwg-raster", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Sgi : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "sgi", suffix : null, parameters : null, original : "image/sgi", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sgi"] } : MediaTypeStruct));
	static public var Image_Svg_Xml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "image", tree : null, subtype : "svg", suffix : "xml", parameters : null, original : "image/svg+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["svg", "svgz"] } : MediaTypeStruct));
	static public var Image_T38 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "t38", subtype : null, suffix : null, parameters : null, original : "image/t38", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Tiff : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "tiff", suffix : null, parameters : null, original : "image/tiff", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["tiff", "tif"] } : MediaTypeStruct));
	static public var Image_Tiff_Fx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "tiff-fx", suffix : null, parameters : null, original : "image/tiff-fx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Vnd_Adobe_Photoshop : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.adobe.photoshop", subtype : null, suffix : null, parameters : null, original : "image/vnd.adobe.photoshop", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["psd"] } : MediaTypeStruct));
	static public var Image_Vnd_Airzip_Accelerator_Azv : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.airzip.accelerator.azv", subtype : null, suffix : null, parameters : null, original : "image/vnd.airzip.accelerator.azv", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Vnd_Cns_Inf2 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.cns.inf2", subtype : null, suffix : null, parameters : null, original : "image/vnd.cns.inf2", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Vnd_Dece_Graphic : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.dece.graphic", subtype : null, suffix : null, parameters : null, original : "image/vnd.dece.graphic", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["uvi", "uvvi", "uvg", "uvvg"] } : MediaTypeStruct));
	static public var Image_Vnd_Djvu : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.djvu", subtype : null, suffix : null, parameters : null, original : "image/vnd.djvu", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["djvu", "djv"] } : MediaTypeStruct));
	static public var Image_Vnd_Dvb_Subtitle : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.dvb.subtitle", subtype : null, suffix : null, parameters : null, original : "image/vnd.dvb.subtitle", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sub"] } : MediaTypeStruct));
	static public var Image_Vnd_Dwg : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.dwg", subtype : null, suffix : null, parameters : null, original : "image/vnd.dwg", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dwg"] } : MediaTypeStruct));
	static public var Image_Vnd_Dxf : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.dxf", subtype : null, suffix : null, parameters : null, original : "image/vnd.dxf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dxf"] } : MediaTypeStruct));
	static public var Image_Vnd_Fastbidsheet : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.fastbidsheet", subtype : null, suffix : null, parameters : null, original : "image/vnd.fastbidsheet", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["fbs"] } : MediaTypeStruct));
	static public var Image_Vnd_Fpx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.fpx", subtype : null, suffix : null, parameters : null, original : "image/vnd.fpx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["fpx"] } : MediaTypeStruct));
	static public var Image_Vnd_Fst : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.fst", subtype : null, suffix : null, parameters : null, original : "image/vnd.fst", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["fst"] } : MediaTypeStruct));
	static public var Image_Vnd_Fujixerox_Edmics_Mmr : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.fujixerox.edmics-mmr", subtype : null, suffix : null, parameters : null, original : "image/vnd.fujixerox.edmics-mmr", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mmr"] } : MediaTypeStruct));
	static public var Image_Vnd_Fujixerox_Edmics_Rlc : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.fujixerox.edmics-rlc", subtype : null, suffix : null, parameters : null, original : "image/vnd.fujixerox.edmics-rlc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["rlc"] } : MediaTypeStruct));
	static public var Image_Vnd_Globalgraphics_Pgb : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.globalgraphics.pgb", subtype : null, suffix : null, parameters : null, original : "image/vnd.globalgraphics.pgb", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Vnd_Microsoft_Icon : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.microsoft.icon", subtype : null, suffix : null, parameters : null, original : "image/vnd.microsoft.icon", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Vnd_Mix : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.mix", subtype : null, suffix : null, parameters : null, original : "image/vnd.mix", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Vnd_Mozilla_Apng : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.mozilla.apng", subtype : null, suffix : null, parameters : null, original : "image/vnd.mozilla.apng", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Vnd_Ms_Modi : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.ms-modi", subtype : null, suffix : null, parameters : null, original : "image/vnd.ms-modi", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mdi"] } : MediaTypeStruct));
	static public var Image_Vnd_Ms_Photo : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.ms-photo", subtype : null, suffix : null, parameters : null, original : "image/vnd.ms-photo", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["wdp"] } : MediaTypeStruct));
	static public var Image_Vnd_Net_Fpx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.net-fpx", subtype : null, suffix : null, parameters : null, original : "image/vnd.net-fpx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["npx"] } : MediaTypeStruct));
	static public var Image_Vnd_Radiance : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.radiance", subtype : null, suffix : null, parameters : null, original : "image/vnd.radiance", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Vnd_Sealed_Png : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.sealed.png", subtype : null, suffix : null, parameters : null, original : "image/vnd.sealed.png", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Vnd_Sealedmedia_Softseal_Gif : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.sealedmedia.softseal.gif", subtype : null, suffix : null, parameters : null, original : "image/vnd.sealedmedia.softseal.gif", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Vnd_Sealedmedia_Softseal_Jpg : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.sealedmedia.softseal.jpg", subtype : null, suffix : null, parameters : null, original : "image/vnd.sealedmedia.softseal.jpg", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Vnd_Svf : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.svf", subtype : null, suffix : null, parameters : null, original : "image/vnd.svf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Vnd_Tencent_Tap : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.tencent.tap", subtype : null, suffix : null, parameters : null, original : "image/vnd.tencent.tap", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Vnd_Valve_Source_Texture : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.valve.source.texture", subtype : null, suffix : null, parameters : null, original : "image/vnd.valve.source.texture", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Vnd_Wap_Wbmp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.wap.wbmp", subtype : null, suffix : null, parameters : null, original : "image/vnd.wap.wbmp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wbmp"] } : MediaTypeStruct));
	static public var Image_Vnd_Xiff : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.xiff", subtype : null, suffix : null, parameters : null, original : "image/vnd.xiff", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["xif"] } : MediaTypeStruct));
	static public var Image_Vnd_Zbrush_Pcx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "vnd.zbrush.pcx", subtype : null, suffix : null, parameters : null, original : "image/vnd.zbrush.pcx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_Webp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "webp", suffix : null, parameters : null, original : "image/webp", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["webp"] } : MediaTypeStruct));
	static public var Image_Wmf : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "wmf", suffix : null, parameters : null, original : "image/wmf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Image_X_3ds : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : "x-3ds", subtype : null, suffix : null, parameters : null, original : "image/x-3ds", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["3ds"] } : MediaTypeStruct));
	static public var Image_X_Cmu_Raster : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-cmu-raster", suffix : null, parameters : null, original : "image/x-cmu-raster", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["ras"] } : MediaTypeStruct));
	static public var Image_X_Cmx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-cmx", suffix : null, parameters : null, original : "image/x-cmx", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["cmx"] } : MediaTypeStruct));
	static public var Image_X_Freehand : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-freehand", suffix : null, parameters : null, original : "image/x-freehand", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["fh", "fhc", "fh4", "fh5", "fh7"] } : MediaTypeStruct));
	static public var Image_X_Icon : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-icon", suffix : null, parameters : null, original : "image/x-icon", charset : null, source : (("apache" : MediaTypeSource)), compressible : true, extensions : ["ico"] } : MediaTypeStruct));
	static public var Image_X_Jng : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-jng", suffix : null, parameters : null, original : "image/x-jng", charset : null, source : (("nginx" : MediaTypeSource)), compressible : null, extensions : ["jng"] } : MediaTypeStruct));
	static public var Image_X_Mrsid_Image : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-mrsid-image", suffix : null, parameters : null, original : "image/x-mrsid-image", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sid"] } : MediaTypeStruct));
	static public var Image_X_Ms_Bmp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-ms-bmp", suffix : null, parameters : null, original : "image/x-ms-bmp", charset : null, source : (("nginx" : MediaTypeSource)), compressible : true, extensions : ["bmp"] } : MediaTypeStruct));
	static public var Image_X_Pcx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-pcx", suffix : null, parameters : null, original : "image/x-pcx", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["pcx"] } : MediaTypeStruct));
	static public var Image_X_Pict : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-pict", suffix : null, parameters : null, original : "image/x-pict", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["pic", "pct"] } : MediaTypeStruct));
	static public var Image_X_Portable_Anymap : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-portable-anymap", suffix : null, parameters : null, original : "image/x-portable-anymap", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["pnm"] } : MediaTypeStruct));
	static public var Image_X_Portable_Bitmap : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-portable-bitmap", suffix : null, parameters : null, original : "image/x-portable-bitmap", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["pbm"] } : MediaTypeStruct));
	static public var Image_X_Portable_Graymap : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-portable-graymap", suffix : null, parameters : null, original : "image/x-portable-graymap", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["pgm"] } : MediaTypeStruct));
	static public var Image_X_Portable_Pixmap : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-portable-pixmap", suffix : null, parameters : null, original : "image/x-portable-pixmap", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["ppm"] } : MediaTypeStruct));
	static public var Image_X_Rgb : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-rgb", suffix : null, parameters : null, original : "image/x-rgb", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["rgb"] } : MediaTypeStruct));
	static public var Image_X_Tga : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-tga", suffix : null, parameters : null, original : "image/x-tga", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["tga"] } : MediaTypeStruct));
	static public var Image_X_Xbitmap : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-xbitmap", suffix : null, parameters : null, original : "image/x-xbitmap", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["xbm"] } : MediaTypeStruct));
	static public var Image_X_Xcf : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-xcf", suffix : null, parameters : null, original : "image/x-xcf", charset : null, source : null, compressible : false, extensions : null } : MediaTypeStruct));
	static public var Image_X_Xpixmap : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-xpixmap", suffix : null, parameters : null, original : "image/x-xpixmap", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["xpm"] } : MediaTypeStruct));
	static public var Image_X_Xwindowdump : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : true, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "image", tree : null, subtype : "x-xwindowdump", suffix : null, parameters : null, original : "image/x-xwindowdump", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["xwd"] } : MediaTypeStruct));
	static public var Message_Cpim : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "cpim", suffix : null, parameters : null, original : "message/cpim", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_Delivery_Status : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "delivery-status", suffix : null, parameters : null, original : "message/delivery-status", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_Disposition_Notification : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "disposition-notification", suffix : null, parameters : null, original : "message/disposition-notification", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_External_Body : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "external-body", suffix : null, parameters : null, original : "message/external-body", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_Feedback_Report : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "feedback-report", suffix : null, parameters : null, original : "message/feedback-report", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_Global : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "global", suffix : null, parameters : null, original : "message/global", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_Global_Delivery_Status : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "global-delivery-status", suffix : null, parameters : null, original : "message/global-delivery-status", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_Global_Disposition_Notification : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "global-disposition-notification", suffix : null, parameters : null, original : "message/global-disposition-notification", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_Global_Headers : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "global-headers", suffix : null, parameters : null, original : "message/global-headers", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_Http : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "http", suffix : null, parameters : null, original : "message/http", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : null } : MediaTypeStruct));
	static public var Message_Imdn_Xml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "message", tree : null, subtype : "imdn", suffix : "xml", parameters : null, original : "message/imdn+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Message_News : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "news", suffix : null, parameters : null, original : "message/news", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_Partial : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "partial", suffix : null, parameters : null, original : "message/partial", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : null } : MediaTypeStruct));
	static public var Message_Rfc822 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : "rfc822", subtype : null, suffix : null, parameters : null, original : "message/rfc822", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["eml", "mime"] } : MediaTypeStruct));
	static public var Message_S_Http : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "s-http", suffix : null, parameters : null, original : "message/s-http", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_Sip : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "sip", suffix : null, parameters : null, original : "message/sip", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_Sipfrag : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "sipfrag", suffix : null, parameters : null, original : "message/sipfrag", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_Tracking_Status : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : null, subtype : "tracking-status", suffix : null, parameters : null, original : "message/tracking-status", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_Vnd_Si_Simp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : "vnd.si.simp", subtype : null, suffix : null, parameters : null, original : "message/vnd.si.simp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Message_Vnd_Wfa_Wsc : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : true, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "message", tree : "vnd.wfa.wsc", subtype : null, suffix : null, parameters : null, original : "message/vnd.wfa.wsc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Model_Gltf_Json : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : true, toplevel : "model", tree : null, subtype : "gltf", suffix : "json", parameters : null, original : "model/gltf+json", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Model_Iges : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : null, subtype : "iges", suffix : null, parameters : null, original : "model/iges", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["igs", "iges"] } : MediaTypeStruct));
	static public var Model_Mesh : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : null, subtype : "mesh", suffix : null, parameters : null, original : "model/mesh", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["msh", "mesh", "silo"] } : MediaTypeStruct));
	static public var Model_Vnd_Collada_Xml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "model", tree : "vnd.collada", subtype : null, suffix : "xml", parameters : null, original : "model/vnd.collada+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dae"] } : MediaTypeStruct));
	static public var Model_Vnd_Dwf : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "vnd.dwf", subtype : null, suffix : null, parameters : null, original : "model/vnd.dwf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dwf"] } : MediaTypeStruct));
	static public var Model_Vnd_Flatland_3dml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "vnd.flatland.3dml", subtype : null, suffix : null, parameters : null, original : "model/vnd.flatland.3dml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Model_Vnd_Gdl : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "vnd.gdl", subtype : null, suffix : null, parameters : null, original : "model/vnd.gdl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["gdl"] } : MediaTypeStruct));
	static public var Model_Vnd_Gs_Gdl : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "vnd.gs.gdl", subtype : null, suffix : null, parameters : null, original : "model/vnd.gs.gdl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Model_Vnd_Gtw : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "vnd.gtw", subtype : null, suffix : null, parameters : null, original : "model/vnd.gtw", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["gtw"] } : MediaTypeStruct));
	static public var Model_Vnd_Moml_Xml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "model", tree : "vnd.moml", subtype : null, suffix : "xml", parameters : null, original : "model/vnd.moml+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Model_Vnd_Mts : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "vnd.mts", subtype : null, suffix : null, parameters : null, original : "model/vnd.mts", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["mts"] } : MediaTypeStruct));
	static public var Model_Vnd_Opengex : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "vnd.opengex", subtype : null, suffix : null, parameters : null, original : "model/vnd.opengex", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Model_Vnd_Parasolid_Transmit_Binary : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "vnd.parasolid.transmit.binary", subtype : null, suffix : null, parameters : null, original : "model/vnd.parasolid.transmit.binary", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Model_Vnd_Parasolid_Transmit_Text : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "vnd.parasolid.transmit.text", subtype : null, suffix : null, parameters : null, original : "model/vnd.parasolid.transmit.text", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Model_Vnd_Rosette_Annotated_Data_Model : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "vnd.rosette.annotated-data-model", subtype : null, suffix : null, parameters : null, original : "model/vnd.rosette.annotated-data-model", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Model_Vnd_Valve_Source_Compiled_Map : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "vnd.valve.source.compiled-map", subtype : null, suffix : null, parameters : null, original : "model/vnd.valve.source.compiled-map", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Model_Vnd_Vtu : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "vnd.vtu", subtype : null, suffix : null, parameters : null, original : "model/vnd.vtu", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["vtu"] } : MediaTypeStruct));
	static public var Model_Vrml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : null, subtype : "vrml", suffix : null, parameters : null, original : "model/vrml", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : ["wrl", "vrml"] } : MediaTypeStruct));
	static public var Model_X3d_Binary : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "x3d", subtype : null, suffix : "binary", parameters : null, original : "model/x3d+binary", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["x3db", "x3dbz"] } : MediaTypeStruct));
	static public var Model_X3d_Fastinfoset : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "x3d", subtype : null, suffix : "fastinfoset", parameters : null, original : "model/x3d+fastinfoset", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Model_X3d_Vrml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "model", tree : "x3d", subtype : null, suffix : "vrml", parameters : null, original : "model/x3d+vrml", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["x3dv", "x3dvz"] } : MediaTypeStruct));
	static public var Model_X3d_Xml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : true, isMultipart : false, isText : false, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : true, isJson : false, toplevel : "model", tree : "x3d", subtype : null, suffix : "xml", parameters : null, original : "model/x3d+xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["x3d", "x3dz"] } : MediaTypeStruct));
	static public var Multipart_Alternative : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : true, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "multipart", tree : null, subtype : "alternative", suffix : null, parameters : null, original : "multipart/alternative", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : null } : MediaTypeStruct));
	static public var Multipart_Appledouble : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : true, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "multipart", tree : null, subtype : "appledouble", suffix : null, parameters : null, original : "multipart/appledouble", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Multipart_Byteranges : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : true, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "multipart", tree : null, subtype : "byteranges", suffix : null, parameters : null, original : "multipart/byteranges", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Multipart_Digest : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : true, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "multipart", tree : null, subtype : "digest", suffix : null, parameters : null, original : "multipart/digest", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Multipart_Encrypted : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : true, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "multipart", tree : null, subtype : "encrypted", suffix : null, parameters : null, original : "multipart/encrypted", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : null } : MediaTypeStruct));
	static public var Multipart_Form_Data : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : true, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "multipart", tree : null, subtype : "form-data", suffix : null, parameters : null, original : "multipart/form-data", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : null } : MediaTypeStruct));
	static public var Multipart_Header_Set : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : true, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "multipart", tree : null, subtype : "header-set", suffix : null, parameters : null, original : "multipart/header-set", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Multipart_Mixed : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : true, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "multipart", tree : null, subtype : "mixed", suffix : null, parameters : null, original : "multipart/mixed", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : null } : MediaTypeStruct));
	static public var Multipart_Parallel : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : true, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "multipart", tree : null, subtype : "parallel", suffix : null, parameters : null, original : "multipart/parallel", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Multipart_Related : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : true, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "multipart", tree : null, subtype : "related", suffix : null, parameters : null, original : "multipart/related", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : null } : MediaTypeStruct));
	static public var Multipart_Report : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : true, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "multipart", tree : null, subtype : "report", suffix : null, parameters : null, original : "multipart/report", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Multipart_Signed : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : true, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "multipart", tree : null, subtype : "signed", suffix : null, parameters : null, original : "multipart/signed", charset : null, source : (("iana" : MediaTypeSource)), compressible : false, extensions : null } : MediaTypeStruct));
	static public var Multipart_Voice_Message : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : true, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "multipart", tree : null, subtype : "voice-message", suffix : null, parameters : null, original : "multipart/voice-message", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Multipart_X_Mixed_Replace : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : true, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "multipart", tree : null, subtype : "x-mixed-replace", suffix : null, parameters : null, original : "multipart/x-mixed-replace", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_1d_Interleaved_Parityfec : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "1d-interleaved-parityfec", subtype : null, suffix : null, parameters : null, original : "text/1d-interleaved-parityfec", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Cache_Manifest : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "cache-manifest", suffix : null, parameters : null, original : "text/cache-manifest", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["appcache", "manifest"] } : MediaTypeStruct));
	static public var Text_Calendar : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "calendar", suffix : null, parameters : null, original : "text/calendar", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ics", "ifb"] } : MediaTypeStruct));
	static public var Text_Calender : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "calender", suffix : null, parameters : null, original : "text/calender", charset : null, source : null, compressible : true, extensions : null } : MediaTypeStruct));
	static public var Text_Cmd : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "cmd", suffix : null, parameters : null, original : "text/cmd", charset : null, source : null, compressible : true, extensions : null } : MediaTypeStruct));
	static public var Text_Coffeescript : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "coffeescript", suffix : null, parameters : null, original : "text/coffeescript", charset : null, source : null, compressible : null, extensions : ["coffee", "litcoffee"] } : MediaTypeStruct));
	static public var Text_Css : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "css", suffix : null, parameters : null, original : "text/css", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["css"] } : MediaTypeStruct));
	static public var Text_Csv : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "csv", suffix : null, parameters : null, original : "text/csv", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["csv"] } : MediaTypeStruct));
	static public var Text_Csv_Schema : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "csv-schema", suffix : null, parameters : null, original : "text/csv-schema", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Directory : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "directory", suffix : null, parameters : null, original : "text/directory", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Dns : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "dns", suffix : null, parameters : null, original : "text/dns", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Ecmascript : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "ecmascript", suffix : null, parameters : null, original : "text/ecmascript", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Encaprtp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "encaprtp", suffix : null, parameters : null, original : "text/encaprtp", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Enriched : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "enriched", suffix : null, parameters : null, original : "text/enriched", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Fwdred : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "fwdred", suffix : null, parameters : null, original : "text/fwdred", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Grammar_Ref_List : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "grammar-ref-list", suffix : null, parameters : null, original : "text/grammar-ref-list", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Hjson : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "hjson", suffix : null, parameters : null, original : "text/hjson", charset : null, source : null, compressible : null, extensions : ["hjson"] } : MediaTypeStruct));
	static public var Text_Html : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "html", suffix : null, parameters : null, original : "text/html", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["html", "htm", "shtml"] } : MediaTypeStruct));
	static public var Text_Jade : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "jade", suffix : null, parameters : null, original : "text/jade", charset : null, source : null, compressible : null, extensions : ["jade"] } : MediaTypeStruct));
	static public var Text_Javascript : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "javascript", suffix : null, parameters : null, original : "text/javascript", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : null } : MediaTypeStruct));
	static public var Text_Jcr_Cnd : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "jcr-cnd", suffix : null, parameters : null, original : "text/jcr-cnd", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Jsx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "jsx", suffix : null, parameters : null, original : "text/jsx", charset : null, source : null, compressible : true, extensions : ["jsx"] } : MediaTypeStruct));
	static public var Text_Less : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "less", suffix : null, parameters : null, original : "text/less", charset : null, source : null, compressible : null, extensions : ["less"] } : MediaTypeStruct));
	static public var Text_Markdown : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "markdown", suffix : null, parameters : null, original : "text/markdown", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Mathml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "mathml", suffix : null, parameters : null, original : "text/mathml", charset : null, source : (("nginx" : MediaTypeSource)), compressible : null, extensions : ["mml"] } : MediaTypeStruct));
	static public var Text_Mizar : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "mizar", suffix : null, parameters : null, original : "text/mizar", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_N3 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "n3", subtype : null, suffix : null, parameters : null, original : "text/n3", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["n3"] } : MediaTypeStruct));
	static public var Text_Parameters : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "parameters", suffix : null, parameters : null, original : "text/parameters", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Parityfec : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "parityfec", suffix : null, parameters : null, original : "text/parityfec", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Plain : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "plain", suffix : null, parameters : null, original : "text/plain", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["txt", "text", "conf", "def", "list", "log", "in", "ini"] } : MediaTypeStruct));
	static public var Text_Provenance_Notation : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "provenance-notation", suffix : null, parameters : null, original : "text/provenance-notation", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Prs_Fallenstein_Rst : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : false, isPersonal : true, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "prs.fallenstein.rst", subtype : null, suffix : null, parameters : null, original : "text/prs.fallenstein.rst", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Prs_Lines_Tag : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : false, isPersonal : true, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "prs.lines.tag", subtype : null, suffix : null, parameters : null, original : "text/prs.lines.tag", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["dsc"] } : MediaTypeStruct));
	static public var Text_Prs_Prop_Logic : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : false, isPersonal : true, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "prs.prop.logic", subtype : null, suffix : null, parameters : null, original : "text/prs.prop.logic", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Raptorfec : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "raptorfec", suffix : null, parameters : null, original : "text/raptorfec", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Red : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "red", suffix : null, parameters : null, original : "text/red", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Rfc822_Headers : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "rfc822-headers", subtype : null, suffix : null, parameters : null, original : "text/rfc822-headers", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Richtext : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "richtext", suffix : null, parameters : null, original : "text/richtext", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["rtx"] } : MediaTypeStruct));
	static public var Text_Rtf : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "rtf", suffix : null, parameters : null, original : "text/rtf", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["rtf"] } : MediaTypeStruct));
	static public var Text_Rtp_Enc_Aescm128 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "rtp-enc-aescm128", subtype : null, suffix : null, parameters : null, original : "text/rtp-enc-aescm128", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Rtploopback : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "rtploopback", suffix : null, parameters : null, original : "text/rtploopback", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Rtx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "rtx", suffix : null, parameters : null, original : "text/rtx", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Sgml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "sgml", suffix : null, parameters : null, original : "text/sgml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sgml", "sgm"] } : MediaTypeStruct));
	static public var Text_Slim : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "slim", suffix : null, parameters : null, original : "text/slim", charset : null, source : null, compressible : null, extensions : ["slim", "slm"] } : MediaTypeStruct));
	static public var Text_Stylus : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "stylus", suffix : null, parameters : null, original : "text/stylus", charset : null, source : null, compressible : null, extensions : ["stylus", "styl"] } : MediaTypeStruct));
	static public var Text_T140 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "t140", subtype : null, suffix : null, parameters : null, original : "text/t140", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Tab_Separated_Values : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "tab-separated-values", suffix : null, parameters : null, original : "text/tab-separated-values", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["tsv"] } : MediaTypeStruct));
	static public var Text_Troff : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "troff", suffix : null, parameters : null, original : "text/troff", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["t", "tr", "roff", "man", "me", "ms"] } : MediaTypeStruct));
	static public var Text_Turtle : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "turtle", suffix : null, parameters : null, original : "text/turtle", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["ttl"] } : MediaTypeStruct));
	static public var Text_Ulpfec : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "ulpfec", suffix : null, parameters : null, original : "text/ulpfec", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Uri_List : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "uri-list", suffix : null, parameters : null, original : "text/uri-list", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["uri", "uris", "urls"] } : MediaTypeStruct));
	static public var Text_Vcard : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "vcard", suffix : null, parameters : null, original : "text/vcard", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["vcard"] } : MediaTypeStruct));
	static public var Text_Vnd_A : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.a", subtype : null, suffix : null, parameters : null, original : "text/vnd.a", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Abc : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.abc", subtype : null, suffix : null, parameters : null, original : "text/vnd.abc", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Ascii_Art : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.ascii-art", subtype : null, suffix : null, parameters : null, original : "text/vnd.ascii-art", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Curl : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.curl", subtype : null, suffix : null, parameters : null, original : "text/vnd.curl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["curl"] } : MediaTypeStruct));
	static public var Text_Vnd_Curl_Dcurl : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.curl.dcurl", subtype : null, suffix : null, parameters : null, original : "text/vnd.curl.dcurl", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["dcurl"] } : MediaTypeStruct));
	static public var Text_Vnd_Curl_Mcurl : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.curl.mcurl", subtype : null, suffix : null, parameters : null, original : "text/vnd.curl.mcurl", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["mcurl"] } : MediaTypeStruct));
	static public var Text_Vnd_Curl_Scurl : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.curl.scurl", subtype : null, suffix : null, parameters : null, original : "text/vnd.curl.scurl", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["scurl"] } : MediaTypeStruct));
	static public var Text_Vnd_Debian_Copyright : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.debian.copyright", subtype : null, suffix : null, parameters : null, original : "text/vnd.debian.copyright", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Dmclientscript : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.dmclientscript", subtype : null, suffix : null, parameters : null, original : "text/vnd.dmclientscript", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Dvb_Subtitle : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.dvb.subtitle", subtype : null, suffix : null, parameters : null, original : "text/vnd.dvb.subtitle", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["sub"] } : MediaTypeStruct));
	static public var Text_Vnd_Esmertec_Theme_Descriptor : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.esmertec.theme-descriptor", subtype : null, suffix : null, parameters : null, original : "text/vnd.esmertec.theme-descriptor", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Fly : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.fly", subtype : null, suffix : null, parameters : null, original : "text/vnd.fly", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["fly"] } : MediaTypeStruct));
	static public var Text_Vnd_Fmi_Flexstor : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.fmi.flexstor", subtype : null, suffix : null, parameters : null, original : "text/vnd.fmi.flexstor", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["flx"] } : MediaTypeStruct));
	static public var Text_Vnd_Graphviz : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.graphviz", subtype : null, suffix : null, parameters : null, original : "text/vnd.graphviz", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["gv"] } : MediaTypeStruct));
	static public var Text_Vnd_In3d_3dml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.in3d.3dml", subtype : null, suffix : null, parameters : null, original : "text/vnd.in3d.3dml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["3dml"] } : MediaTypeStruct));
	static public var Text_Vnd_In3d_Spot : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.in3d.spot", subtype : null, suffix : null, parameters : null, original : "text/vnd.in3d.spot", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["spot"] } : MediaTypeStruct));
	static public var Text_Vnd_Iptc_Newsml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.iptc.newsml", subtype : null, suffix : null, parameters : null, original : "text/vnd.iptc.newsml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Iptc_Nitf : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.iptc.nitf", subtype : null, suffix : null, parameters : null, original : "text/vnd.iptc.nitf", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Latex_Z : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.latex-z", subtype : null, suffix : null, parameters : null, original : "text/vnd.latex-z", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Motorola_Reflex : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.motorola.reflex", subtype : null, suffix : null, parameters : null, original : "text/vnd.motorola.reflex", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Ms_Mediapackage : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.ms-mediapackage", subtype : null, suffix : null, parameters : null, original : "text/vnd.ms-mediapackage", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Net2phone_Commcenter_Command : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.net2phone.commcenter.command", subtype : null, suffix : null, parameters : null, original : "text/vnd.net2phone.commcenter.command", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Radisys_Msml_Basic_Layout : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.radisys.msml-basic-layout", subtype : null, suffix : null, parameters : null, original : "text/vnd.radisys.msml-basic-layout", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Si_Uricatalogue : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.si.uricatalogue", subtype : null, suffix : null, parameters : null, original : "text/vnd.si.uricatalogue", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Sun_J2me_App_Descriptor : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.sun.j2me.app-descriptor", subtype : null, suffix : null, parameters : null, original : "text/vnd.sun.j2me.app-descriptor", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["jad"] } : MediaTypeStruct));
	static public var Text_Vnd_Trolltech_Linguist : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.trolltech.linguist", subtype : null, suffix : null, parameters : null, original : "text/vnd.trolltech.linguist", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Wap_Si : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.wap.si", subtype : null, suffix : null, parameters : null, original : "text/vnd.wap.si", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Wap_Sl : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.wap.sl", subtype : null, suffix : null, parameters : null, original : "text/vnd.wap.sl", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Vnd_Wap_Wml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.wap.wml", subtype : null, suffix : null, parameters : null, original : "text/vnd.wap.wml", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wml"] } : MediaTypeStruct));
	static public var Text_Vnd_Wap_Wmlscript : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : "vnd.wap.wmlscript", subtype : null, suffix : null, parameters : null, original : "text/vnd.wap.wmlscript", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : ["wmls"] } : MediaTypeStruct));
	static public var Text_Vtt : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "vtt", suffix : null, parameters : null, original : "text/vtt", charset : "UTF-8", source : null, compressible : true, extensions : ["vtt"] } : MediaTypeStruct));
	static public var Text_X_Asm : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-asm", suffix : null, parameters : null, original : "text/x-asm", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["s", "asm"] } : MediaTypeStruct));
	static public var Text_X_C : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-c", suffix : null, parameters : null, original : "text/x-c", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["c", "cc", "cxx", "cpp", "h", "hh", "dic"] } : MediaTypeStruct));
	static public var Text_X_Component : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-component", suffix : null, parameters : null, original : "text/x-component", charset : null, source : (("nginx" : MediaTypeSource)), compressible : null, extensions : ["htc"] } : MediaTypeStruct));
	static public var Text_X_Fortran : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-fortran", suffix : null, parameters : null, original : "text/x-fortran", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["f", "for", "f77", "f90"] } : MediaTypeStruct));
	static public var Text_X_Gwt_Rpc : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-gwt-rpc", suffix : null, parameters : null, original : "text/x-gwt-rpc", charset : null, source : null, compressible : true, extensions : null } : MediaTypeStruct));
	static public var Text_X_Handlebars_Template : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-handlebars-template", suffix : null, parameters : null, original : "text/x-handlebars-template", charset : null, source : null, compressible : null, extensions : ["hbs"] } : MediaTypeStruct));
	static public var Text_X_Java_Source : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-java-source", suffix : null, parameters : null, original : "text/x-java-source", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["java"] } : MediaTypeStruct));
	static public var Text_X_Jquery_Tmpl : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-jquery-tmpl", suffix : null, parameters : null, original : "text/x-jquery-tmpl", charset : null, source : null, compressible : true, extensions : null } : MediaTypeStruct));
	static public var Text_X_Lua : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-lua", suffix : null, parameters : null, original : "text/x-lua", charset : null, source : null, compressible : null, extensions : ["lua"] } : MediaTypeStruct));
	static public var Text_X_Markdown : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-markdown", suffix : null, parameters : null, original : "text/x-markdown", charset : null, source : null, compressible : true, extensions : ["markdown", "md", "mkd"] } : MediaTypeStruct));
	static public var Text_X_Nfo : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-nfo", suffix : null, parameters : null, original : "text/x-nfo", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["nfo"] } : MediaTypeStruct));
	static public var Text_X_Opml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-opml", suffix : null, parameters : null, original : "text/x-opml", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["opml"] } : MediaTypeStruct));
	static public var Text_X_Pascal : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-pascal", suffix : null, parameters : null, original : "text/x-pascal", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["p", "pas"] } : MediaTypeStruct));
	static public var Text_X_Processing : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-processing", suffix : null, parameters : null, original : "text/x-processing", charset : null, source : null, compressible : true, extensions : ["pde"] } : MediaTypeStruct));
	static public var Text_X_Sass : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-sass", suffix : null, parameters : null, original : "text/x-sass", charset : null, source : null, compressible : null, extensions : ["sass"] } : MediaTypeStruct));
	static public var Text_X_Scss : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-scss", suffix : null, parameters : null, original : "text/x-scss", charset : null, source : null, compressible : null, extensions : ["scss"] } : MediaTypeStruct));
	static public var Text_X_Setext : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-setext", suffix : null, parameters : null, original : "text/x-setext", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["etx"] } : MediaTypeStruct));
	static public var Text_X_Sfv : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-sfv", suffix : null, parameters : null, original : "text/x-sfv", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["sfv"] } : MediaTypeStruct));
	static public var Text_X_Suse_Ymp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-suse-ymp", suffix : null, parameters : null, original : "text/x-suse-ymp", charset : null, source : null, compressible : true, extensions : ["ymp"] } : MediaTypeStruct));
	static public var Text_X_Uuencode : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-uuencode", suffix : null, parameters : null, original : "text/x-uuencode", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["uu"] } : MediaTypeStruct));
	static public var Text_X_Vcalendar : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-vcalendar", suffix : null, parameters : null, original : "text/x-vcalendar", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["vcs"] } : MediaTypeStruct));
	static public var Text_X_Vcard : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "x-vcard", suffix : null, parameters : null, original : "text/x-vcard", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["vcf"] } : MediaTypeStruct));
	static public var Text_Xml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "xml", suffix : null, parameters : null, original : "text/xml", charset : null, source : (("iana" : MediaTypeSource)), compressible : true, extensions : ["xml"] } : MediaTypeStruct));
	static public var Text_Xml_External_Parsed_Entity : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "xml-external-parsed-entity", suffix : null, parameters : null, original : "text/xml-external-parsed-entity", charset : null, source : (("iana" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Text_Yaml : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : true, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "text", tree : null, subtype : "yaml", suffix : null, parameters : null, original : "text/yaml", charset : null, source : null, compressible : null, extensions : ["yaml", "yml"] } : MediaTypeStruct));
	static public var Video_1d_Interleaved_Parityfec : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "1d-interleaved-parityfec", subtype : null, suffix : null, parameters : null, original : "video/1d-interleaved-parityfec", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_3gpp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "3gpp", subtype : null, suffix : null, parameters : null, original : "video/3gpp", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["3gp", "3gpp"] } : MediaTypeStruct));
	static public var Video_3gpp2 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "3gpp2", subtype : null, suffix : null, parameters : null, original : "video/3gpp2", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["3g2"] } : MediaTypeStruct));
	static public var Video_3gpp_Tt : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "3gpp-tt", subtype : null, suffix : null, parameters : null, original : "video/3gpp-tt", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Bmpeg : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "bmpeg", suffix : null, parameters : null, original : "video/bmpeg", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Bt656 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "bt656", subtype : null, suffix : null, parameters : null, original : "video/bt656", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Celb : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "celb", suffix : null, parameters : null, original : "video/celb", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Dv : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "dv", suffix : null, parameters : null, original : "video/dv", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Encaprtp : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "encaprtp", suffix : null, parameters : null, original : "video/encaprtp", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_H261 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "h261", subtype : null, suffix : null, parameters : null, original : "video/h261", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["h261"] } : MediaTypeStruct));
	static public var Video_H263 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "h263", subtype : null, suffix : null, parameters : null, original : "video/h263", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["h263"] } : MediaTypeStruct));
	static public var Video_H263_1998 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "h263-1998", subtype : null, suffix : null, parameters : null, original : "video/h263-1998", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_H263_2000 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "h263-2000", subtype : null, suffix : null, parameters : null, original : "video/h263-2000", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_H264 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "h264", subtype : null, suffix : null, parameters : null, original : "video/h264", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["h264"] } : MediaTypeStruct));
	static public var Video_H264_Rcdo : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "h264-rcdo", subtype : null, suffix : null, parameters : null, original : "video/h264-rcdo", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_H264_Svc : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "h264-svc", subtype : null, suffix : null, parameters : null, original : "video/h264-svc", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_H265 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "h265", subtype : null, suffix : null, parameters : null, original : "video/h265", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Iso_Segment : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "iso.segment", subtype : null, suffix : null, parameters : null, original : "video/iso.segment", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Jpeg : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "jpeg", suffix : null, parameters : null, original : "video/jpeg", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["jpgv"] } : MediaTypeStruct));
	static public var Video_Jpeg2000 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "jpeg2000", subtype : null, suffix : null, parameters : null, original : "video/jpeg2000", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Jpm : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "jpm", suffix : null, parameters : null, original : "video/jpm", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["jpm", "jpgm"] } : MediaTypeStruct));
	static public var Video_Mj2 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "mj2", subtype : null, suffix : null, parameters : null, original : "video/mj2", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["mj2", "mjp2"] } : MediaTypeStruct));
	static public var Video_Mp1s : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "mp1s", subtype : null, suffix : null, parameters : null, original : "video/mp1s", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Mp2p : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "mp2p", subtype : null, suffix : null, parameters : null, original : "video/mp2p", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Mp2t : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "mp2t", subtype : null, suffix : null, parameters : null, original : "video/mp2t", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["ts"] } : MediaTypeStruct));
	static public var Video_Mp4 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "mp4", subtype : null, suffix : null, parameters : null, original : "video/mp4", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["mp4", "mp4v", "mpg4"] } : MediaTypeStruct));
	static public var Video_Mp4v_Es : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "mp4v-es", subtype : null, suffix : null, parameters : null, original : "video/mp4v-es", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Mpeg : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "mpeg", suffix : null, parameters : null, original : "video/mpeg", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["mpeg", "mpg", "mpe", "m1v", "m2v"] } : MediaTypeStruct));
	static public var Video_Mpeg4_Generic : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "mpeg4-generic", subtype : null, suffix : null, parameters : null, original : "video/mpeg4-generic", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Mpv : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "mpv", suffix : null, parameters : null, original : "video/mpv", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Nv : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "nv", suffix : null, parameters : null, original : "video/nv", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Ogg : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "ogg", suffix : null, parameters : null, original : "video/ogg", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["ogv"] } : MediaTypeStruct));
	static public var Video_Parityfec : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "parityfec", suffix : null, parameters : null, original : "video/parityfec", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Pointer : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "pointer", suffix : null, parameters : null, original : "video/pointer", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Quicktime : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "quicktime", suffix : null, parameters : null, original : "video/quicktime", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["qt", "mov"] } : MediaTypeStruct));
	static public var Video_Raptorfec : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "raptorfec", suffix : null, parameters : null, original : "video/raptorfec", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Raw : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "raw", suffix : null, parameters : null, original : "video/raw", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Rtp_Enc_Aescm128 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "rtp-enc-aescm128", subtype : null, suffix : null, parameters : null, original : "video/rtp-enc-aescm128", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Rtploopback : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "rtploopback", suffix : null, parameters : null, original : "video/rtploopback", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Rtx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "rtx", suffix : null, parameters : null, original : "video/rtx", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Smpte292m : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "smpte292m", subtype : null, suffix : null, parameters : null, original : "video/smpte292m", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Ulpfec : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "ulpfec", suffix : null, parameters : null, original : "video/ulpfec", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vc1 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vc1", subtype : null, suffix : null, parameters : null, original : "video/vc1", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Cctv : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.cctv", subtype : null, suffix : null, parameters : null, original : "video/vnd.cctv", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Dece_Hd : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.dece.hd", subtype : null, suffix : null, parameters : null, original : "video/vnd.dece.hd", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["uvh", "uvvh"] } : MediaTypeStruct));
	static public var Video_Vnd_Dece_Mobile : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.dece.mobile", subtype : null, suffix : null, parameters : null, original : "video/vnd.dece.mobile", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["uvm", "uvvm"] } : MediaTypeStruct));
	static public var Video_Vnd_Dece_Mp4 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.dece.mp4", subtype : null, suffix : null, parameters : null, original : "video/vnd.dece.mp4", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Dece_Pd : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.dece.pd", subtype : null, suffix : null, parameters : null, original : "video/vnd.dece.pd", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["uvp", "uvvp"] } : MediaTypeStruct));
	static public var Video_Vnd_Dece_Sd : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.dece.sd", subtype : null, suffix : null, parameters : null, original : "video/vnd.dece.sd", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["uvs", "uvvs"] } : MediaTypeStruct));
	static public var Video_Vnd_Dece_Video : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.dece.video", subtype : null, suffix : null, parameters : null, original : "video/vnd.dece.video", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["uvv", "uvvv"] } : MediaTypeStruct));
	static public var Video_Vnd_Directv_Mpeg : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.directv.mpeg", subtype : null, suffix : null, parameters : null, original : "video/vnd.directv.mpeg", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Directv_Mpeg_Tts : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.directv.mpeg-tts", subtype : null, suffix : null, parameters : null, original : "video/vnd.directv.mpeg-tts", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Dlna_Mpeg_Tts : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.dlna.mpeg-tts", subtype : null, suffix : null, parameters : null, original : "video/vnd.dlna.mpeg-tts", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Dvb_File : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.dvb.file", subtype : null, suffix : null, parameters : null, original : "video/vnd.dvb.file", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["dvb"] } : MediaTypeStruct));
	static public var Video_Vnd_Fvt : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.fvt", subtype : null, suffix : null, parameters : null, original : "video/vnd.fvt", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["fvt"] } : MediaTypeStruct));
	static public var Video_Vnd_Hns_Video : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.hns.video", subtype : null, suffix : null, parameters : null, original : "video/vnd.hns.video", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Iptvforum_1dparityfec_1010 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.iptvforum.1dparityfec-1010", subtype : null, suffix : null, parameters : null, original : "video/vnd.iptvforum.1dparityfec-1010", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Iptvforum_1dparityfec_2005 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.iptvforum.1dparityfec-2005", subtype : null, suffix : null, parameters : null, original : "video/vnd.iptvforum.1dparityfec-2005", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Iptvforum_2dparityfec_1010 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.iptvforum.2dparityfec-1010", subtype : null, suffix : null, parameters : null, original : "video/vnd.iptvforum.2dparityfec-1010", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Iptvforum_2dparityfec_2005 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.iptvforum.2dparityfec-2005", subtype : null, suffix : null, parameters : null, original : "video/vnd.iptvforum.2dparityfec-2005", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Iptvforum_Ttsavc : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.iptvforum.ttsavc", subtype : null, suffix : null, parameters : null, original : "video/vnd.iptvforum.ttsavc", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Iptvforum_Ttsmpeg2 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.iptvforum.ttsmpeg2", subtype : null, suffix : null, parameters : null, original : "video/vnd.iptvforum.ttsmpeg2", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Motorola_Video : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.motorola.video", subtype : null, suffix : null, parameters : null, original : "video/vnd.motorola.video", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Motorola_Videop : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.motorola.videop", subtype : null, suffix : null, parameters : null, original : "video/vnd.motorola.videop", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Mpegurl : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.mpegurl", subtype : null, suffix : null, parameters : null, original : "video/vnd.mpegurl", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["mxu", "m4u"] } : MediaTypeStruct));
	static public var Video_Vnd_Ms_Playready_Media_Pyv : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.ms-playready.media.pyv", subtype : null, suffix : null, parameters : null, original : "video/vnd.ms-playready.media.pyv", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["pyv"] } : MediaTypeStruct));
	static public var Video_Vnd_Nokia_Interleaved_Multimedia : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.nokia.interleaved-multimedia", subtype : null, suffix : null, parameters : null, original : "video/vnd.nokia.interleaved-multimedia", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Nokia_Videovoip : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.nokia.videovoip", subtype : null, suffix : null, parameters : null, original : "video/vnd.nokia.videovoip", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Objectvideo : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.objectvideo", subtype : null, suffix : null, parameters : null, original : "video/vnd.objectvideo", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Radgamettools_Bink : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.radgamettools.bink", subtype : null, suffix : null, parameters : null, original : "video/vnd.radgamettools.bink", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Radgamettools_Smacker : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.radgamettools.smacker", subtype : null, suffix : null, parameters : null, original : "video/vnd.radgamettools.smacker", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Sealed_Mpeg1 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.sealed.mpeg1", subtype : null, suffix : null, parameters : null, original : "video/vnd.sealed.mpeg1", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Sealed_Mpeg4 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.sealed.mpeg4", subtype : null, suffix : null, parameters : null, original : "video/vnd.sealed.mpeg4", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Sealed_Swf : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.sealed.swf", subtype : null, suffix : null, parameters : null, original : "video/vnd.sealed.swf", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Sealedmedia_Softseal_Mov : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.sealedmedia.softseal.mov", subtype : null, suffix : null, parameters : null, original : "video/vnd.sealedmedia.softseal.mov", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Vnd_Uvvu_Mp4 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.uvvu.mp4", subtype : null, suffix : null, parameters : null, original : "video/vnd.uvvu.mp4", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["uvu", "uvvu"] } : MediaTypeStruct));
	static public var Video_Vnd_Vivo : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : true, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vnd.vivo", subtype : null, suffix : null, parameters : null, original : "video/vnd.vivo", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["viv"] } : MediaTypeStruct));
	static public var Video_Vp8 : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "vp8", subtype : null, suffix : null, parameters : null, original : "video/vp8", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : null } : MediaTypeStruct));
	static public var Video_Webm : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "webm", suffix : null, parameters : null, original : "video/webm", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["webm"] } : MediaTypeStruct));
	static public var Video_X_F4v : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "x-f4v", subtype : null, suffix : null, parameters : null, original : "video/x-f4v", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["f4v"] } : MediaTypeStruct));
	static public var Video_X_Fli : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "x-fli", suffix : null, parameters : null, original : "video/x-fli", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["fli"] } : MediaTypeStruct));
	static public var Video_X_Flv : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "x-flv", suffix : null, parameters : null, original : "video/x-flv", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["flv"] } : MediaTypeStruct));
	static public var Video_X_M4v : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : false, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : "x-m4v", subtype : null, suffix : null, parameters : null, original : "video/x-m4v", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["m4v"] } : MediaTypeStruct));
	static public var Video_X_Matroska : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "x-matroska", suffix : null, parameters : null, original : "video/x-matroska", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["mkv", "mk3d", "mks"] } : MediaTypeStruct));
	static public var Video_X_Mng : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "x-mng", suffix : null, parameters : null, original : "video/x-mng", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["mng"] } : MediaTypeStruct));
	static public var Video_X_Ms_Asf : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "x-ms-asf", suffix : null, parameters : null, original : "video/x-ms-asf", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["asf", "asx"] } : MediaTypeStruct));
	static public var Video_X_Ms_Vob : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "x-ms-vob", suffix : null, parameters : null, original : "video/x-ms-vob", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["vob"] } : MediaTypeStruct));
	static public var Video_X_Ms_Wm : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "x-ms-wm", suffix : null, parameters : null, original : "video/x-ms-wm", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["wm"] } : MediaTypeStruct));
	static public var Video_X_Ms_Wmv : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "x-ms-wmv", suffix : null, parameters : null, original : "video/x-ms-wmv", charset : null, source : (("apache" : MediaTypeSource)), compressible : false, extensions : ["wmv"] } : MediaTypeStruct));
	static public var Video_X_Ms_Wmx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "x-ms-wmx", suffix : null, parameters : null, original : "video/x-ms-wmx", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["wmx"] } : MediaTypeStruct));
	static public var Video_X_Ms_Wvx : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "x-ms-wvx", suffix : null, parameters : null, original : "video/x-ms-wvx", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["wvx"] } : MediaTypeStruct));
	static public var Video_X_Msvideo : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "x-msvideo", suffix : null, parameters : null, original : "video/x-msvideo", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["avi"] } : MediaTypeStruct));
	static public var Video_X_Sgi_Movie : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "x-sgi-movie", suffix : null, parameters : null, original : "video/x-sgi-movie", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["movie"] } : MediaTypeStruct));
	static public var Video_X_Smv : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : true, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "video", tree : null, subtype : "x-smv", suffix : null, parameters : null, original : "video/x-smv", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["smv"] } : MediaTypeStruct));
	static public var X_Conference_X_Cooltalk : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "x-conference", tree : null, subtype : "x-cooltalk", suffix : null, parameters : null, original : "x-conference/x-cooltalk", charset : null, source : (("apache" : MediaTypeSource)), compressible : null, extensions : ["ice"] } : MediaTypeStruct));
	static public var X_Shader_X_Fragment : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "x-shader", tree : null, subtype : "x-fragment", suffix : null, parameters : null, original : "x-shader/x-fragment", charset : null, source : null, compressible : true, extensions : null } : MediaTypeStruct));
	static public var X_Shader_X_Vertex : MediaTypeConst = @:mime (({ isApplication : false, isAudio : false, isExample : false, isImage : false, isMessage : false, isModel : false, isMultipart : false, isText : false, isVideo : false, isStandard : true, isVendor : false, isPersonal : false, isUnregistered : false, isXml : false, isJson : false, toplevel : "x-shader", tree : null, subtype : "x-vertex", suffix : null, parameters : null, original : "x-shader/x-vertex", charset : null, source : null, compressible : true, extensions : null } : MediaTypeStruct));
}